{"version":3,"sources":["../../../../../../build/webpack/loaders/postcss-loader/src/index.js"],"sourcesContent":["import Warning from './Warning'\nimport SyntaxError from './Error'\nimport { normalizeSourceMap, normalizeSourceMapAfterPostcss } from './utils'\n\n/**\n * **PostCSS Loader**\n *\n * Loads && processes CSS with [PostCSS](https://github.com/postcss/postcss)\n *\n * @method loader\n *\n * @param {String} content Source\n * @param {Object} sourceMap Source Map\n * @param {Object} meta Meta\n *\n * @return {callback} callback Result\n */\nexport default async function loader(content, sourceMap, meta) {\n  const loaderSpan = this.currentTraceSpan.traceChild('postcss-loader')\n  const callback = this.async()\n\n  loaderSpan\n    .traceAsyncFn(async () => {\n      const options = this.getOptions()\n      const file = this.resourcePath\n\n      const useSourceMap =\n        typeof options.sourceMap !== 'undefined'\n          ? options.sourceMap\n          : this.sourceMap\n\n      const processOptions = {\n        from: file,\n        to: file,\n      }\n\n      if (useSourceMap) {\n        processOptions.map = {\n          inline: false,\n          annotation: false,\n          ...processOptions.map,\n        }\n      }\n\n      if (sourceMap && processOptions.map) {\n        processOptions.map.prev = loaderSpan\n          .traceChild('normalize-source-map')\n          .traceFn(() => normalizeSourceMap(sourceMap, this.context))\n      }\n\n      let root\n\n      // Reuse PostCSS AST from other loaders\n      if (meta && meta.ast && meta.ast.type === 'postcss') {\n        ;({ root } = meta.ast)\n        loaderSpan.setAttribute('astUsed', 'true')\n      }\n\n      // Initializes postcss with plugins\n      const { postcssWithPlugins } = await options.postcss()\n\n      let result\n\n      try {\n        result = await loaderSpan\n          .traceChild('postcss-process')\n          .traceAsyncFn(() =>\n            postcssWithPlugins.process(root || content, processOptions)\n          )\n      } catch (error) {\n        if (error.file) {\n          this.addDependency(error.file)\n        }\n\n        if (error.name === 'CssSyntaxError') {\n          throw new SyntaxError(error)\n        }\n\n        throw error\n      }\n\n      for (const warning of result.warnings()) {\n        this.emitWarning(new Warning(warning))\n      }\n\n      for (const message of result.messages) {\n        // eslint-disable-next-line default-case\n        switch (message.type) {\n          case 'dependency':\n            this.addDependency(message.file)\n            break\n          case 'build-dependency':\n            this.addBuildDependency(message.file)\n            break\n          case 'missing-dependency':\n            this.addMissingDependency(message.file)\n            break\n          case 'context-dependency':\n            this.addContextDependency(message.file)\n            break\n          case 'dir-dependency':\n            this.addContextDependency(message.dir)\n            break\n          case 'asset':\n            if (message.content && message.file) {\n              this.emitFile(\n                message.file,\n                message.content,\n                message.sourceMap,\n                message.info\n              )\n            }\n        }\n      }\n\n      // eslint-disable-next-line no-undefined\n      let map = result.map ? result.map.toJSON() : undefined\n\n      if (map && useSourceMap) {\n        map = normalizeSourceMapAfterPostcss(map, this.context)\n      }\n\n      const ast = {\n        type: 'postcss',\n        version: result.processor.version,\n        root: result.root,\n      }\n\n      return [result.css, map, { ast }]\n    })\n    .then(\n      ([css, map, { ast }]) => {\n        callback?.(null, css, map, { ast })\n      },\n      (err) => {\n        callback?.(err)\n      }\n    )\n}\n"],"names":["loader","content","sourceMap","meta","loaderSpan","currentTraceSpan","traceChild","callback","async","traceAsyncFn","options","getOptions","file","resourcePath","useSourceMap","processOptions","from","to","map","inline","annotation","prev","traceFn","context","root","ast","type","setAttribute","postcssWithPlugins","postcss","result","process","error","addDependency","name","warning","warnings","emitWarning","message","messages","addBuildDependency","addMissingDependency","addContextDependency","dir","emitFile","info","toJSON","undefined","version","processor","css","then","err"],"mappings":"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"}