{"version":3,"sources":["../../../../../../../build/webpack/loaders/css-loader/src/plugins/postcss-url-parser.js"],"sourcesContent":["import valueParser from 'next/dist/compiled/postcss-value-parser'\n\nimport {\n  resolveRequests,\n  normalizeUrl,\n  requestify,\n  isUrlRequestable,\n  isDataUrl,\n  WEBPACK_IGNORE_COMMENT_REGEXP,\n} from '../utils'\n\nconst isUrlFunc = /url/i\nconst isImageSetFunc = /^(?:-webkit-)?image-set$/i\nconst needParseDeclaration = /(?:url|(?:-webkit-)?image-set)\\(/i\n\nfunction getNodeFromUrlFunc(node) {\n  return node.nodes && node.nodes[0]\n}\n\nfunction getWebpackIgnoreCommentValue(index, nodes, inBetween) {\n  if (index === 0 && typeof inBetween !== 'undefined') {\n    return inBetween\n  }\n\n  let prevValueNode = nodes[index - 1]\n\n  if (!prevValueNode) {\n    // eslint-disable-next-line consistent-return\n    return\n  }\n\n  if (prevValueNode.type === 'space') {\n    if (!nodes[index - 2]) {\n      // eslint-disable-next-line consistent-return\n      return\n    }\n\n    prevValueNode = nodes[index - 2]\n  }\n\n  if (prevValueNode.type !== 'comment') {\n    // eslint-disable-next-line consistent-return\n    return\n  }\n\n  const matched = prevValueNode.value.match(WEBPACK_IGNORE_COMMENT_REGEXP)\n\n  return matched && matched[2] === 'true'\n}\n\nfunction shouldHandleURL(url, declaration, result, isSupportDataURLInNewURL) {\n  if (url.length === 0) {\n    result.warn(`Unable to find uri in '${declaration.toString()}'`, {\n      node: declaration,\n    })\n\n    return false\n  }\n\n  if (isDataUrl(url) && isSupportDataURLInNewURL) {\n    try {\n      decodeURIComponent(url)\n    } catch (ignoreError) {\n      return false\n    }\n\n    return true\n  }\n\n  if (!isUrlRequestable(url)) {\n    return false\n  }\n\n  return true\n}\n\nfunction parseDeclaration(declaration, key, result, isSupportDataURLInNewURL) {\n  if (!needParseDeclaration.test(declaration[key])) {\n    return\n  }\n\n  const parsed = valueParser(\n    declaration.raws && declaration.raws.value && declaration.raws.value.raw\n      ? declaration.raws.value.raw\n      : declaration[key]\n  )\n\n  let inBetween\n\n  if (declaration.raws && declaration.raws.between) {\n    const lastCommentIndex = declaration.raws.between.lastIndexOf('/*')\n\n    const matched = declaration.raws.between\n      .slice(lastCommentIndex)\n      .match(WEBPACK_IGNORE_COMMENT_REGEXP)\n\n    if (matched) {\n      inBetween = matched[2] === 'true'\n    }\n  }\n\n  let isIgnoreOnDeclaration = false\n\n  const prevNode = declaration.prev()\n\n  if (prevNode && prevNode.type === 'comment') {\n    const matched = prevNode.text.match(WEBPACK_IGNORE_COMMENT_REGEXP)\n\n    if (matched) {\n      isIgnoreOnDeclaration = matched[2] === 'true'\n    }\n  }\n\n  let needIgnore\n\n  const parsedURLs = []\n\n  parsed.walk((valueNode, index, valueNodes) => {\n    if (valueNode.type !== 'function') {\n      return\n    }\n\n    if (isUrlFunc.test(valueNode.value)) {\n      needIgnore = getWebpackIgnoreCommentValue(index, valueNodes, inBetween)\n\n      if (\n        (isIgnoreOnDeclaration && typeof needIgnore === 'undefined') ||\n        needIgnore\n      ) {\n        if (needIgnore) {\n          // eslint-disable-next-line no-undefined\n          needIgnore = undefined\n        }\n\n        return\n      }\n\n      const { nodes } = valueNode\n      const isStringValue = nodes.length !== 0 && nodes[0].type === 'string'\n      let url = isStringValue ? nodes[0].value : valueParser.stringify(nodes)\n      url = normalizeUrl(url, isStringValue)\n\n      // Do not traverse inside `url`\n      if (\n        !shouldHandleURL(url, declaration, result, isSupportDataURLInNewURL)\n      ) {\n        // eslint-disable-next-line consistent-return\n        return false\n      }\n\n      const queryParts = url.split('!')\n      let prefix\n\n      if (queryParts.length > 1) {\n        url = queryParts.pop()\n        prefix = queryParts.join('!')\n      }\n\n      parsedURLs.push({\n        declaration,\n        parsed,\n        node: getNodeFromUrlFunc(valueNode),\n        prefix,\n        url,\n        needQuotes: false,\n      })\n\n      // eslint-disable-next-line consistent-return\n      return false\n    } else if (isImageSetFunc.test(valueNode.value)) {\n      for (const [innerIndex, nNode] of valueNode.nodes.entries()) {\n        const { type, value } = nNode\n\n        if (type === 'function' && isUrlFunc.test(value)) {\n          needIgnore = getWebpackIgnoreCommentValue(innerIndex, valueNode.nodes)\n\n          if (\n            (isIgnoreOnDeclaration && typeof needIgnore === 'undefined') ||\n            needIgnore\n          ) {\n            if (needIgnore) {\n              // eslint-disable-next-line no-undefined\n              needIgnore = undefined\n            }\n\n            // eslint-disable-next-line no-continue\n            continue\n          }\n\n          const { nodes } = nNode\n          const isStringValue = nodes.length !== 0 && nodes[0].type === 'string'\n          let url = isStringValue\n            ? nodes[0].value\n            : valueParser.stringify(nodes)\n          url = normalizeUrl(url, isStringValue)\n\n          // Do not traverse inside `url`\n          if (\n            !shouldHandleURL(url, declaration, result, isSupportDataURLInNewURL)\n          ) {\n            // eslint-disable-next-line consistent-return\n            return false\n          }\n\n          const queryParts = url.split('!')\n          let prefix\n\n          if (queryParts.length > 1) {\n            url = queryParts.pop()\n            prefix = queryParts.join('!')\n          }\n\n          parsedURLs.push({\n            declaration,\n            parsed,\n            node: getNodeFromUrlFunc(nNode),\n            prefix,\n            url,\n            needQuotes: false,\n          })\n        } else if (type === 'string') {\n          needIgnore = getWebpackIgnoreCommentValue(innerIndex, valueNode.nodes)\n\n          if (\n            (isIgnoreOnDeclaration && typeof needIgnore === 'undefined') ||\n            needIgnore\n          ) {\n            if (needIgnore) {\n              // eslint-disable-next-line no-undefined\n              needIgnore = undefined\n            }\n\n            // eslint-disable-next-line no-continue\n            continue\n          }\n\n          let url = normalizeUrl(value, true)\n\n          // Do not traverse inside `url`\n          if (\n            !shouldHandleURL(url, declaration, result, isSupportDataURLInNewURL)\n          ) {\n            // eslint-disable-next-line consistent-return\n            return false\n          }\n\n          const queryParts = url.split('!')\n          let prefix\n\n          if (queryParts.length > 1) {\n            url = queryParts.pop()\n            prefix = queryParts.join('!')\n          }\n\n          parsedURLs.push({\n            declaration,\n            parsed,\n            node: nNode,\n            prefix,\n            url,\n            needQuotes: true,\n          })\n        }\n      }\n\n      // Do not traverse inside `image-set`\n      // eslint-disable-next-line consistent-return\n      return false\n    }\n  })\n\n  // eslint-disable-next-line consistent-return\n  return parsedURLs\n}\n\nconst plugin = (options = {}) => {\n  return {\n    postcssPlugin: 'postcss-url-parser',\n    prepare(result) {\n      const parsedDeclarations = []\n\n      return {\n        Declaration(declaration) {\n          const { isSupportDataURLInNewURL } = options\n          const parsedURL = parseDeclaration(\n            declaration,\n            'value',\n            result,\n            isSupportDataURLInNewURL\n          )\n\n          if (!parsedURL) {\n            return\n          }\n\n          parsedDeclarations.push(...parsedURL)\n        },\n        async OnceExit() {\n          if (parsedDeclarations.length === 0) {\n            return\n          }\n\n          const resolvedDeclarations = await Promise.all(\n            parsedDeclarations.map(async (parsedDeclaration) => {\n              const { url } = parsedDeclaration\n\n              if (options.filter) {\n                const needKeep = await options.filter(url)\n\n                if (!needKeep) {\n                  // eslint-disable-next-line consistent-return\n                  return\n                }\n              }\n\n              if (isDataUrl(url)) {\n                // eslint-disable-next-line consistent-return\n                return parsedDeclaration\n              }\n\n              const splittedUrl = url.split(/(\\?)?#/)\n              const [pathname, query, hashOrQuery] = splittedUrl\n\n              let hash = query ? '?' : ''\n              hash += hashOrQuery ? `#${hashOrQuery}` : ''\n\n              const { needToResolveURL, rootContext } = options\n              const request = requestify(\n                pathname,\n                rootContext,\n                needToResolveURL\n              )\n\n              if (!needToResolveURL) {\n                // eslint-disable-next-line consistent-return\n                return { ...parsedDeclaration, url: request, hash }\n              }\n\n              const { resolver, context } = options\n              const resolvedUrl = await resolveRequests(resolver, context, [\n                ...new Set([request, url]),\n              ])\n\n              if (!resolvedUrl) {\n                // eslint-disable-next-line consistent-return\n                return\n              }\n\n              // eslint-disable-next-line consistent-return\n              return { ...parsedDeclaration, url: resolvedUrl, hash }\n            })\n          )\n\n          const urlToNameMap = new Map()\n          const urlToReplacementMap = new Map()\n\n          let hasUrlImportHelper = false\n\n          for (\n            let index = 0;\n            index <= resolvedDeclarations.length - 1;\n            index++\n          ) {\n            const item = resolvedDeclarations[index]\n\n            if (!item) {\n              // eslint-disable-next-line no-continue\n              continue\n            }\n\n            if (!hasUrlImportHelper) {\n              options.imports.push({\n                type: 'get_url_import',\n                importName: '___CSS_LOADER_GET_URL_IMPORT___',\n                url: options.urlHandler(\n                  require.resolve('../runtime/getUrl.js')\n                ),\n                index: -1,\n              })\n\n              hasUrlImportHelper = true\n            }\n\n            const { url, prefix } = item\n            const newUrl = prefix ? `${prefix}!${url}` : url\n            let importName = urlToNameMap.get(newUrl)\n\n            if (!importName) {\n              importName = `___CSS_LOADER_URL_IMPORT_${urlToNameMap.size}___`\n              urlToNameMap.set(newUrl, importName)\n\n              options.imports.push({\n                type: 'url',\n                importName,\n                url: options.needToResolveURL\n                  ? options.urlHandler(newUrl)\n                  : JSON.stringify(newUrl),\n                index,\n              })\n            }\n\n            const { hash, needQuotes } = item\n            const replacementKey = JSON.stringify({ newUrl, hash, needQuotes })\n            let replacementName = urlToReplacementMap.get(replacementKey)\n\n            if (!replacementName) {\n              replacementName = `___CSS_LOADER_URL_REPLACEMENT_${urlToReplacementMap.size}___`\n              urlToReplacementMap.set(replacementKey, replacementName)\n\n              options.replacements.push({\n                replacementName,\n                importName,\n                hash,\n                needQuotes,\n              })\n            }\n\n            // eslint-disable-next-line no-param-reassign\n            item.node.type = 'word'\n            // eslint-disable-next-line no-param-reassign\n            item.node.value = replacementName\n            // eslint-disable-next-line no-param-reassign\n            item.declaration.value = item.parsed.toString()\n          }\n        },\n      }\n    },\n  }\n}\n\nplugin.postcss = true\n\nexport default plugin\n"],"names":["isUrlFunc","isImageSetFunc","needParseDeclaration","getNodeFromUrlFunc","node","nodes","getWebpackIgnoreCommentValue","index","inBetween","prevValueNode","type","matched","value","match","shouldHandleURL","url","declaration","result","isSupportDataURLInNewURL","length","warn","toString","decodeURIComponent","ignoreError","parseDeclaration","key","test","parsed","raws","raw","between","lastCommentIndex","lastIndexOf","slice","isIgnoreOnDeclaration","prevNode","prev","text","needIgnore","parsedURLs","walk","valueNode","valueNodes","undefined","isStringValue","stringify","queryParts","split","prefix","pop","join","push","needQuotes","innerIndex","nNode","entries","plugin","options","postcssPlugin","prepare","parsedDeclarations","Declaration","parsedURL","OnceExit","resolvedDeclarations","Promise","all","map","parsedDeclaration","filter","needKeep","splittedUrl","pathname","query","hashOrQuery","hash","needToResolveURL","rootContext","request","resolver","context","resolvedUrl","Set","urlToNameMap","Map","urlToReplacementMap","hasUrlImportHelper","item","imports","importName","urlHandler","require","resolve","newUrl","get","size","set","JSON","replacementKey","replacementName","replacements","postcss"],"mappings":"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"}