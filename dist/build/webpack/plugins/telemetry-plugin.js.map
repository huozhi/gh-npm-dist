{"version":3,"sources":["../../../../build/webpack/plugins/telemetry-plugin.ts"],"sourcesContent":["import type { webpack5 as webpack } from 'next/dist/compiled/webpack/webpack'\n\ntype Feature =\n  | 'next/image'\n  | 'next/script'\n  | 'next/dynamic'\n  | 'swcLoader'\n  | 'swcMinify'\n\ninterface FeatureUsage {\n  featureName: Feature\n  invocationCount: number\n}\n\n/**\n * A vertex in the module graph.\n */\ninterface Module {\n  type: string\n  identifier(): string\n}\n\n/**\n * An edge in the module graph.\n */\ninterface Connection {\n  originModule: unknown\n}\n\n// Map of a feature module to the file it belongs in the next package.\nconst FEATURE_MODULE_MAP: ReadonlyMap<Feature, string> = new Map([\n  ['next/image', '/next/image.js'],\n  ['next/script', '/next/script.js'],\n  ['next/dynamic', '/next/dynamic.js'],\n])\n\n// List of build features used in webpack configuration\nconst BUILD_FEATURES: Array<Feature> = ['swcLoader', 'swcMinify']\n\n/**\n * Plugin that queries the ModuleGraph to look for modules that correspond to\n * certain features (e.g. next/image and next/script) and record how many times\n * they are imported.\n */\nexport class TelemetryPlugin implements webpack.WebpackPluginInstance {\n  private usageTracker = new Map<Feature, FeatureUsage>()\n\n  // Build feature usage is on/off and is known before the build starts\n  constructor(buildFeaturesMap: Map<Feature, boolean>) {\n    for (const featureName of BUILD_FEATURES) {\n      this.usageTracker.set(featureName, {\n        featureName,\n        invocationCount: buildFeaturesMap.get(featureName) ? 1 : 0,\n      })\n    }\n\n    for (const featureName of FEATURE_MODULE_MAP.keys()) {\n      this.usageTracker.set(featureName, {\n        featureName,\n        invocationCount: 0,\n      })\n    }\n  }\n\n  apply(compiler: webpack.Compiler): void {\n    compiler.hooks.make.tapAsync(\n      TelemetryPlugin.name,\n      async (compilation: webpack.Compilation, callback: () => void) => {\n        compilation.hooks.finishModules.tapAsync(\n          TelemetryPlugin.name,\n          async (modules: Iterable<Module>, modulesFinish: () => void) => {\n            for (const module of modules) {\n              const feature = findFeatureInModule(module)\n              if (!feature) {\n                continue\n              }\n              const connections = (\n                compilation as any\n              ).moduleGraph.getIncomingConnections(module)\n              const originModules =\n                findUniqueOriginModulesInConnections(connections)\n              this.usageTracker.get(feature)!.invocationCount =\n                originModules.size\n            }\n            modulesFinish()\n          }\n        )\n        callback()\n      }\n    )\n  }\n\n  usages(): FeatureUsage[] {\n    return [...this.usageTracker.values()]\n  }\n}\n\n/**\n * Determine if there is a feature of interest in the specified 'module'.\n */\nfunction findFeatureInModule(module: Module): Feature | undefined {\n  if (module.type !== 'javascript/auto') {\n    return\n  }\n  for (const [feature, path] of FEATURE_MODULE_MAP) {\n    if (module.identifier().replace(/\\\\/g, '/').endsWith(path)) {\n      return feature\n    }\n  }\n}\n\n/**\n * Find unique origin modules in the specified 'connections', which possibly\n * contains more than one connection for a module due to different types of\n * dependency.\n */\nfunction findUniqueOriginModulesInConnections(\n  connections: Connection[]\n): Set<unknown> {\n  const originModules = new Set()\n  for (const connection of connections) {\n    if (!originModules.has(connection.originModule)) {\n      originModules.add(connection.originModule)\n    }\n  }\n  return originModules\n}\n"],"names":["FEATURE_MODULE_MAP","Map","BUILD_FEATURES","TelemetryPlugin","buildFeaturesMap","usageTracker","featureName","set","invocationCount","get","keys","apply","compiler","hooks","make","tapAsync","name","compilation","callback","finishModules","modules","modulesFinish","module","feature","findFeatureInModule","connections","moduleGraph","getIncomingConnections","originModules","findUniqueOriginModulesInConnections","size","usages","values","type","path","identifier","replace","endsWith","Set","connection","has","originModule","add"],"mappings":"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"}