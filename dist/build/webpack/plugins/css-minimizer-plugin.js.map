{"version":3,"sources":["../../../../build/webpack/plugins/css-minimizer-plugin.ts"],"sourcesContent":["import cssnanoSimple from 'next/dist/compiled/cssnano-simple'\nimport postcssScss from 'next/dist/compiled/postcss-scss'\nimport postcss, { Parser } from 'postcss'\nimport { webpack, sources } from 'next/dist/compiled/webpack/webpack'\nimport type { webpack5 } from 'next/dist/compiled/webpack/webpack'\nimport { spans } from './profiling-plugin'\n\n// https://github.com/NMFR/optimize-css-assets-webpack-plugin/blob/0a410a9bf28c7b0e81a3470a13748e68ca2f50aa/src/index.js#L20\nconst CSS_REGEX = /\\.css(\\?.*)?$/i\n\ntype CssMinimizerPluginOptions = {\n  postcssOptions: {\n    map: false | { prev?: string | false; inline: boolean; annotation: boolean }\n  }\n}\n\nexport class CssMinimizerPlugin {\n  __next_css_remove = true\n\n  private options: CssMinimizerPluginOptions\n\n  constructor(options: CssMinimizerPluginOptions) {\n    this.options = options\n  }\n\n  optimizeAsset(file: string, asset: any) {\n    const postcssOptions = {\n      ...this.options.postcssOptions,\n      to: file,\n      from: file,\n\n      // We don't actually add this parser to support Sass. It can also be used\n      // for inline comment support. See the README:\n      // https://github.com/postcss/postcss-scss/blob/master/README.md#2-inline-comments-for-postcss\n      parser: postcssScss as any as Parser,\n    }\n\n    let input: string\n    if (postcssOptions.map && asset.sourceAndMap) {\n      const { source, map } = asset.sourceAndMap()\n      input = source\n      postcssOptions.map.prev = map ? map : false\n    } else {\n      input = asset.source()\n    }\n\n    return postcss([cssnanoSimple({}, postcss)])\n      .process(input, postcssOptions)\n      .then((res) => {\n        if (res.map) {\n          return new sources.SourceMapSource(res.css, file, res.map.toJSON())\n        } else {\n          return new sources.RawSource(res.css)\n        }\n      })\n  }\n\n  apply(compiler: webpack5.Compiler) {\n    compiler.hooks.compilation.tap('CssMinimizerPlugin', (compilation: any) => {\n      const cache = compilation.getCache('CssMinimizerPlugin')\n      compilation.hooks.processAssets.tapPromise(\n        {\n          name: 'CssMinimizerPlugin',\n          // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        },\n        async (assets: any) => {\n          const compilationSpan = spans.get(compilation) || spans.get(compiler)\n          const cssMinimizerSpan = compilationSpan!.traceChild(\n            'css-minimizer-plugin'\n          )\n          cssMinimizerSpan.setAttribute('webpackVersion', 5)\n\n          return cssMinimizerSpan.traceAsyncFn(async () => {\n            const files = Object.keys(assets)\n            await Promise.all(\n              files\n                .filter((file) => CSS_REGEX.test(file))\n                .map(async (file) => {\n                  const assetSpan = cssMinimizerSpan.traceChild('minify-css')\n                  assetSpan.setAttribute('file', file)\n\n                  return assetSpan.traceAsyncFn(async () => {\n                    const asset = assets[file]\n\n                    const etag = cache.getLazyHashedEtag(asset)\n\n                    const cachedResult = await cache.getPromise(file, etag)\n\n                    assetSpan.setAttribute(\n                      'cache',\n                      cachedResult ? 'HIT' : 'MISS'\n                    )\n                    if (cachedResult) {\n                      assets[file] = cachedResult\n                      return\n                    }\n\n                    const result = await this.optimizeAsset(file, asset)\n                    await cache.storePromise(file, etag, result)\n                    assets[file] = result\n                  })\n                })\n            )\n          })\n        }\n      )\n    })\n  }\n}\n"],"names":["CSS_REGEX","CssMinimizerPlugin","options","__next_css_remove","optimizeAsset","file","asset","postcssOptions","to","from","parser","input","map","sourceAndMap","source","prev","cssnanoSimple","process","then","res","SourceMapSource","css","toJSON","RawSource","apply","compiler","hooks","compilation","tap","cache","getCache","processAssets","tapPromise","name","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","assets","compilationSpan","get","cssMinimizerSpan","traceChild","setAttribute","traceAsyncFn","files","Object","keys","Promise","all","filter","test","assetSpan","etag","getLazyHashedEtag","cachedResult","getPromise","result","storePromise"],"mappings":"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"}