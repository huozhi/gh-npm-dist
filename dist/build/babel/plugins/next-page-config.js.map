{"version":3,"sources":["../../../../build/babel/plugins/next-page-config.ts"],"sourcesContent":["import {\n  NodePath,\n  PluginObj,\n  PluginPass,\n  types as BabelTypes,\n  Visitor,\n} from 'next/dist/compiled/babel/core'\nimport { PageConfig } from 'next/types'\nimport { STRING_LITERAL_DROP_BUNDLE } from '../../../shared/lib/constants'\n\nconst CONFIG_KEY = 'config'\n\n// replace program path with just a variable with the drop identifier\nfunction replaceBundle(path: any, t: typeof BabelTypes): void {\n  path.parentPath.replaceWith(\n    t.program(\n      [\n        t.variableDeclaration('const', [\n          t.variableDeclarator(\n            t.identifier(STRING_LITERAL_DROP_BUNDLE),\n            t.stringLiteral(`${STRING_LITERAL_DROP_BUNDLE} ${Date.now()}`)\n          ),\n        ]),\n      ],\n      []\n    )\n  )\n}\n\nfunction errorMessage(state: any, details: string): string {\n  const pageName =\n    (state.filename || '').split(state.cwd || '').pop() || 'unknown'\n  return `Invalid page config export found. ${details} in file ${pageName}. See: https://nextjs.org/docs/messages/invalid-page-config`\n}\n\ninterface ConfigState extends PluginPass {\n  bundleDropped?: boolean\n}\n\n// config to parsing pageConfig for client bundles\nexport default function nextPageConfig({\n  types: t,\n}: {\n  types: typeof BabelTypes\n}): PluginObj {\n  return {\n    visitor: {\n      Program: {\n        enter(path, state) {\n          path.traverse(\n            {\n              ExportDeclaration(exportPath, exportState) {\n                if (\n                  BabelTypes.isExportNamedDeclaration(exportPath) &&\n                  (\n                    exportPath.node as BabelTypes.ExportNamedDeclaration\n                  ).specifiers?.some((specifier) => {\n                    return (\n                      (t.isIdentifier(specifier.exported)\n                        ? specifier.exported.name\n                        : specifier.exported.value) === CONFIG_KEY\n                    )\n                  }) &&\n                  BabelTypes.isStringLiteral(\n                    (exportPath.node as BabelTypes.ExportNamedDeclaration)\n                      .source\n                  )\n                ) {\n                  throw new Error(\n                    errorMessage(\n                      exportState,\n                      'Expected object but got export from'\n                    )\n                  )\n                }\n              },\n              ExportNamedDeclaration(\n                exportPath: NodePath<BabelTypes.ExportNamedDeclaration>,\n                exportState: any\n              ) {\n                if (\n                  exportState.bundleDropped ||\n                  (!exportPath.node.declaration &&\n                    exportPath.node.specifiers.length === 0)\n                ) {\n                  return\n                }\n\n                const config: PageConfig = {}\n                const declarations: BabelTypes.VariableDeclarator[] = [\n                  ...((\n                    exportPath.node\n                      .declaration as BabelTypes.VariableDeclaration\n                  )?.declarations || []),\n                  exportPath.scope.getBinding(CONFIG_KEY)?.path\n                    .node as BabelTypes.VariableDeclarator,\n                ].filter(Boolean)\n\n                for (const specifier of exportPath.node.specifiers) {\n                  if (\n                    (t.isIdentifier(specifier.exported)\n                      ? specifier.exported.name\n                      : specifier.exported.value) === CONFIG_KEY\n                  ) {\n                    // export {} from 'somewhere'\n                    if (BabelTypes.isStringLiteral(exportPath.node.source)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Expected object but got import`\n                        )\n                      )\n                      // import hello from 'world'\n                      // export { hello as config }\n                    } else if (\n                      BabelTypes.isIdentifier(\n                        (specifier as BabelTypes.ExportSpecifier).local\n                      )\n                    ) {\n                      if (\n                        BabelTypes.isImportSpecifier(\n                          exportPath.scope.getBinding(\n                            (specifier as BabelTypes.ExportSpecifier).local.name\n                          )?.path.node\n                        )\n                      ) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Expected object but got import`\n                          )\n                        )\n                      }\n                    }\n                  }\n                }\n\n                for (const declaration of declarations) {\n                  if (\n                    !BabelTypes.isIdentifier(declaration.id, {\n                      name: CONFIG_KEY,\n                    })\n                  ) {\n                    continue\n                  }\n\n                  let { init } = declaration\n                  if (BabelTypes.isTSAsExpression(init)) {\n                    init = init.expression\n                  }\n\n                  if (!BabelTypes.isObjectExpression(init)) {\n                    const got = init ? init.type : 'undefined'\n                    throw new Error(\n                      errorMessage(\n                        exportState,\n                        `Expected object but got ${got}`\n                      )\n                    )\n                  }\n\n                  for (const prop of init.properties) {\n                    if (BabelTypes.isSpreadElement(prop)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Property spread is not allowed`\n                        )\n                      )\n                    }\n                    const { name } = prop.key as BabelTypes.Identifier\n                    if (BabelTypes.isIdentifier(prop.key, { name: 'amp' })) {\n                      if (!BabelTypes.isObjectProperty(prop)) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Invalid property \"${name}\"`\n                          )\n                        )\n                      }\n                      if (\n                        !BabelTypes.isBooleanLiteral(prop.value) &&\n                        !BabelTypes.isStringLiteral(prop.value)\n                      ) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Invalid value for \"${name}\"`\n                          )\n                        )\n                      }\n                      config.amp = prop.value.value as PageConfig['amp']\n                    }\n                  }\n                }\n\n                if (config.amp === true) {\n                  if (!exportState.file?.opts?.caller.isDev) {\n                    // don't replace bundle in development so HMR can track\n                    // dependencies and trigger reload when they are changed\n                    replaceBundle(exportPath, t)\n                  }\n                  exportState.bundleDropped = true\n                  return\n                }\n              },\n            },\n            state\n          )\n        },\n      },\n    } as Visitor<ConfigState>,\n  }\n}\n"],"names":["nextPageConfig","CONFIG_KEY","replaceBundle","path","t","parentPath","replaceWith","program","variableDeclaration","variableDeclarator","identifier","stringLiteral","Date","now","errorMessage","state","details","pageName","filename","split","cwd","pop","types","visitor","Program","enter","traverse","ExportDeclaration","exportPath","exportState","isExportNamedDeclaration","node","specifiers","some","specifier","isIdentifier","exported","name","value","isStringLiteral","source","Error","ExportNamedDeclaration","bundleDropped","declaration","length","config","declarations","scope","getBinding","filter","Boolean","local","isImportSpecifier","id","init","isTSAsExpression","expression","isObjectExpression","got","type","prop","properties","isSpreadElement","key","isObjectProperty","isBooleanLiteral","amp","file","opts","caller","isDev"],"mappings":"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"}