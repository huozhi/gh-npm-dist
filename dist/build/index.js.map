{"version":3,"sources":["../../build/index.ts"],"sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport chalk from 'next/dist/compiled/chalk'\nimport crypto from 'crypto'\nimport { isMatch } from 'next/dist/compiled/micromatch'\nimport { promises, writeFileSync } from 'fs'\nimport { Worker } from '../lib/worker'\nimport devalue from 'next/dist/compiled/devalue'\nimport { escapeStringRegexp } from '../shared/lib/escape-regexp'\nimport findUp from 'next/dist/compiled/find-up'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport path, { join } from 'path'\nimport formatWebpackMessages from '../client/dev/error-overlay/format-webpack-messages'\nimport {\n  STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n  MIDDLEWARE_ROUTE,\n} from '../lib/constants'\nimport { fileExists } from '../lib/file-exists'\nimport { findPagesDir } from '../lib/find-pages-dir'\nimport loadCustomRoutes, {\n  CustomRoutes,\n  getRedirectStatus,\n  modifyRouteRegex,\n  normalizeRouteRegex,\n  Redirect,\n  Rewrite,\n  RouteType,\n} from '../lib/load-custom-routes'\nimport { nonNullable } from '../lib/non-nullable'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport { verifyAndLint } from '../lib/verifyAndLint'\nimport { verifyTypeScriptSetup } from '../lib/verifyTypeScriptSetup'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  FONT_MANIFEST,\n  IMAGES_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  PRERENDER_MANIFEST,\n  MIDDLEWARE_FLIGHT_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  SERVER_FILES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  MIDDLEWARE_MANIFEST,\n} from '../shared/lib/constants'\nimport {\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../shared/lib/router/utils'\nimport { __ApiPreviewProps } from '../server/api-utils'\nimport loadConfig from '../server/config'\nimport { isTargetLikeServerless } from '../server/utils'\nimport { BuildManifest } from '../server/get-page-files'\nimport { normalizePagePath } from '../server/normalize-page-path'\nimport { getPagePath } from '../server/require'\nimport * as ciEnvironment from '../telemetry/ci-info'\nimport {\n  eventBuildCompleted,\n  eventBuildOptimize,\n  eventCliSession,\n  eventBuildFeatureUsage,\n  eventNextPlugins,\n  eventTypeCheckCompleted,\n  EVENT_BUILD_FEATURE_USAGE,\n  EventBuildFeatureUsage,\n} from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport { CompilerResult, runCompiler } from './compiler'\nimport { createEntrypoints, createPagesMapping } from './entries'\nimport { generateBuildId } from './generate-build-id'\nimport { isWriteable } from './is-writeable'\nimport * as Log from './output/log'\nimport createSpinner from './spinner'\nimport { trace, flushAllTraces, setGlobal } from '../trace'\nimport {\n  collectPages,\n  detectConflictingPaths,\n  computeFromManifest,\n  getJsPageSizeInKb,\n  PageInfo,\n  printCustomRoutes,\n  printTreeView,\n  getUnresolvedModuleFromError,\n  copyTracedFiles,\n  isReservedPage,\n  isCustomErrorPage,\n} from './utils'\nimport getBaseWebpackConfig from './webpack-config'\nimport { PagesManifest } from './webpack/plugins/pages-manifest-plugin'\nimport { writeBuildId } from './write-build-id'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { NextConfigComplete } from '../server/config-shared'\nimport isError, { NextError } from '../lib/is-error'\nimport { TelemetryPlugin } from './webpack/plugins/telemetry-plugin'\nimport { MiddlewareManifest } from './webpack/plugins/middleware-plugin'\nimport type { webpack5 as webpack } from 'next/dist/compiled/webpack/webpack'\nimport { recursiveCopy } from '../lib/recursive-copy'\n\nexport type SsgRoute = {\n  initialRevalidateSeconds: number | false\n  srcRoute: string | null\n  dataRoute: string\n}\n\nexport type DynamicSsgRoute = {\n  routeRegex: string\n  fallback: string | null | false\n  dataRoute: string\n  dataRouteRegex: string\n}\n\nexport type PrerenderManifest = {\n  version: 3\n  routes: { [route: string]: SsgRoute }\n  dynamicRoutes: { [route: string]: DynamicSsgRoute }\n  notFoundRoutes: string[]\n  preview: __ApiPreviewProps\n}\n\nexport default async function build(\n  dir: string,\n  conf = null,\n  reactProductionProfiling = false,\n  debugOutput = false,\n  runLint = true\n): Promise<void> {\n  const nextBuildSpan = trace('next-build', undefined, {\n    version: process.env.__NEXT_VERSION as string,\n  })\n\n  const buildResult = await nextBuildSpan.traceAsyncFn(async () => {\n    // attempt to load global env values so they are available in next.config.js\n    const { loadedEnvFiles } = nextBuildSpan\n      .traceChild('load-dotenv')\n      .traceFn(() => loadEnvConfig(dir, false, Log))\n\n    const config: NextConfigComplete = await nextBuildSpan\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_PRODUCTION_BUILD, dir, conf))\n\n    const distDir = path.join(dir, config.distDir)\n    setGlobal('phase', PHASE_PRODUCTION_BUILD)\n    setGlobal('distDir', distDir)\n\n    const hasConcurrentFeatures = !!config.experimental.concurrentFeatures\n    const hasServerComponents =\n      hasConcurrentFeatures && !!config.experimental.serverComponents\n\n    const { target } = config\n    const buildId: string = await nextBuildSpan\n      .traceChild('generate-buildid')\n      .traceAsyncFn(() => generateBuildId(config.generateBuildId, nanoid))\n\n    const customRoutes: CustomRoutes = await nextBuildSpan\n      .traceChild('load-custom-routes')\n      .traceAsyncFn(() => loadCustomRoutes(config))\n\n    const { headers, rewrites, redirects } = customRoutes\n\n    const cacheDir = path.join(distDir, 'cache')\n    if (ciEnvironment.isCI && !ciEnvironment.hasNextSupport) {\n      const hasCache = await fileExists(cacheDir)\n\n      if (!hasCache) {\n        // Intentionally not piping to stderr in case people fail in CI when\n        // stderr is detected.\n        console.log(\n          `${Log.prefixes.warn} No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache`\n        )\n      }\n    }\n\n    const telemetry = new Telemetry({ distDir })\n    setGlobal('telemetry', telemetry)\n\n    const publicDir = path.join(dir, 'public')\n    const pagesDir = findPagesDir(dir)\n    const hasPublicDir = await fileExists(publicDir)\n\n    telemetry.record(\n      eventCliSession(dir, config, {\n        webpackVersion: 5,\n        cliCommand: 'build',\n        isSrcDir: path.relative(dir, pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n\n    eventNextPlugins(path.resolve(dir)).then((events) =>\n      telemetry.record(events)\n    )\n\n    const ignoreTypeScriptErrors = Boolean(config.typescript.ignoreBuildErrors)\n    const typeCheckStart = process.hrtime()\n    const typeCheckingSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} ${\n        ignoreTypeScriptErrors\n          ? 'Skipping validation of types'\n          : 'Checking validity of types'\n      }`,\n    })\n\n    const verifyResult = await nextBuildSpan\n      .traceChild('verify-typescript-setup')\n      .traceAsyncFn(() =>\n        verifyTypeScriptSetup(\n          dir,\n          pagesDir,\n          !ignoreTypeScriptErrors,\n          config,\n          cacheDir\n        )\n      )\n\n    const typeCheckEnd = process.hrtime(typeCheckStart)\n\n    if (!ignoreTypeScriptErrors) {\n      telemetry.record(\n        eventTypeCheckCompleted({\n          durationInSeconds: typeCheckEnd[0],\n          typescriptVersion: verifyResult.version,\n          inputFilesCount: verifyResult.result?.inputFilesCount,\n          totalFilesCount: verifyResult.result?.totalFilesCount,\n          incremental: verifyResult.result?.incremental,\n        })\n      )\n    }\n\n    if (typeCheckingSpinner) {\n      typeCheckingSpinner.stopAndPersist()\n    }\n\n    const ignoreESLint = Boolean(config.eslint.ignoreDuringBuilds)\n    const eslintCacheDir = path.join(cacheDir, 'eslint/')\n    const shouldLint = !ignoreESLint && runLint\n    if (shouldLint) {\n      await nextBuildSpan\n        .traceChild('verify-and-lint')\n        .traceAsyncFn(async () => {\n          await verifyAndLint(\n            dir,\n            eslintCacheDir,\n            config.eslint?.dirs,\n            config.experimental.cpus,\n            config.experimental.workerThreads,\n            telemetry\n          )\n        })\n    }\n    const buildLintEvent: EventBuildFeatureUsage = {\n      featureName: 'build-lint',\n      invocationCount: shouldLint ? 1 : 0,\n    }\n    telemetry.record({\n      eventName: EVENT_BUILD_FEATURE_USAGE,\n      payload: buildLintEvent,\n    })\n\n    const buildSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Creating an optimized production build`,\n    })\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    const pagePaths: string[] = await nextBuildSpan\n      .traceChild('collect-pages')\n      .traceAsyncFn(() => collectPages(pagesDir, config.pageExtensions))\n    // needed for static exporting since we want to replace with HTML\n    // files\n    const allStaticPages = new Set<string>()\n    let allPageInfos = new Map<string, PageInfo>()\n\n    const previewProps: __ApiPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    }\n\n    const mappedPages = nextBuildSpan\n      .traceChild('create-pages-mapping')\n      .traceFn(() =>\n        createPagesMapping(pagePaths, config.pageExtensions, {\n          isDev: false,\n          hasServerComponents,\n          hasConcurrentFeatures,\n        })\n      )\n\n    const entrypoints = nextBuildSpan\n      .traceChild('create-entrypoints')\n      .traceFn(() =>\n        createEntrypoints(\n          mappedPages,\n          target,\n          buildId,\n          previewProps,\n          config,\n          loadedEnvFiles\n        )\n      )\n    const pageKeys = Object.keys(mappedPages)\n    const hasMiddleware = pageKeys.some((page) => MIDDLEWARE_ROUTE.test(page))\n    const conflictingPublicFiles: string[] = []\n    const hasCustomErrorPage: boolean =\n      mappedPages['/_error'].startsWith('private-next-pages')\n    const hasPages404 = Boolean(\n      mappedPages['/404'] &&\n        mappedPages['/404'].startsWith('private-next-pages')\n    )\n\n    if (hasMiddleware) {\n      Log.warn(\n        `using beta Middleware (not covered by semver) - https://nextjs.org/docs/messages/beta-middleware`\n      )\n    }\n\n    if (hasPublicDir) {\n      const hasPublicUnderScoreNextDir = await fileExists(\n        path.join(publicDir, '_next')\n      )\n      if (hasPublicUnderScoreNextDir) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    await nextBuildSpan\n      .traceChild('public-dir-conflict-check')\n      .traceAsyncFn(async () => {\n        // Check if pages conflict with files in `public`\n        // Only a page of public file can be served, not both.\n        for (const page in mappedPages) {\n          const hasPublicPageFile = await fileExists(\n            path.join(publicDir, page === '/' ? '/index' : page),\n            'file'\n          )\n          if (hasPublicPageFile) {\n            conflictingPublicFiles.push(page)\n          }\n        }\n\n        const numConflicting = conflictingPublicFiles.length\n\n        if (numConflicting) {\n          throw new Error(\n            `Conflicting public and page file${\n              numConflicting === 1 ? ' was' : 's were'\n            } found. https://nextjs.org/docs/messages/conflicting-public-file-page\\n${conflictingPublicFiles.join(\n              '\\n'\n            )}`\n          )\n        }\n      })\n\n    const nestedReservedPages = pageKeys.filter((page) => {\n      return (\n        page.match(/\\/(_app|_document|_error)$/) && path.dirname(page) !== '/'\n      )\n    })\n\n    if (nestedReservedPages.length) {\n      Log.warn(\n        `The following reserved Next.js pages were detected not directly under the pages directory:\\n` +\n          nestedReservedPages.join('\\n') +\n          `\\nSee more info here: https://nextjs.org/docs/messages/nested-reserved-page\\n`\n      )\n    }\n\n    const restrictedRedirectPaths = ['/_next'].map((p) =>\n      config.basePath ? `${config.basePath}${p}` : p\n    )\n\n    const buildCustomRoute = (\n      r: {\n        source: string\n        locale?: false\n        basePath?: false\n        statusCode?: number\n        destination?: string\n      },\n      type: RouteType\n    ) => {\n      const keys: any[] = []\n\n      const routeRegex = pathToRegexp(r.source, keys, {\n        strict: true,\n        sensitive: false,\n        delimiter: '/', // default is `/#?`, but Next does not pass query info\n      })\n      let regexSource = routeRegex.source\n\n      if (!(r as any).internal) {\n        regexSource = modifyRouteRegex(\n          routeRegex.source,\n          type === 'redirect' ? restrictedRedirectPaths : undefined\n        )\n      }\n\n      return {\n        ...r,\n        ...(type === 'redirect'\n          ? {\n              statusCode: getRedirectStatus(r as Redirect),\n              permanent: undefined,\n            }\n          : {}),\n        regex: normalizeRouteRegex(regexSource),\n      }\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const routesManifest: {\n      version: number\n      pages404: boolean\n      basePath: string\n      redirects: Array<ReturnType<typeof buildCustomRoute>>\n      rewrites:\n        | Array<ReturnType<typeof buildCustomRoute>>\n        | {\n            beforeFiles: Array<ReturnType<typeof buildCustomRoute>>\n            afterFiles: Array<ReturnType<typeof buildCustomRoute>>\n            fallback: Array<ReturnType<typeof buildCustomRoute>>\n          }\n      headers: Array<ReturnType<typeof buildCustomRoute>>\n      staticRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dynamicRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dataRoutes: Array<{\n        page: string\n        routeKeys?: { [key: string]: string }\n        dataRouteRegex: string\n        namedDataRouteRegex?: string\n      }>\n      i18n?: {\n        domains?: Array<{\n          http?: true\n          domain: string\n          locales?: string[]\n          defaultLocale: string\n        }>\n        locales: string[]\n        defaultLocale: string\n        localeDetection?: false\n      }\n    } = nextBuildSpan.traceChild('generate-routes-manifest').traceFn(() => ({\n      version: 3,\n      pages404: true,\n      basePath: config.basePath,\n      redirects: redirects.map((r: any) => buildCustomRoute(r, 'redirect')),\n      headers: headers.map((r: any) => buildCustomRoute(r, 'header')),\n      dynamicRoutes: getSortedRoutes(pageKeys)\n        .filter((page) => isDynamicRoute(page) && !page.match(MIDDLEWARE_ROUTE))\n        .map(pageToRoute),\n      staticRoutes: getSortedRoutes(pageKeys)\n        .filter(\n          (page) =>\n            !isDynamicRoute(page) &&\n            !page.match(MIDDLEWARE_ROUTE) &&\n            !isReservedPage(page)\n        )\n        .map(pageToRoute),\n      dataRoutes: [],\n      i18n: config.i18n || undefined,\n    }))\n\n    if (rewrites.beforeFiles.length === 0 && rewrites.fallback.length === 0) {\n      routesManifest.rewrites = rewrites.afterFiles.map((r: any) =>\n        buildCustomRoute(r, 'rewrite')\n      )\n    } else {\n      routesManifest.rewrites = {\n        beforeFiles: rewrites.beforeFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        afterFiles: rewrites.afterFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        fallback: rewrites.fallback.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n      }\n    }\n    const combinedRewrites: Rewrite[] = [\n      ...rewrites.beforeFiles,\n      ...rewrites.afterFiles,\n      ...rewrites.fallback,\n    ]\n\n    const distDirCreated = await nextBuildSpan\n      .traceChild('create-dist-dir')\n      .traceAsyncFn(async () => {\n        try {\n          await promises.mkdir(distDir, { recursive: true })\n          return true\n        } catch (err) {\n          if (isError(err) && err.code === 'EPERM') {\n            return false\n          }\n          throw err\n        }\n      })\n\n    if (!distDirCreated || !(await isWriteable(distDir))) {\n      throw new Error(\n        '> Build directory is not writeable. https://nextjs.org/docs/messages/build-dir-not-writeable'\n      )\n    }\n\n    if (config.cleanDistDir) {\n      await recursiveDelete(distDir, /^cache/)\n    }\n\n    // We need to write the manifest with rewrites before build\n    // so serverless can import the manifest\n    await nextBuildSpan\n      .traceChild('write-routes-manifest')\n      .traceAsyncFn(() =>\n        promises.writeFile(\n          routesManifestPath,\n          JSON.stringify(routesManifest),\n          'utf8'\n        )\n      )\n\n    const manifestPath = path.join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )\n\n    const requiredServerFiles = nextBuildSpan\n      .traceChild('generate-required-server-files')\n      .traceFn(() => ({\n        version: 1,\n        config: { ...config, configFile: undefined },\n        appDir: dir,\n        files: [\n          ROUTES_MANIFEST,\n          path.relative(distDir, manifestPath),\n          BUILD_MANIFEST,\n          PRERENDER_MANIFEST,\n          path.join(SERVER_DIRECTORY, MIDDLEWARE_MANIFEST),\n          hasServerComponents\n            ? path.join(SERVER_DIRECTORY, MIDDLEWARE_FLIGHT_MANIFEST + '.js')\n            : null,\n          REACT_LOADABLE_MANIFEST,\n          config.optimizeFonts\n            ? path.join(\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                FONT_MANIFEST\n              )\n            : null,\n          BUILD_ID_FILE,\n        ]\n          .filter(nonNullable)\n          .map((file) => path.join(config.distDir, file)),\n        ignore: [] as string[],\n      }))\n\n    let result: CompilerResult = { warnings: [], errors: [] }\n    let webpackBuildStart\n    let telemetryPlugin\n    await (async () => {\n      // IIFE to isolate locals and avoid retaining memory too long\n      const runWebpackSpan = nextBuildSpan.traceChild('run-webpack-compiler')\n      const configs = await runWebpackSpan\n        .traceChild('generate-webpack-config')\n        .traceAsyncFn(() =>\n          Promise.all([\n            getBaseWebpackConfig(dir, {\n              buildId,\n              reactProductionProfiling,\n              isServer: false,\n              config,\n              target,\n              pagesDir,\n              entrypoints: entrypoints.client,\n              rewrites,\n              runWebpackSpan,\n            }),\n            getBaseWebpackConfig(dir, {\n              buildId,\n              reactProductionProfiling,\n              isServer: true,\n              config,\n              target,\n              pagesDir,\n              entrypoints: entrypoints.server,\n              rewrites,\n              runWebpackSpan,\n            }),\n            hasConcurrentFeatures\n              ? getBaseWebpackConfig(dir, {\n                  buildId,\n                  reactProductionProfiling,\n                  isServer: true,\n                  webServerRuntime: true,\n                  config,\n                  target,\n                  pagesDir,\n                  entrypoints: entrypoints.serverWeb,\n                  rewrites,\n                  runWebpackSpan,\n                })\n              : null,\n          ])\n        )\n\n      const clientConfig = configs[0]\n\n      if (\n        clientConfig.optimization &&\n        (clientConfig.optimization.minimize !== true ||\n          (clientConfig.optimization.minimizer &&\n            clientConfig.optimization.minimizer.length === 0))\n      ) {\n        Log.warn(\n          `Production code optimization has been disabled in your project. Read more: https://nextjs.org/docs/messages/minification-disabled`\n        )\n      }\n\n      webpackBuildStart = process.hrtime()\n\n      // We run client and server compilation separately to optimize for memory usage\n      await runWebpackSpan.traceAsyncFn(async () => {\n        const clientResult = await runCompiler(clientConfig, { runWebpackSpan })\n        // Fail build if clientResult contains errors\n        if (clientResult.errors.length > 0) {\n          result = {\n            warnings: [...clientResult.warnings],\n            errors: [...clientResult.errors],\n          }\n        } else {\n          const serverResult = await runCompiler(configs[1], { runWebpackSpan })\n          const serverWebResult = configs[2]\n            ? await runCompiler(configs[2], { runWebpackSpan })\n            : null\n\n          result = {\n            warnings: [\n              ...clientResult.warnings,\n              ...serverResult.warnings,\n              ...(serverWebResult?.warnings || []),\n            ],\n            errors: [\n              ...clientResult.errors,\n              ...serverResult.errors,\n              ...(serverWebResult?.errors || []),\n            ],\n          }\n        }\n      })\n      result = nextBuildSpan\n        .traceChild('format-webpack-messages')\n        .traceFn(() => formatWebpackMessages(result, true))\n\n      telemetryPlugin = (clientConfig as webpack.Configuration).plugins?.find(\n        isTelemetryPlugin\n      )\n    })()\n    const webpackBuildEnd = process.hrtime(webpackBuildStart)\n    if (buildSpinner) {\n      buildSpinner.stopAndPersist()\n    }\n\n    if (result.errors.length > 0) {\n      // Only keep the first few errors. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (result.errors.length > 5) {\n        result.errors.length = 5\n      }\n      const error = result.errors.join('\\n\\n')\n\n      console.error(chalk.red('Failed to compile.\\n'))\n\n      if (\n        error.indexOf('private-next-pages') > -1 &&\n        error.indexOf('does not contain a default export') > -1\n      ) {\n        const page_name_regex = /'private-next-pages\\/(?<page_name>[^']*)'/\n        const parsed = page_name_regex.exec(error)\n        const page_name = parsed && parsed.groups && parsed.groups.page_name\n        throw new Error(\n          `webpack build failed: found page without a React Component as default export in pages/${page_name}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.`\n        )\n      }\n\n      console.error(error)\n      console.error()\n\n      // When using the web runtime, common Node.js native APIs are not available.\n      const moduleName = getUnresolvedModuleFromError(error)\n      if (hasConcurrentFeatures && moduleName) {\n        const err = new Error(\n          `Native Node.js APIs are not supported in the Edge Runtime with \\`concurrentFeatures\\` enabled. Found \\`${moduleName}\\` imported.\\n\\n`\n        ) as NextError\n        err.code = 'EDGE_RUNTIME_UNSUPPORTED_API'\n        throw err\n      }\n\n      if (\n        error.indexOf('private-next-pages') > -1 ||\n        error.indexOf('__next_polyfill__') > -1\n      ) {\n        const err = new Error(\n          'webpack config.resolve.alias was incorrectly overridden. https://nextjs.org/docs/messages/invalid-resolve-alias'\n        ) as NextError\n        err.code = 'INVALID_RESOLVE_ALIAS'\n        throw err\n      }\n      const err = new Error(\n        'Build failed because of webpack errors'\n      ) as NextError\n      err.code = 'WEBPACK_ERRORS'\n      throw err\n    } else {\n      telemetry.record(\n        eventBuildCompleted(pagePaths, {\n          durationInSeconds: webpackBuildEnd[0],\n        })\n      )\n\n      if (result.warnings.length > 0) {\n        Log.warn('Compiled with warnings\\n')\n        console.warn(result.warnings.join('\\n\\n'))\n        console.warn()\n      } else {\n        Log.info('Compiled successfully')\n      }\n    }\n\n    const postCompileSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Collecting page data`,\n    })\n\n    const buildManifestPath = path.join(distDir, BUILD_MANIFEST)\n\n    const ssgPages = new Set<string>()\n    const ssgStaticFallbackPages = new Set<string>()\n    const ssgBlockingFallbackPages = new Set<string>()\n    const staticPages = new Set<string>()\n    const invalidPages = new Set<string>()\n    const hybridAmpPages = new Set<string>()\n    const serverPropsPages = new Set<string>()\n    const additionalSsgPaths = new Map<string, Array<string>>()\n    const additionalSsgPathsEncoded = new Map<string, Array<string>>()\n    const pageTraceIncludes = new Map<string, Array<string>>()\n    const pageTraceExcludes = new Map<string, Array<string>>()\n    const pageInfos = new Map<string, PageInfo>()\n    const pagesManifest = JSON.parse(\n      await promises.readFile(manifestPath, 'utf8')\n    ) as PagesManifest\n    const buildManifest = JSON.parse(\n      await promises.readFile(buildManifestPath, 'utf8')\n    ) as BuildManifest\n\n    const timeout = config.staticPageGenerationTimeout || 0\n    const sharedPool = config.experimental.sharedPool || false\n    const staticWorker = sharedPool\n      ? require.resolve('./worker')\n      : require.resolve('./utils')\n    let infoPrinted = false\n\n    process.env.NEXT_PHASE = PHASE_PRODUCTION_BUILD\n\n    const staticWorkers = new Worker(staticWorker, {\n      timeout: timeout * 1000,\n      onRestart: (method, [arg], attempts) => {\n        if (method === 'exportPage') {\n          const { path: pagePath } = arg\n          if (attempts >= 3) {\n            throw new Error(\n              `Static page generation for ${pagePath} is still timing out after 3 attempts. See more info here https://nextjs.org/docs/messages/static-page-generation-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted static page generation for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        } else {\n          const pagePath = arg\n          if (attempts >= 2) {\n            throw new Error(\n              `Collecting page data for ${pagePath} is still timing out after 2 attempts. See more info here https://nextjs.org/docs/messages/page-data-collection-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted collecting page data for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        }\n        if (!infoPrinted) {\n          Log.warn(\n            'See more info here https://nextjs.org/docs/messages/static-page-generation-timeout'\n          )\n          infoPrinted = true\n        }\n      },\n      numWorkers: config.experimental.cpus,\n      enableWorkerThreads: config.experimental.workerThreads,\n      exposedMethods: sharedPool\n        ? [\n            'hasCustomGetInitialProps',\n            'isPageStatic',\n            'getNamedExports',\n            'exportPage',\n          ]\n        : ['hasCustomGetInitialProps', 'isPageStatic', 'getNamedExports'],\n    }) as Worker &\n      Pick<\n        typeof import('./worker'),\n        | 'hasCustomGetInitialProps'\n        | 'isPageStatic'\n        | 'getNamedExports'\n        | 'exportPage'\n      >\n\n    const analysisBegin = process.hrtime()\n    const staticCheckSpan = nextBuildSpan.traceChild('static-check')\n    const {\n      customAppGetInitialProps,\n      namedExports,\n      isNextImageImported,\n      hasSsrAmpPages,\n      hasNonStaticErrorPage,\n    } = await staticCheckSpan.traceAsyncFn(async () => {\n      const { configFileName, publicRuntimeConfig, serverRuntimeConfig } =\n        config\n      const runtimeEnvConfig = { publicRuntimeConfig, serverRuntimeConfig }\n\n      const nonStaticErrorPageSpan = staticCheckSpan.traceChild(\n        'check-static-error-page'\n      )\n      const errorPageHasCustomGetInitialProps =\n        nonStaticErrorPageSpan.traceAsyncFn(\n          async () =>\n            hasCustomErrorPage &&\n            (await staticWorkers.hasCustomGetInitialProps(\n              '/_error',\n              distDir,\n              isLikeServerless,\n              runtimeEnvConfig,\n              false\n            ))\n        )\n\n      const errorPageStaticResult = nonStaticErrorPageSpan.traceAsyncFn(\n        async () =>\n          hasCustomErrorPage &&\n          staticWorkers.isPageStatic(\n            '/_error',\n            distDir,\n            isLikeServerless,\n            configFileName,\n            runtimeEnvConfig,\n            config.httpAgentOptions,\n            config.i18n?.locales,\n            config.i18n?.defaultLocale\n          )\n      )\n\n      // we don't output _app in serverless mode so use _app export\n      // from _error instead\n      const appPageToCheck = isLikeServerless ? '/_error' : '/_app'\n\n      const customAppGetInitialPropsPromise =\n        staticWorkers.hasCustomGetInitialProps(\n          appPageToCheck,\n          distDir,\n          isLikeServerless,\n          runtimeEnvConfig,\n          true\n        )\n\n      const namedExportsPromise = staticWorkers.getNamedExports(\n        appPageToCheck,\n        distDir,\n        isLikeServerless,\n        runtimeEnvConfig\n      )\n\n      // eslint-disable-next-line no-shadow\n      let isNextImageImported: boolean | undefined\n      // eslint-disable-next-line no-shadow\n      let hasSsrAmpPages = false\n\n      const computedManifestData = await computeFromManifest(\n        buildManifest,\n        distDir,\n        config.experimental.gzipSize\n      )\n\n      await Promise.all(\n        pageKeys.map(async (page) => {\n          const checkPageSpan = staticCheckSpan.traceChild('check-page', {\n            page,\n          })\n          return checkPageSpan.traceAsyncFn(async () => {\n            const actualPage = normalizePagePath(page)\n            const [selfSize, allSize] = await getJsPageSizeInKb(\n              actualPage,\n              distDir,\n              buildManifest,\n              config.experimental.gzipSize,\n              computedManifestData\n            )\n\n            let isSsg = false\n            let isStatic = false\n            let isHybridAmp = false\n            let ssgPageRoutes: string[] | null = null\n            let isMiddlewareRoute = !!page.match(MIDDLEWARE_ROUTE)\n\n            if (\n              !isMiddlewareRoute &&\n              !isReservedPage(page) &&\n              !hasConcurrentFeatures\n            ) {\n              try {\n                let isPageStaticSpan =\n                  checkPageSpan.traceChild('is-page-static')\n                let workerResult = await isPageStaticSpan.traceAsyncFn(() => {\n                  return staticWorkers.isPageStatic(\n                    page,\n                    distDir,\n                    isLikeServerless,\n                    configFileName,\n                    runtimeEnvConfig,\n                    config.httpAgentOptions,\n                    config.i18n?.locales,\n                    config.i18n?.defaultLocale,\n                    isPageStaticSpan.id\n                  )\n                })\n\n                if (config.outputFileTracing) {\n                  pageTraceIncludes.set(page, workerResult.traceIncludes || [])\n                  pageTraceExcludes.set(page, workerResult.traceExcludes || [])\n                }\n\n                if (\n                  workerResult.isStatic === false &&\n                  (workerResult.isHybridAmp || workerResult.isAmpOnly)\n                ) {\n                  hasSsrAmpPages = true\n                }\n\n                if (workerResult.isHybridAmp) {\n                  isHybridAmp = true\n                  hybridAmpPages.add(page)\n                }\n\n                if (workerResult.isNextImageImported) {\n                  isNextImageImported = true\n                }\n\n                if (workerResult.hasStaticProps) {\n                  ssgPages.add(page)\n                  isSsg = true\n\n                  if (\n                    workerResult.prerenderRoutes &&\n                    workerResult.encodedPrerenderRoutes\n                  ) {\n                    additionalSsgPaths.set(page, workerResult.prerenderRoutes)\n                    additionalSsgPathsEncoded.set(\n                      page,\n                      workerResult.encodedPrerenderRoutes\n                    )\n                    ssgPageRoutes = workerResult.prerenderRoutes\n                  }\n\n                  if (workerResult.prerenderFallback === 'blocking') {\n                    ssgBlockingFallbackPages.add(page)\n                  } else if (workerResult.prerenderFallback === true) {\n                    ssgStaticFallbackPages.add(page)\n                  }\n                } else if (workerResult.hasServerProps) {\n                  serverPropsPages.add(page)\n                } else if (\n                  workerResult.isStatic &&\n                  !workerResult.hasFlightData &&\n                  (await customAppGetInitialPropsPromise) === false\n                ) {\n                  staticPages.add(page)\n                  isStatic = true\n                }\n\n                if (hasPages404 && page === '/404') {\n                  if (!workerResult.isStatic && !workerResult.hasStaticProps) {\n                    throw new Error(\n                      `\\`pages/404\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                    )\n                  }\n                  // we need to ensure the 404 lambda is present since we use\n                  // it when _app has getInitialProps\n                  if (\n                    (await customAppGetInitialPropsPromise) &&\n                    !workerResult.hasStaticProps\n                  ) {\n                    staticPages.delete(page)\n                  }\n                }\n\n                if (\n                  STATIC_STATUS_PAGES.includes(page) &&\n                  !workerResult.isStatic &&\n                  !workerResult.hasStaticProps\n                ) {\n                  throw new Error(\n                    `\\`pages${page}\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                  )\n                }\n              } catch (err) {\n                if (!isError(err) || err.message !== 'INVALID_DEFAULT_EXPORT')\n                  throw err\n                invalidPages.add(page)\n              }\n            }\n\n            pageInfos.set(page, {\n              size: selfSize,\n              totalSize: allSize,\n              static: isStatic,\n              isSsg,\n              isWebSsr:\n                hasConcurrentFeatures &&\n                !isMiddlewareRoute &&\n                !isReservedPage(page) &&\n                !isCustomErrorPage(page),\n              isHybridAmp,\n              ssgPageRoutes,\n              initialRevalidateSeconds: false,\n              pageDuration: undefined,\n              ssgPageDurations: undefined,\n            })\n          })\n        })\n      )\n\n      const errorPageResult = await errorPageStaticResult\n      const nonStaticErrorPage =\n        (await errorPageHasCustomGetInitialProps) ||\n        (errorPageResult && errorPageResult.hasServerProps)\n\n      const returnValue = {\n        customAppGetInitialProps: await customAppGetInitialPropsPromise,\n        namedExports: await namedExportsPromise,\n        isNextImageImported,\n        hasSsrAmpPages,\n        hasNonStaticErrorPage: nonStaticErrorPage,\n      }\n\n      if (!sharedPool) staticWorkers.end()\n      return returnValue\n    })\n\n    if (customAppGetInitialProps) {\n      console.warn(\n        chalk.bold.yellow(`Warning: `) +\n          chalk.yellow(\n            `You have opted-out of Automatic Static Optimization due to \\`getInitialProps\\` in \\`pages/_app\\`. This does not opt-out pages with \\`getStaticProps\\``\n          )\n      )\n      console.warn(\n        'Read more: https://nextjs.org/docs/messages/opt-out-auto-static-optimization\\n'\n      )\n    }\n\n    if (!hasSsrAmpPages) {\n      requiredServerFiles.ignore.push(\n        path.relative(\n          dir,\n          path.join(\n            path.dirname(\n              require.resolve(\n                'next/dist/compiled/@ampproject/toolbox-optimizer'\n              )\n            ),\n            '**/*'\n          )\n        )\n      )\n    }\n\n    if (config.outputFileTracing) {\n      const { nodeFileTrace } =\n        require('next/dist/compiled/@vercel/nft') as typeof import('next/dist/compiled/@vercel/nft')\n\n      const includeExcludeSpan = nextBuildSpan.traceChild(\n        'apply-include-excludes'\n      )\n\n      await includeExcludeSpan.traceAsyncFn(async () => {\n        const globOrig =\n          require('next/dist/compiled/glob') as typeof import('next/dist/compiled/glob')\n        const glob = (pattern: string): Promise<string[]> => {\n          return new Promise((resolve, reject) => {\n            globOrig(pattern, { cwd: dir }, (err, files) => {\n              if (err) {\n                return reject(err)\n              }\n              resolve(files)\n            })\n          })\n        }\n\n        for (let page of pageKeys) {\n          await includeExcludeSpan\n            .traceChild('include-exclude', { page })\n            .traceAsyncFn(async () => {\n              const includeGlobs = pageTraceIncludes.get(page)\n              const excludeGlobs = pageTraceExcludes.get(page)\n              page = normalizePagePath(page)\n\n              if (!includeGlobs?.length && !excludeGlobs?.length) {\n                return\n              }\n\n              const traceFile = path.join(\n                distDir,\n                'server/pages',\n                `${page}.js.nft.json`\n              )\n              const pageDir = path.dirname(traceFile)\n              const traceContent = JSON.parse(\n                await promises.readFile(traceFile, 'utf8')\n              )\n              let includes: string[] = []\n\n              if (includeGlobs?.length) {\n                for (const includeGlob of includeGlobs) {\n                  const results = await glob(includeGlob)\n                  includes.push(\n                    ...results.map((file) => {\n                      return path.relative(pageDir, path.join(dir, file))\n                    })\n                  )\n                }\n              }\n              const combined = new Set([...traceContent.files, ...includes])\n\n              if (excludeGlobs?.length) {\n                const resolvedGlobs = excludeGlobs.map((exclude) =>\n                  path.join(dir, exclude)\n                )\n                combined.forEach((file) => {\n                  if (isMatch(path.join(pageDir, file), resolvedGlobs)) {\n                    combined.delete(file)\n                  }\n                })\n              }\n\n              await promises.writeFile(\n                traceFile,\n                JSON.stringify({\n                  version: traceContent.version,\n                  files: [...combined],\n                })\n              )\n            })\n        }\n      })\n\n      // TODO: move this inside of webpack so it can be cached\n      // between builds. Should only need to be re-run on lockfile change\n      await nextBuildSpan\n        .traceChild('trace-next-server')\n        .traceAsyncFn(async () => {\n          let cacheKey: string | undefined\n          // consider all lockFiles in tree in case user accidentally\n          // has both package-lock.json and yarn.lock\n          const lockFiles: string[] = (\n            await Promise.all(\n              ['package-lock.json', 'yarn.lock', 'pnpm-lock.yaml'].map((file) =>\n                findUp(file, { cwd: dir })\n              )\n            )\n          ).filter(Boolean) as any // TypeScript doesn't like this filter\n\n          const nextServerTraceOutput = path.join(\n            distDir,\n            'next-server.js.nft.json'\n          )\n          const cachedTracePath = path.join(\n            distDir,\n            'cache/next-server.js.nft.json'\n          )\n\n          if (lockFiles.length > 0) {\n            const cacheHash = (\n              require('crypto') as typeof import('crypto')\n            ).createHash('sha256')\n\n            cacheHash.update(require('next/package').version)\n            cacheHash.update(hasSsrAmpPages + '')\n            cacheHash.update(ciEnvironment.hasNextSupport + '')\n\n            await Promise.all(\n              lockFiles.map(async (lockFile) => {\n                cacheHash.update(await promises.readFile(lockFile))\n              })\n            )\n            cacheKey = cacheHash.digest('hex')\n\n            try {\n              const existingTrace = JSON.parse(\n                await promises.readFile(cachedTracePath, 'utf8')\n              )\n\n              if (existingTrace.cacheKey === cacheKey) {\n                await promises.copyFile(cachedTracePath, nextServerTraceOutput)\n                return\n              }\n            } catch (_) {}\n          }\n\n          const root = path.parse(dir).root\n          const serverResult = await nodeFileTrace(\n            [require.resolve('next/dist/server/next-server')],\n            {\n              base: root,\n              processCwd: dir,\n              ignore: [\n                '**/next/dist/pages/**/*',\n                '**/next/dist/compiled/webpack/(bundle4|bundle5).js',\n                '**/node_modules/webpack5/**/*',\n                '**/next/dist/server/lib/squoosh/**/*.wasm',\n                ...(ciEnvironment.hasNextSupport\n                  ? [\n                      // only ignore image-optimizer code when\n                      // this is being handled outside of next-server\n                      '**/next/dist/server/image-optimizer.js',\n                      '**/node_modules/sharp/**/*',\n                    ]\n                  : []),\n                ...(!hasSsrAmpPages\n                  ? ['**/next/dist/compiled/@ampproject/toolbox-optimizer/**/*']\n                  : []),\n              ],\n            }\n          )\n\n          const tracedFiles = new Set()\n\n          serverResult.fileList.forEach((file) => {\n            tracedFiles.add(\n              path.relative(distDir, path.join(root, file)).replace(/\\\\/g, '/')\n            )\n          })\n\n          await promises.writeFile(\n            nextServerTraceOutput,\n            JSON.stringify({\n              version: 1,\n              cacheKey,\n              files: [...tracedFiles],\n            } as {\n              version: number\n              files: string[]\n            })\n          )\n          await promises.unlink(cachedTracePath).catch(() => {})\n          await promises\n            .copyFile(nextServerTraceOutput, cachedTracePath)\n            .catch(() => {})\n        })\n    }\n\n    if (serverPropsPages.size > 0 || ssgPages.size > 0) {\n      // We update the routes manifest after the build with the\n      // data routes since we can't determine these until after build\n      routesManifest.dataRoutes = getSortedRoutes([\n        ...serverPropsPages,\n        ...ssgPages,\n      ]).map((page) => {\n        const pagePath = normalizePagePath(page)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${pagePath}.json`\n        )\n\n        let dataRouteRegex: string\n        let namedDataRouteRegex: string | undefined\n        let routeKeys: { [named: string]: string } | undefined\n\n        if (isDynamicRoute(page)) {\n          const routeRegex = getRouteRegex(dataRoute.replace(/\\.json$/, ''))\n\n          dataRouteRegex = normalizeRouteRegex(\n            routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, `\\\\.json$`)\n          )\n          namedDataRouteRegex = routeRegex.namedRegex!.replace(\n            /\\(\\?:\\/\\)\\?\\$$/,\n            `\\\\.json$`\n          )\n          routeKeys = routeRegex.routeKeys\n        } else {\n          dataRouteRegex = normalizeRouteRegex(\n            new RegExp(\n              `^${path.posix.join(\n                '/_next/data',\n                escapeStringRegexp(buildId),\n                `${pagePath}.json`\n              )}$`\n            ).source\n          )\n        }\n\n        return {\n          page,\n          routeKeys,\n          dataRouteRegex,\n          namedDataRouteRegex,\n        }\n      })\n\n      await promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    }\n\n    // Since custom _app.js can wrap the 404 page we have to opt-out of static optimization if it has getInitialProps\n    // Only export the static 404 when there is no /_error present\n    const useStatic404 =\n      !hasConcurrentFeatures &&\n      !customAppGetInitialProps &&\n      (!hasNonStaticErrorPage || hasPages404)\n\n    if (invalidPages.size > 0) {\n      const err = new Error(\n        `Build optimization failed: found page${\n          invalidPages.size === 1 ? '' : 's'\n        } without a React Component as default export in \\n${[...invalidPages]\n          .map((pg) => `pages${pg}`)\n          .join(\n            '\\n'\n          )}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.\\n`\n      ) as NextError\n      err.code = 'BUILD_OPTIMIZATION_FAILED'\n      throw err\n    }\n\n    await writeBuildId(distDir, buildId)\n\n    if (config.experimental.optimizeCss) {\n      const globOrig =\n        require('next/dist/compiled/glob') as typeof import('next/dist/compiled/glob')\n\n      const cssFilePaths = await new Promise<string[]>((resolve, reject) => {\n        globOrig('**/*.css', { cwd: join(distDir, 'static') }, (err, files) => {\n          if (err) {\n            return reject(err)\n          }\n          resolve(files)\n        })\n      })\n\n      requiredServerFiles.files.push(\n        ...cssFilePaths.map((filePath) =>\n          path.join(config.distDir, 'static', filePath)\n        )\n      )\n    }\n\n    const features: EventBuildFeatureUsage[] = [\n      {\n        featureName: 'experimental/optimizeCss',\n        invocationCount: config.experimental.optimizeCss ? 1 : 0,\n      },\n      {\n        featureName: 'optimizeFonts',\n        invocationCount: config.optimizeFonts ? 1 : 0,\n      },\n    ]\n    telemetry.record(\n      features.map((feature) => {\n        return {\n          eventName: EVENT_BUILD_FEATURE_USAGE,\n          payload: feature,\n        }\n      })\n    )\n\n    await promises.writeFile(\n      path.join(distDir, SERVER_FILES_MANIFEST),\n      JSON.stringify(requiredServerFiles),\n      'utf8'\n    )\n\n    const middlewareManifest: MiddlewareManifest = JSON.parse(\n      await promises.readFile(\n        path.join(distDir, SERVER_DIRECTORY, MIDDLEWARE_MANIFEST),\n        'utf8'\n      )\n    )\n\n    const outputFileTracingRoot =\n      config.experimental.outputFileTracingRoot || dir\n\n    if (config.experimental.outputStandalone) {\n      await nextBuildSpan\n        .traceChild('copy-traced-files')\n        .traceAsyncFn(async () => {\n          await copyTracedFiles(\n            dir,\n            distDir,\n            pageKeys,\n            outputFileTracingRoot,\n            requiredServerFiles.config,\n            middlewareManifest\n          )\n        })\n    }\n\n    const finalPrerenderRoutes: { [route: string]: SsgRoute } = {}\n    const tbdPrerenderRoutes: string[] = []\n    let ssgNotFoundPaths: string[] = []\n\n    if (postCompileSpinner) postCompileSpinner.stopAndPersist()\n\n    const { i18n } = config\n\n    const usedStaticStatusPages = STATIC_STATUS_PAGES.filter(\n      (page) =>\n        mappedPages[page] && mappedPages[page].startsWith('private-next-pages')\n    )\n    usedStaticStatusPages.forEach((page) => {\n      if (!ssgPages.has(page) && !customAppGetInitialProps) {\n        staticPages.add(page)\n      }\n    })\n\n    const hasPages500 = usedStaticStatusPages.includes('/500')\n    const useDefaultStatic500 =\n      !hasPages500 && !hasNonStaticErrorPage && !customAppGetInitialProps\n\n    const combinedPages = [...staticPages, ...ssgPages]\n\n    if (\n      !hasConcurrentFeatures &&\n      (combinedPages.length > 0 || useStatic404 || useDefaultStatic500)\n    ) {\n      const staticGenerationSpan = nextBuildSpan.traceChild('static-generation')\n      await staticGenerationSpan.traceAsyncFn(async () => {\n        detectConflictingPaths(\n          [\n            ...combinedPages,\n            ...pageKeys.filter((page) => !combinedPages.includes(page)),\n          ],\n          ssgPages,\n          additionalSsgPaths\n        )\n        const exportApp: typeof import('../export').default =\n          require('../export').default\n        const exportOptions = {\n          silent: false,\n          buildExport: true,\n          threads: config.experimental.cpus,\n          pages: combinedPages,\n          outdir: path.join(distDir, 'export'),\n          statusMessage: 'Generating static pages',\n          exportPageWorker: sharedPool\n            ? staticWorkers.exportPage.bind(staticWorkers)\n            : undefined,\n          endWorker: sharedPool\n            ? async () => {\n                await staticWorkers.end()\n              }\n            : undefined,\n        }\n        const exportConfig: any = {\n          ...config,\n          initialPageRevalidationMap: {},\n          pageDurationMap: {},\n          ssgNotFoundPaths: [] as string[],\n          // Default map will be the collection of automatic statically exported\n          // pages and incremental pages.\n          // n.b. we cannot handle this above in combinedPages because the dynamic\n          // page must be in the `pages` array, but not in the mapping.\n          exportPathMap: (defaultMap: any) => {\n            // Dynamically routed pages should be prerendered to be used as\n            // a client-side skeleton (fallback) while data is being fetched.\n            // This ensures the end-user never sees a 500 or slow response from the\n            // server.\n            //\n            // Note: prerendering disables automatic static optimization.\n            ssgPages.forEach((page) => {\n              if (isDynamicRoute(page)) {\n                tbdPrerenderRoutes.push(page)\n\n                if (ssgStaticFallbackPages.has(page)) {\n                  // Override the rendering for the dynamic page to be treated as a\n                  // fallback render.\n                  if (i18n) {\n                    defaultMap[`/${i18n.defaultLocale}${page}`] = {\n                      page,\n                      query: { __nextFallback: true },\n                    }\n                  } else {\n                    defaultMap[page] = { page, query: { __nextFallback: true } }\n                  }\n                } else {\n                  // Remove dynamically routed pages from the default path map when\n                  // fallback behavior is disabled.\n                  delete defaultMap[page]\n                }\n              }\n            })\n            // Append the \"well-known\" routes we should prerender for, e.g. blog\n            // post slugs.\n            additionalSsgPaths.forEach((routes, page) => {\n              const encodedRoutes = additionalSsgPathsEncoded.get(page)\n\n              routes.forEach((route, routeIdx) => {\n                defaultMap[route] = {\n                  page,\n                  query: { __nextSsgPath: encodedRoutes?.[routeIdx] },\n                }\n              })\n            })\n\n            if (useStatic404) {\n              defaultMap['/404'] = {\n                page: hasPages404 ? '/404' : '/_error',\n              }\n            }\n\n            if (useDefaultStatic500) {\n              defaultMap['/500'] = {\n                page: '/_error',\n              }\n            }\n\n            if (i18n) {\n              for (const page of [\n                ...staticPages,\n                ...ssgPages,\n                ...(useStatic404 ? ['/404'] : []),\n                ...(useDefaultStatic500 ? ['/500'] : []),\n              ]) {\n                const isSsg = ssgPages.has(page)\n                const isDynamic = isDynamicRoute(page)\n                const isFallback = isSsg && ssgStaticFallbackPages.has(page)\n\n                for (const locale of i18n.locales) {\n                  // skip fallback generation for SSG pages without fallback mode\n                  if (isSsg && isDynamic && !isFallback) continue\n                  const outputPath = `/${locale}${page === '/' ? '' : page}`\n\n                  defaultMap[outputPath] = {\n                    page: defaultMap[page]?.page || page,\n                    query: { __nextLocale: locale },\n                  }\n\n                  if (isFallback) {\n                    defaultMap[outputPath].query.__nextFallback = true\n                  }\n                }\n\n                if (isSsg) {\n                  // remove non-locale prefixed variant from defaultMap\n                  delete defaultMap[page]\n                }\n              }\n            }\n            return defaultMap\n          },\n        }\n\n        await exportApp(dir, exportOptions, nextBuildSpan, exportConfig)\n\n        const postBuildSpinner = createSpinner({\n          prefixText: `${Log.prefixes.info} Finalizing page optimization`,\n        })\n        ssgNotFoundPaths = exportConfig.ssgNotFoundPaths\n\n        // remove server bundles that were exported\n        for (const page of staticPages) {\n          const serverBundle = getPagePath(page, distDir, isLikeServerless)\n          await promises.unlink(serverBundle)\n        }\n        const serverOutputDir = path.join(\n          distDir,\n          isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n        )\n\n        const moveExportedPage = async (\n          originPage: string,\n          page: string,\n          file: string,\n          isSsg: boolean,\n          ext: 'html' | 'json',\n          additionalSsgFile = false\n        ) => {\n          return staticGenerationSpan\n            .traceChild('move-exported-page')\n            .traceAsyncFn(async () => {\n              file = `${file}.${ext}`\n              const orig = path.join(exportOptions.outdir, file)\n              const pagePath = getPagePath(\n                originPage,\n                distDir,\n                isLikeServerless\n              )\n\n              const relativeDest = path\n                .relative(\n                  serverOutputDir,\n                  path.join(\n                    path.join(\n                      pagePath,\n                      // strip leading / and then recurse number of nested dirs\n                      // to place from base folder\n                      originPage\n                        .substr(1)\n                        .split('/')\n                        .map(() => '..')\n                        .join('/')\n                    ),\n                    file\n                  )\n                )\n                .replace(/\\\\/g, '/')\n\n              const dest = path.join(\n                distDir,\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                relativeDest\n              )\n\n              if (\n                !isSsg &&\n                !(\n                  // don't add static status page to manifest if it's\n                  // the default generated version e.g. no pages/500\n                  (\n                    STATIC_STATUS_PAGES.includes(page) &&\n                    !usedStaticStatusPages.includes(page)\n                  )\n                )\n              ) {\n                pagesManifest[page] = relativeDest\n              }\n\n              const isNotFound = ssgNotFoundPaths.includes(page)\n\n              // for SSG files with i18n the non-prerendered variants are\n              // output with the locale prefixed so don't attempt moving\n              // without the prefix\n              if ((!i18n || additionalSsgFile) && !isNotFound) {\n                await promises.mkdir(path.dirname(dest), { recursive: true })\n                await promises.rename(orig, dest)\n              } else if (i18n && !isSsg) {\n                // this will be updated with the locale prefixed variant\n                // since all files are output with the locale prefix\n                delete pagesManifest[page]\n              }\n\n              if (i18n) {\n                if (additionalSsgFile) return\n\n                for (const locale of i18n.locales) {\n                  const curPath = `/${locale}${page === '/' ? '' : page}`\n                  const localeExt = page === '/' ? path.extname(file) : ''\n                  const relativeDestNoPages = relativeDest.substr(\n                    'pages/'.length\n                  )\n\n                  if (isSsg && ssgNotFoundPaths.includes(curPath)) {\n                    continue\n                  }\n\n                  const updatedRelativeDest = path\n                    .join(\n                      'pages',\n                      locale + localeExt,\n                      // if it's the top-most index page we want it to be locale.EXT\n                      // instead of locale/index.html\n                      page === '/' ? '' : relativeDestNoPages\n                    )\n                    .replace(/\\\\/g, '/')\n\n                  const updatedOrig = path.join(\n                    exportOptions.outdir,\n                    locale + localeExt,\n                    page === '/' ? '' : file\n                  )\n                  const updatedDest = path.join(\n                    distDir,\n                    isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                    updatedRelativeDest\n                  )\n\n                  if (!isSsg) {\n                    pagesManifest[curPath] = updatedRelativeDest\n                  }\n                  await promises.mkdir(path.dirname(updatedDest), {\n                    recursive: true,\n                  })\n                  await promises.rename(updatedOrig, updatedDest)\n                }\n              }\n            })\n        }\n\n        // Only move /404 to /404 when there is no custom 404 as in that case we don't know about the 404 page\n        if (!hasPages404 && useStatic404) {\n          await moveExportedPage('/_error', '/404', '/404', false, 'html')\n        }\n\n        if (useDefaultStatic500) {\n          await moveExportedPage('/_error', '/500', '/500', false, 'html')\n        }\n\n        for (const page of combinedPages) {\n          const isSsg = ssgPages.has(page)\n          const isStaticSsgFallback = ssgStaticFallbackPages.has(page)\n          const isDynamic = isDynamicRoute(page)\n          const hasAmp = hybridAmpPages.has(page)\n          const file = normalizePagePath(page)\n\n          const pageInfo = pageInfos.get(page)\n          const durationInfo = exportConfig.pageDurationMap[page]\n          if (pageInfo && durationInfo) {\n            // Set Build Duration\n            if (pageInfo.ssgPageRoutes) {\n              pageInfo.ssgPageDurations = pageInfo.ssgPageRoutes.map(\n                (pagePath) => durationInfo[pagePath]\n              )\n            }\n            pageInfo.pageDuration = durationInfo[page]\n          }\n\n          // The dynamic version of SSG pages are only prerendered if the\n          // fallback is enabled. Below, we handle the specific prerenders\n          // of these.\n          const hasHtmlOutput = !(isSsg && isDynamic && !isStaticSsgFallback)\n\n          if (hasHtmlOutput) {\n            await moveExportedPage(page, page, file, isSsg, 'html')\n          }\n\n          if (hasAmp && (!isSsg || (isSsg && !isDynamic))) {\n            const ampPage = `${file}.amp`\n            await moveExportedPage(page, ampPage, ampPage, isSsg, 'html')\n\n            if (isSsg) {\n              await moveExportedPage(page, ampPage, ampPage, isSsg, 'json')\n            }\n          }\n\n          if (isSsg) {\n            // For a non-dynamic SSG page, we must copy its data file\n            // from export, we already moved the HTML file above\n            if (!isDynamic) {\n              await moveExportedPage(page, page, file, isSsg, 'json')\n\n              if (i18n) {\n                // TODO: do we want to show all locale variants in build output\n                for (const locale of i18n.locales) {\n                  const localePage = `/${locale}${page === '/' ? '' : page}`\n\n                  finalPrerenderRoutes[localePage] = {\n                    initialRevalidateSeconds:\n                      exportConfig.initialPageRevalidationMap[localePage],\n                    srcRoute: null,\n                    dataRoute: path.posix.join(\n                      '/_next/data',\n                      buildId,\n                      `${file}.json`\n                    ),\n                  }\n                }\n              } else {\n                finalPrerenderRoutes[page] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[page],\n                  srcRoute: null,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${file}.json`\n                  ),\n                }\n              }\n              // Set Page Revalidation Interval\n              if (pageInfo) {\n                pageInfo.initialRevalidateSeconds =\n                  exportConfig.initialPageRevalidationMap[page]\n              }\n            } else {\n              // For a dynamic SSG page, we did not copy its data exports and only\n              // copy the fallback HTML file (if present).\n              // We must also copy specific versions of this page as defined by\n              // `getStaticPaths` (additionalSsgPaths).\n              const extraRoutes = additionalSsgPaths.get(page) || []\n              for (const route of extraRoutes) {\n                const pageFile = normalizePagePath(route)\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'html',\n                  true\n                )\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'json',\n                  true\n                )\n\n                if (hasAmp) {\n                  const ampPage = `${pageFile}.amp`\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'html',\n                    true\n                  )\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'json',\n                    true\n                  )\n                }\n\n                finalPrerenderRoutes[route] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[route],\n                  srcRoute: page,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${normalizePagePath(route)}.json`\n                  ),\n                }\n\n                // Set route Revalidation Interval\n                if (pageInfo) {\n                  pageInfo.initialRevalidateSeconds =\n                    exportConfig.initialPageRevalidationMap[route]\n                }\n              }\n            }\n          }\n        }\n\n        // remove temporary export folder\n        await recursiveDelete(exportOptions.outdir)\n        await promises.rmdir(exportOptions.outdir)\n        await promises.writeFile(\n          manifestPath,\n          JSON.stringify(pagesManifest, null, 2),\n          'utf8'\n        )\n\n        if (postBuildSpinner) postBuildSpinner.stopAndPersist()\n        console.log()\n      })\n    }\n\n    const analysisEnd = process.hrtime(analysisBegin)\n    telemetry.record(\n      eventBuildOptimize(pagePaths, {\n        durationInSeconds: analysisEnd[0],\n        staticPageCount: staticPages.size,\n        staticPropsPageCount: ssgPages.size,\n        serverPropsPageCount: serverPropsPages.size,\n        ssrPageCount:\n          pagePaths.length -\n          (staticPages.size + ssgPages.size + serverPropsPages.size),\n        hasStatic404: useStatic404,\n        hasReportWebVitals: namedExports?.includes('reportWebVitals') ?? false,\n        rewritesCount: combinedRewrites.length,\n        headersCount: headers.length,\n        redirectsCount: redirects.length - 1, // reduce one for trailing slash\n        headersWithHasCount: headers.filter((r: any) => !!r.has).length,\n        rewritesWithHasCount: combinedRewrites.filter((r: any) => !!r.has)\n          .length,\n        redirectsWithHasCount: redirects.filter((r: any) => !!r.has).length,\n        middlewareCount: pageKeys.filter((page) => MIDDLEWARE_ROUTE.test(page))\n          .length,\n      })\n    )\n\n    if (telemetryPlugin) {\n      const events = eventBuildFeatureUsage(telemetryPlugin)\n      telemetry.record(events)\n    }\n\n    if (ssgPages.size > 0) {\n      const finalDynamicRoutes: PrerenderManifest['dynamicRoutes'] = {}\n      tbdPrerenderRoutes.forEach((tbdRoute) => {\n        const normalizedRoute = normalizePagePath(tbdRoute)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${normalizedRoute}.json`\n        )\n\n        finalDynamicRoutes[tbdRoute] = {\n          routeRegex: normalizeRouteRegex(getRouteRegex(tbdRoute).re.source),\n          dataRoute,\n          fallback: ssgBlockingFallbackPages.has(tbdRoute)\n            ? null\n            : ssgStaticFallbackPages.has(tbdRoute)\n            ? `${normalizedRoute}.html`\n            : false,\n          dataRouteRegex: normalizeRouteRegex(\n            getRouteRegex(dataRoute.replace(/\\.json$/, '')).re.source.replace(\n              /\\(\\?:\\\\\\/\\)\\?\\$$/,\n              '\\\\.json$'\n            )\n          ),\n        }\n      })\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: finalPrerenderRoutes,\n        dynamicRoutes: finalDynamicRoutes,\n        notFoundRoutes: ssgNotFoundPaths,\n        preview: previewProps,\n      }\n\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n      await generateClientSsgManifest(prerenderManifest, {\n        distDir,\n        buildId,\n        locales: config.i18n?.locales || [],\n      })\n    } else {\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: {},\n        dynamicRoutes: {},\n        preview: previewProps,\n        notFoundRoutes: [],\n      }\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n    }\n\n    await promises.writeFile(\n      path.join(\n        distDir,\n        CLIENT_STATIC_FILES_PATH,\n        buildId,\n        '_middlewareManifest.js'\n      ),\n      `self.__MIDDLEWARE_MANIFEST=${devalue(\n        middlewareManifest.clientInfo\n      )};self.__MIDDLEWARE_MANIFEST_CB&&self.__MIDDLEWARE_MANIFEST_CB()`\n    )\n\n    const images = { ...config.images }\n    const { deviceSizes, imageSizes } = images\n    ;(images as any).sizes = [...deviceSizes, ...imageSizes]\n\n    await promises.writeFile(\n      path.join(distDir, IMAGES_MANIFEST),\n      JSON.stringify({\n        version: 1,\n        images,\n      }),\n      'utf8'\n    )\n    await promises.writeFile(\n      path.join(distDir, EXPORT_MARKER),\n      JSON.stringify({\n        version: 1,\n        hasExportPathMap: typeof config.exportPathMap === 'function',\n        exportTrailingSlash: config.trailingSlash === true,\n        isNextImageImported: isNextImageImported === true,\n      }),\n      'utf8'\n    )\n    await promises.unlink(path.join(distDir, EXPORT_DETAIL)).catch((err) => {\n      if (err.code === 'ENOENT') {\n        return Promise.resolve()\n      }\n      return Promise.reject(err)\n    })\n\n    if (config.experimental.outputStandalone) {\n      for (const file of [\n        ...requiredServerFiles.files,\n        path.join(config.distDir, SERVER_FILES_MANIFEST),\n      ]) {\n        const filePath = path.join(dir, file)\n        await promises.copyFile(\n          filePath,\n          path.join(\n            distDir,\n            'standalone',\n            path.relative(outputFileTracingRoot, filePath)\n          )\n        )\n      }\n      await recursiveCopy(\n        path.join(distDir, SERVER_DIRECTORY, 'pages'),\n        path.join(\n          distDir,\n          'standalone',\n          path.relative(outputFileTracingRoot, distDir),\n          SERVER_DIRECTORY,\n          'pages'\n        ),\n        { overwrite: true }\n      )\n    }\n\n    staticPages.forEach((pg) => allStaticPages.add(pg))\n    pageInfos.forEach((info: PageInfo, key: string) => {\n      allPageInfos.set(key, info)\n    })\n\n    await nextBuildSpan.traceChild('print-tree-view').traceAsyncFn(() =>\n      printTreeView(Object.keys(mappedPages), allPageInfos, isLikeServerless, {\n        distPath: distDir,\n        buildId: buildId,\n        pagesDir,\n        useStatic404,\n        pageExtensions: config.pageExtensions,\n        buildManifest,\n        gzipSize: config.experimental.gzipSize,\n      })\n    )\n\n    if (debugOutput) {\n      nextBuildSpan\n        .traceChild('print-custom-routes')\n        .traceFn(() => printCustomRoutes({ redirects, rewrites, headers }))\n    }\n\n    if (config.analyticsId) {\n      console.log(\n        chalk.bold.green('Next.js Analytics') +\n          ' is enabled for this production build. ' +\n          \"You'll receive a Real Experience Score computed by all of your visitors.\"\n      )\n      console.log('')\n    }\n\n    await nextBuildSpan\n      .traceChild('telemetry-flush')\n      .traceAsyncFn(() => telemetry.flush())\n  })\n\n  // Ensure all traces are flushed before finishing the command\n  await flushAllTraces()\n\n  return buildResult\n}\n\nfunction generateClientSsgManifest(\n  prerenderManifest: PrerenderManifest,\n  {\n    buildId,\n    distDir,\n    locales,\n  }: { buildId: string; distDir: string; locales: string[] }\n) {\n  const ssgPages = new Set<string>([\n    ...Object.entries(prerenderManifest.routes)\n      // Filter out dynamic routes\n      .filter(([, { srcRoute }]) => srcRoute == null)\n      .map(([route]) => normalizeLocalePath(route, locales).pathname),\n    ...Object.keys(prerenderManifest.dynamicRoutes),\n  ])\n\n  const clientSsgManifestContent = `self.__SSG_MANIFEST=${devalue(\n    ssgPages\n  )};self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n  writeFileSync(\n    path.join(distDir, CLIENT_STATIC_FILES_PATH, buildId, '_ssgManifest.js'),\n    clientSsgManifestContent\n  )\n}\n\nfunction isTelemetryPlugin(plugin: unknown): plugin is TelemetryPlugin {\n  return plugin instanceof TelemetryPlugin\n}\n\nfunction pageToRoute(page: string) {\n  const routeRegex = getRouteRegex(page)\n  return {\n    page,\n    regex: normalizeRouteRegex(routeRegex.re.source),\n    routeKeys: routeRegex.routeKeys,\n    namedRegex: routeRegex.namedRegex,\n  }\n}\n"],"names":["build","ciEnvironment","Log","dir","conf","reactProductionProfiling","debugOutput","runLint","nextBuildSpan","undefined","version","process","env","__NEXT_VERSION","buildResult","traceAsyncFn","loadedEnvFiles","traceChild","traceFn","config","distDir","join","hasConcurrentFeatures","experimental","concurrentFeatures","hasServerComponents","serverComponents","target","buildId","generateBuildId","customRoutes","headers","rewrites","redirects","cacheDir","isCI","hasNextSupport","hasCache","console","log","prefixes","warn","telemetry","publicDir","pagesDir","hasPublicDir","record","webpackVersion","cliCommand","isSrcDir","relative","startsWith","hasNowJson","cwd","isCustomServer","resolve","then","events","ignoreTypeScriptErrors","Boolean","typescript","ignoreBuildErrors","typeCheckStart","hrtime","typeCheckingSpinner","prefixText","info","verifyResult","typeCheckEnd","durationInSeconds","typescriptVersion","inputFilesCount","result","totalFilesCount","incremental","stopAndPersist","ignoreESLint","eslint","ignoreDuringBuilds","eslintCacheDir","shouldLint","dirs","cpus","workerThreads","buildLintEvent","featureName","invocationCount","eventName","payload","buildSpinner","isLikeServerless","pagePaths","pageExtensions","allStaticPages","Set","allPageInfos","Map","previewProps","previewModeId","randomBytes","toString","previewModeSigningKey","previewModeEncryptionKey","mappedPages","isDev","entrypoints","pageKeys","Object","keys","hasMiddleware","some","page","test","conflictingPublicFiles","hasCustomErrorPage","hasPages404","hasPublicUnderScoreNextDir","Error","hasPublicPageFile","push","numConflicting","length","nestedReservedPages","filter","match","dirname","restrictedRedirectPaths","map","p","basePath","buildCustomRoute","r","type","routeRegex","source","strict","sensitive","delimiter","regexSource","internal","statusCode","permanent","regex","routesManifestPath","routesManifest","pages404","dynamicRoutes","pageToRoute","staticRoutes","dataRoutes","i18n","beforeFiles","fallback","afterFiles","combinedRewrites","distDirCreated","mkdir","recursive","err","code","cleanDistDir","writeFile","JSON","stringify","manifestPath","requiredServerFiles","configFile","appDir","files","optimizeFonts","file","ignore","warnings","errors","webpackBuildStart","telemetryPlugin","runWebpackSpan","configs","Promise","all","isServer","client","server","webServerRuntime","serverWeb","clientConfig","optimization","minimize","minimizer","clientResult","serverResult","serverWebResult","plugins","find","isTelemetryPlugin","webpackBuildEnd","error","red","indexOf","page_name_regex","parsed","exec","page_name","groups","moduleName","postCompileSpinner","buildManifestPath","ssgPages","ssgStaticFallbackPages","ssgBlockingFallbackPages","staticPages","invalidPages","hybridAmpPages","serverPropsPages","additionalSsgPaths","additionalSsgPathsEncoded","pageTraceIncludes","pageTraceExcludes","pageInfos","pagesManifest","parse","readFile","buildManifest","timeout","staticPageGenerationTimeout","sharedPool","staticWorker","require","infoPrinted","NEXT_PHASE","staticWorkers","onRestart","method","arg","attempts","path","pagePath","numWorkers","enableWorkerThreads","exposedMethods","analysisBegin","staticCheckSpan","customAppGetInitialProps","namedExports","isNextImageImported","hasSsrAmpPages","hasNonStaticErrorPage","configFileName","publicRuntimeConfig","serverRuntimeConfig","runtimeEnvConfig","nonStaticErrorPageSpan","errorPageHasCustomGetInitialProps","hasCustomGetInitialProps","errorPageStaticResult","isPageStatic","httpAgentOptions","locales","defaultLocale","appPageToCheck","customAppGetInitialPropsPromise","namedExportsPromise","getNamedExports","computedManifestData","gzipSize","checkPageSpan","actualPage","selfSize","allSize","isSsg","isStatic","isHybridAmp","ssgPageRoutes","isMiddlewareRoute","isPageStaticSpan","workerResult","id","outputFileTracing","set","traceIncludes","traceExcludes","isAmpOnly","add","hasStaticProps","prerenderRoutes","encodedPrerenderRoutes","prerenderFallback","hasServerProps","hasFlightData","delete","includes","message","size","totalSize","static","isWebSsr","initialRevalidateSeconds","pageDuration","ssgPageDurations","errorPageResult","nonStaticErrorPage","returnValue","end","bold","yellow","nodeFileTrace","includeExcludeSpan","globOrig","glob","pattern","reject","includeGlobs","get","excludeGlobs","traceFile","pageDir","traceContent","includeGlob","results","combined","resolvedGlobs","exclude","forEach","cacheKey","lockFiles","nextServerTraceOutput","cachedTracePath","cacheHash","createHash","update","lockFile","digest","existingTrace","copyFile","_","root","base","processCwd","tracedFiles","fileList","replace","unlink","catch","dataRoute","posix","dataRouteRegex","namedDataRouteRegex","routeKeys","re","namedRegex","RegExp","useStatic404","pg","optimizeCss","cssFilePaths","filePath","features","feature","middlewareManifest","outputFileTracingRoot","outputStandalone","finalPrerenderRoutes","tbdPrerenderRoutes","ssgNotFoundPaths","usedStaticStatusPages","has","hasPages500","useDefaultStatic500","combinedPages","staticGenerationSpan","exportApp","default","exportOptions","silent","buildExport","threads","pages","outdir","statusMessage","exportPageWorker","exportPage","bind","endWorker","exportConfig","initialPageRevalidationMap","pageDurationMap","exportPathMap","defaultMap","query","__nextFallback","routes","encodedRoutes","route","routeIdx","__nextSsgPath","isDynamic","isFallback","locale","outputPath","__nextLocale","postBuildSpinner","serverBundle","serverOutputDir","moveExportedPage","originPage","ext","additionalSsgFile","orig","relativeDest","substr","split","dest","isNotFound","rename","curPath","localeExt","extname","relativeDestNoPages","updatedRelativeDest","updatedOrig","updatedDest","isStaticSsgFallback","hasAmp","pageInfo","durationInfo","hasHtmlOutput","ampPage","localePage","srcRoute","extraRoutes","pageFile","rmdir","analysisEnd","staticPageCount","staticPropsPageCount","serverPropsPageCount","ssrPageCount","hasStatic404","hasReportWebVitals","rewritesCount","headersCount","redirectsCount","headersWithHasCount","rewritesWithHasCount","redirectsWithHasCount","middlewareCount","finalDynamicRoutes","tbdRoute","normalizedRoute","prerenderManifest","notFoundRoutes","preview","generateClientSsgManifest","clientInfo","images","deviceSizes","imageSizes","sizes","hasExportPathMap","exportTrailingSlash","trailingSlash","overwrite","key","distPath","analyticsId","green","flush","entries","pathname","clientSsgManifestContent","plugin"],"mappings":"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"}