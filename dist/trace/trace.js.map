{"version":3,"sources":["../../trace/trace.ts"],"sourcesContent":["import { SpanId } from './shared'\nimport { reporter } from './report'\n\nconst NUM_OF_MICROSEC_IN_SEC = BigInt('1000')\nlet count = 0\nconst getId = () => {\n  count++\n  return count\n}\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\nexport enum SpanStatus {\n  Started,\n  Stopped,\n}\n\nexport class Span {\n  name: string\n  id: SpanId\n  parentId?: SpanId\n  duration: number | null\n  attrs: { [key: string]: any }\n  status: SpanStatus\n\n  _start: bigint\n\n  constructor({\n    name,\n    parentId,\n    attrs,\n    startTime,\n  }: {\n    name: string\n    parentId?: SpanId\n    startTime?: bigint\n    attrs?: Object\n  }) {\n    this.name = name\n    this.parentId = parentId\n    this.duration = null\n    this.attrs = attrs ? { ...attrs } : {}\n    this.status = SpanStatus.Started\n    this.id = getId()\n    this._start = startTime || process.hrtime.bigint()\n  }\n\n  // Durations are reported as microseconds. This gives 1000x the precision\n  // of something like Date.now(), which reports in milliseconds.\n  // Additionally, ~285 years can be safely represented as microseconds as\n  // a float64 in both JSON and JavaScript.\n  stop(stopTime?: bigint) {\n    const end: bigint = stopTime || process.hrtime.bigint()\n    const duration = (end - this._start) / NUM_OF_MICROSEC_IN_SEC\n    this.status = SpanStatus.Stopped\n    if (duration > Number.MAX_SAFE_INTEGER) {\n      throw new Error(`Duration is too long to express as float64: ${duration}`)\n    }\n    const timestamp = this._start / NUM_OF_MICROSEC_IN_SEC\n    reporter.report(\n      this.name,\n      Number(duration),\n      Number(timestamp),\n      this.id,\n      this.parentId,\n      this.attrs\n    )\n  }\n\n  traceChild(name: string, attrs?: Object) {\n    return new Span({ name, parentId: this.id, attrs })\n  }\n\n  manualTraceChild(\n    name: string,\n    startTime: bigint,\n    stopTime: bigint,\n    attrs?: Object\n  ) {\n    const span = new Span({ name, parentId: this.id, attrs, startTime })\n    span.stop(stopTime)\n  }\n\n  setAttribute(key: string, value: any) {\n    this.attrs[key] = String(value)\n  }\n\n  traceFn(fn: any) {\n    try {\n      return fn()\n    } finally {\n      this.stop()\n    }\n  }\n\n  async traceAsyncFn<T>(fn: () => T | Promise<T>): Promise<T> {\n    try {\n      return await fn()\n    } finally {\n      this.stop()\n    }\n  }\n}\n\nexport const trace = (\n  name: string,\n  parentId?: SpanId,\n  attrs?: { [key: string]: string }\n) => {\n  return new Span({ name, parentId, attrs })\n}\n\nexport const flushAllTraces = () => reporter.flushAll()\n"],"names":["NUM_OF_MICROSEC_IN_SEC","BigInt","count","getId","SpanStatus","Started","Stopped","Span","name","parentId","attrs","startTime","duration","status","id","_start","process","hrtime","bigint","stop","stopTime","end","Number","MAX_SAFE_INTEGER","Error","timestamp","report","traceChild","manualTraceChild","span","setAttribute","key","value","String","traceFn","fn","traceAsyncFn","trace","flushAllTraces","flushAll"],"mappings":";;;;;AACyB,GAAU,CAAV,OAAU;AAEnC,KAAK,CAACA,sBAAsB,GAAGC,MAAM,CAAC,CAAM;AAC5C,GAAG,CAACC,KAAK,GAAG,CAAC;AACb,KAAK,CAACC,KAAK,OAAS,CAAC;IACnBD,KAAK;IACL,MAAM,CAACA,KAAK;AACd,CAAC;;;UAIWE,UAAU;IAAVA,UAAU,CAAVA,UAAU,CACpBC,CAAO,YAAPA,CAAO,IAAPA,CAAO;IADGD,UAAU,CAAVA,UAAU,CAEpBE,CAAO,YAAPA,CAAO,IAAPA,CAAO;GAFGF,UAAU,0BAAVA,UAAU;MAKTG,IAAI;gBAUH,CAAC,CACXC,IAAI,GACJC,QAAQ,GACRC,KAAK,GACLC,SAAS,EAMX,CAAC,CAAE,CAAC;QACF,IAAI,CAACH,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACG,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACF,KAAK,GAAGA,KAAK,GAAG,CAAC;eAAIA,KAAK;QAAC,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAACG,MAAM,GAAGT,UAAU,CAACC,OAAO;QAChC,IAAI,CAACS,EAAE,GAAGX,KAAK;QACf,IAAI,CAACY,MAAM,GAAGJ,SAAS,IAAIK,OAAO,CAACC,MAAM,CAACC,MAAM;IAClD,CAAC;IAED,EAAyE,AAAzE,uEAAyE;IACzE,EAA+D,AAA/D,6DAA+D;IAC/D,EAAwE,AAAxE,sEAAwE;IACxE,EAAyC,AAAzC,uCAAyC;IACzCC,IAAI,CAACC,QAAiB,EAAE,CAAC;QACvB,KAAK,CAACC,GAAG,GAAWD,QAAQ,IAAIJ,OAAO,CAACC,MAAM,CAACC,MAAM;QACrD,KAAK,CAACN,QAAQ,IAAIS,GAAG,GAAG,IAAI,CAACN,MAAM,IAAIf,sBAAsB;QAC7D,IAAI,CAACa,MAAM,GAAGT,UAAU,CAACE,OAAO;QAChC,EAAE,EAAEM,QAAQ,GAAGU,MAAM,CAACC,gBAAgB,EAAE,CAAC;YACvC,KAAK,CAAC,GAAG,CAACC,KAAK,EAAE,4CAA4C,EAAEZ,QAAQ;QACzE,CAAC;QACD,KAAK,CAACa,SAAS,GAAG,IAAI,CAACV,MAAM,GAAGf,sBAAsB;QAzDjC,OAAU,UA0DtB0B,MAAM,CACb,IAAI,CAAClB,IAAI,EACTc,MAAM,CAACV,QAAQ,GACfU,MAAM,CAACG,SAAS,GAChB,IAAI,CAACX,EAAE,EACP,IAAI,CAACL,QAAQ,EACb,IAAI,CAACC,KAAK;IAEd,CAAC;IAEDiB,UAAU,CAACnB,IAAY,EAAEE,KAAc,EAAE,CAAC;QACxC,MAAM,CAAC,GAAG,CAACH,IAAI,CAAC,CAAC;YAACC,IAAI;YAAEC,QAAQ,EAAE,IAAI,CAACK,EAAE;YAAEJ,KAAK;QAAC,CAAC;IACpD,CAAC;IAEDkB,gBAAgB,CACdpB,IAAY,EACZG,SAAiB,EACjBS,QAAgB,EAChBV,KAAc,EACd,CAAC;QACD,KAAK,CAACmB,IAAI,GAAG,GAAG,CAACtB,IAAI,CAAC,CAAC;YAACC,IAAI;YAAEC,QAAQ,EAAE,IAAI,CAACK,EAAE;YAAEJ,KAAK;YAAEC,SAAS;QAAC,CAAC;QACnEkB,IAAI,CAACV,IAAI,CAACC,QAAQ;IACpB,CAAC;IAEDU,YAAY,CAACC,GAAW,EAAEC,KAAU,EAAE,CAAC;QACrC,IAAI,CAACtB,KAAK,CAACqB,GAAG,IAAIE,MAAM,CAACD,KAAK;IAChC,CAAC;IAEDE,OAAO,CAACC,EAAO,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC;YACH,MAAM,CAACA,EAAE;QACX,CAAC,QAAS,CAAC;YACT,IAAI,CAAChB,IAAI;QACX,CAAC;IACH,CAAC;UAEKiB,YAAY,CAAID,EAAwB,EAAc,CAAC;QAC3D,GAAG,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAACA,EAAE;QACjB,CAAC,QAAS,CAAC;YACT,IAAI,CAAChB,IAAI;QACX,CAAC;IACH,CAAC;;QApFUZ,IAAI,GAAJA,IAAI;AAuFV,KAAK,CAAC8B,KAAK,IAChB7B,IAAY,EACZC,QAAiB,EACjBC,KAAiC,GAC9B,CAAC;IACJ,MAAM,CAAC,GAAG,CAACH,IAAI,CAAC,CAAC;QAACC,IAAI;QAAEC,QAAQ;QAAEC,KAAK;IAAC,CAAC;AAC3C,CAAC;QANY2B,KAAK,GAALA,KAAK;AAQX,KAAK,CAACC,cAAc,OA/GF,OAAU,UA+GUC,QAAQ;;QAAxCD,cAAc,GAAdA,cAAc"}