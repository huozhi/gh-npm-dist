{"version":3,"sources":["../../../trace/report/to-telemetry.ts"],"sourcesContent":["import { traceGlobals } from '../shared'\n\nconst TRACE_EVENT_ACCESSLIST = new Map(\n  Object.entries({\n    'webpack-invalidated': 'WEBPACK_INVALIDATED',\n  })\n)\n\nconst reportToTelemetry = (spanName: string, duration: number) => {\n  const eventName = TRACE_EVENT_ACCESSLIST.get(spanName)\n  if (!eventName) {\n    return\n  }\n  const telemetry = traceGlobals.get('telemetry')\n  if (!telemetry) {\n    return\n  }\n\n  telemetry.record({\n    eventName,\n    payload: {\n      durationInMicroseconds: duration,\n    },\n  })\n}\n\nexport default {\n  flushAll: () => {},\n  report: reportToTelemetry,\n}\n"],"names":["TRACE_EVENT_ACCESSLIST","Map","Object","entries","reportToTelemetry","spanName","duration","eventName","get","telemetry","record","payload","durationInMicroseconds","flushAll","report"],"mappings":";;;;;AAA6B,GAAW,CAAX,OAAW;AAExC,KAAK,CAACA,sBAAsB,GAAG,GAAG,CAACC,GAAG,CACpCC,MAAM,CAACC,OAAO,CAAC,CAAC;IACd,CAAqB,sBAAE,CAAqB;AAC9C,CAAC;AAGH,KAAK,CAACC,iBAAiB,IAAIC,QAAgB,EAAEC,QAAgB,GAAK,CAAC;IACjE,KAAK,CAACC,SAAS,GAAGP,sBAAsB,CAACQ,GAAG,CAACH,QAAQ;IACrD,EAAE,GAAGE,SAAS,EAAE,CAAC;QACf,MAAM;IACR,CAAC;IACD,KAAK,CAACE,SAAS,GAbY,OAAW,cAaPD,GAAG,CAAC,CAAW;IAC9C,EAAE,GAAGC,SAAS,EAAE,CAAC;QACf,MAAM;IACR,CAAC;IAEDA,SAAS,CAACC,MAAM,CAAC,CAAC;QAChBH,SAAS;QACTI,OAAO,EAAE,CAAC;YACRC,sBAAsB,EAAEN,QAAQ;QAClC,CAAC;IACH,CAAC;AACH,CAAC;eAEc,CAAC;IACdO,QAAQ,MAAQ,CAAC,CAAC;IAClBC,MAAM,EAAEV,iBAAiB;AAC3B,CAAC"}