{"version":3,"sources":["../../telemetry/storage.ts"],"sourcesContent":["import chalk from 'next/dist/compiled/chalk'\nimport Conf from 'next/dist/compiled/conf'\nimport { BinaryLike, createHash, randomBytes } from 'crypto'\nimport isDockerFunction from 'next/dist/compiled/is-docker'\nimport path from 'path'\n\nimport { getAnonymousMeta } from './anonymous-meta'\nimport * as ciEnvironment from './ci-info'\nimport { _postPayload } from './post-payload'\nimport { getRawProjectId } from './project-id'\n\n// This is the key that stores whether or not telemetry is enabled or disabled.\nconst TELEMETRY_KEY_ENABLED = 'telemetry.enabled'\n\n// This is the key that specifies when the user was informed about anonymous\n// telemetry collection.\nconst TELEMETRY_KEY_NOTIFY_DATE = 'telemetry.notifiedAt'\n\n// This is a quasi-persistent identifier used to dedupe recurring events. It's\n// generated from random data and completely anonymous.\nconst TELEMETRY_KEY_ID = `telemetry.anonymousId`\n\n// This is the cryptographic salt that is included within every hashed value.\n// This salt value is never sent to us, ensuring privacy and the one-way nature\n// of the hash (prevents dictionary lookups of pre-computed hashes).\n// See the `oneWayHash` function.\nconst TELEMETRY_KEY_SALT = `telemetry.salt`\n\ntype TelemetryEvent = { eventName: string; payload: object }\ntype EventContext = {\n  anonymousId: string\n  projectId: string\n  sessionId: string\n}\ntype EventMeta = { [key: string]: unknown }\ntype EventBatchShape = {\n  eventName: string\n  fields: object\n}\n\ntype RecordObject = {\n  isFulfilled: boolean\n  isRejected: boolean\n  value?: any\n  reason?: any\n}\n\nexport class Telemetry {\n  private conf: Conf<any> | null\n  private sessionId: string\n  private rawProjectId: string\n  private NEXT_TELEMETRY_DISABLED: any\n  private NEXT_TELEMETRY_DEBUG: any\n\n  private queue: Set<Promise<RecordObject>>\n\n  constructor({ distDir }: { distDir: string }) {\n    // Read in the constructor so that .env can be loaded before reading\n    const { NEXT_TELEMETRY_DISABLED, NEXT_TELEMETRY_DEBUG } = process.env\n    this.NEXT_TELEMETRY_DISABLED = NEXT_TELEMETRY_DISABLED\n    this.NEXT_TELEMETRY_DEBUG = NEXT_TELEMETRY_DEBUG\n    const storageDirectory = getStorageDirectory(distDir)\n\n    try {\n      // `conf` incorrectly throws a permission error during initialization\n      // instead of waiting for first use. We need to handle it, otherwise the\n      // process may crash.\n      this.conf = new Conf({ projectName: 'nextjs', cwd: storageDirectory })\n    } catch (_) {\n      this.conf = null\n    }\n    this.sessionId = randomBytes(32).toString('hex')\n    this.rawProjectId = getRawProjectId()\n\n    this.queue = new Set()\n\n    this.notify()\n  }\n\n  private notify = () => {\n    if (this.isDisabled || !this.conf) {\n      return\n    }\n\n    // The end-user has already been notified about our telemetry integration. We\n    // don't need to constantly annoy them about it.\n    // We will re-inform users about the telemetry if significant changes are\n    // ever made.\n    if (this.conf.get(TELEMETRY_KEY_NOTIFY_DATE, '')) {\n      return\n    }\n    this.conf.set(TELEMETRY_KEY_NOTIFY_DATE, Date.now().toString())\n\n    console.log(\n      `${chalk.magenta.bold(\n        'Attention'\n      )}: Next.js now collects completely anonymous telemetry regarding usage.`\n    )\n    console.log(\n      `This information is used to shape Next.js' roadmap and prioritize features.`\n    )\n    console.log(\n      `You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:`\n    )\n    console.log(chalk.cyan('https://nextjs.org/telemetry'))\n    console.log()\n  }\n\n  get anonymousId(): string {\n    const val = this.conf && this.conf.get(TELEMETRY_KEY_ID)\n    if (val) {\n      return val\n    }\n\n    const generated = randomBytes(32).toString('hex')\n    this.conf && this.conf.set(TELEMETRY_KEY_ID, generated)\n    return generated\n  }\n\n  get salt(): string {\n    const val = this.conf && this.conf.get(TELEMETRY_KEY_SALT)\n    if (val) {\n      return val\n    }\n\n    const generated = randomBytes(16).toString('hex')\n    this.conf && this.conf.set(TELEMETRY_KEY_SALT, generated)\n    return generated\n  }\n\n  private get isDisabled(): boolean {\n    if (!!this.NEXT_TELEMETRY_DISABLED || !this.conf) {\n      return true\n    }\n    return this.conf.get(TELEMETRY_KEY_ENABLED, true) === false\n  }\n\n  setEnabled = (_enabled: boolean) => {\n    const enabled = !!_enabled\n    this.conf && this.conf.set(TELEMETRY_KEY_ENABLED, enabled)\n    return this.conf && this.conf.path\n  }\n\n  get isEnabled(): boolean {\n    return !!this.conf && this.conf.get(TELEMETRY_KEY_ENABLED, true) !== false\n  }\n\n  oneWayHash = (payload: BinaryLike): string => {\n    const hash = createHash('sha256')\n\n    // Always prepend the payload value with salt. This ensures the hash is truly\n    // one-way.\n    hash.update(this.salt)\n\n    // Update is an append operation, not a replacement. The salt from the prior\n    // update is still present!\n    hash.update(payload)\n    return hash.digest('hex')\n  }\n\n  private get projectId(): string {\n    return this.oneWayHash(this.rawProjectId)\n  }\n\n  record = (\n    _events: TelemetryEvent | TelemetryEvent[]\n  ): Promise<RecordObject> => {\n    const _this = this\n    // pseudo try-catch\n    async function wrapper() {\n      return await _this.submitRecord(_events)\n    }\n\n    const prom = wrapper()\n      .then((value) => ({\n        isFulfilled: true,\n        isRejected: false,\n        value,\n      }))\n      .catch((reason) => ({\n        isFulfilled: false,\n        isRejected: true,\n        reason,\n      }))\n      // Acts as `Promise#finally` because `catch` transforms the error\n      .then((res) => {\n        // Clean up the event to prevent unbounded `Set` growth\n        this.queue.delete(prom)\n        return res\n      })\n\n    // Track this `Promise` so we can flush pending events\n    this.queue.add(prom)\n\n    return prom\n  }\n\n  flush = async () => Promise.all(this.queue).catch(() => null)\n\n  private submitRecord = (\n    _events: TelemetryEvent | TelemetryEvent[]\n  ): Promise<any> => {\n    let events: TelemetryEvent[]\n    if (Array.isArray(_events)) {\n      events = _events\n    } else {\n      events = [_events]\n    }\n\n    if (events.length < 1) {\n      return Promise.resolve()\n    }\n\n    if (this.NEXT_TELEMETRY_DEBUG) {\n      // Print to standard error to simplify selecting the output\n      events.forEach(({ eventName, payload }) =>\n        console.error(\n          `[telemetry] ` + JSON.stringify({ eventName, payload }, null, 2)\n        )\n      )\n      // Do not send the telemetry data if debugging. Users may use this feature\n      // to preview what data would be sent.\n      return Promise.resolve()\n    }\n\n    // Skip recording telemetry if the feature is disabled\n    if (this.isDisabled) {\n      return Promise.resolve()\n    }\n\n    const context: EventContext = {\n      anonymousId: this.anonymousId,\n      projectId: this.projectId,\n      sessionId: this.sessionId,\n    }\n    const meta: EventMeta = getAnonymousMeta()\n    return _postPayload(`https://telemetry.nextjs.org/api/v1/record`, {\n      context,\n      meta,\n      events: events.map(({ eventName, payload }) => ({\n        eventName,\n        fields: payload,\n      })) as Array<EventBatchShape>,\n    })\n  }\n}\n\nfunction getStorageDirectory(distDir: string): string | undefined {\n  const isLikelyEphemeral = ciEnvironment.isCI || isDockerFunction()\n\n  if (isLikelyEphemeral) {\n    return path.join(distDir, 'cache')\n  }\n\n  return undefined\n}\n"],"names":["ciEnvironment","TELEMETRY_KEY_ENABLED","TELEMETRY_KEY_NOTIFY_DATE","TELEMETRY_KEY_ID","TELEMETRY_KEY_SALT","Telemetry","distDir","notify","isDisabled","conf","get","set","Date","now","toString","console","log","magenta","bold","cyan","setEnabled","_enabled","enabled","path","oneWayHash","payload","hash","update","salt","digest","record","_events","_this","wrapper","submitRecord","prom","then","value","isFulfilled","isRejected","catch","reason","res","queue","delete","add","flush","Promise","all","events","Array","isArray","length","resolve","NEXT_TELEMETRY_DEBUG","forEach","eventName","error","JSON","stringify","context","anonymousId","projectId","sessionId","meta","map","fields","NEXT_TELEMETRY_DISABLED","process","env","storageDirectory","getStorageDirectory","projectName","cwd","_","rawProjectId","Set","val","generated","isEnabled","isLikelyEphemeral","isCI","join","undefined"],"mappings":"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"}