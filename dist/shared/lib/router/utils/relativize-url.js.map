{"version":3,"sources":["../../../../../shared/lib/router/utils/relativize-url.ts"],"sourcesContent":["/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function relativizeURL(url: string | string, base: string | URL) {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n  const origin = `${baseURL.protocol}//${baseURL.host}`\n  return `${relative.protocol}//${relative.host}` === origin\n    ? relative.toString().replace(origin, '')\n    : relative.toString()\n}\n"],"names":["relativizeURL","url","base","baseURL","URL","relative","origin","protocol","host","toString","replace"],"mappings":";;;;QAKgBA,aAAa,GAAbA,aAAa;SAAbA,aAAa,CAACC,GAAoB,EAAEC,IAAkB,EAAE,CAAC;IACvE,KAAK,CAACC,OAAO,GAAG,MAAM,CAACD,IAAI,KAAK,CAAQ,UAAG,GAAG,CAACE,GAAG,CAACF,IAAI,IAAIA,IAAI;IAC/D,KAAK,CAACG,QAAQ,GAAG,GAAG,CAACD,GAAG,CAACH,GAAG,EAAEC,IAAI;IAClC,KAAK,CAACI,MAAM,MAAMH,OAAO,CAACI,QAAQ,CAAC,EAAE,EAAEJ,OAAO,CAACK,IAAI;IACnD,MAAM,IAAIH,QAAQ,CAACE,QAAQ,CAAC,EAAE,EAAEF,QAAQ,CAACG,IAAI,OAAOF,MAAM,GACtDD,QAAQ,CAACI,QAAQ,GAAGC,OAAO,CAACJ,MAAM,EAAE,CAAE,KACtCD,QAAQ,CAACI,QAAQ;AACvB,CAAC"}