{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-relative-url.ts"],"sourcesContent":["import { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(url: string, base?: string) {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n  const resolvedBase = base ? new URL(base, globalBase) : globalBase\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n  return {\n    pathname,\n    query: searchParamsToUrlQuery(searchParams),\n    search,\n    hash,\n    href: href.slice(globalBase.origin.length),\n  }\n}\n"],"names":["parseRelativeUrl","url","base","globalBase","URL","window","resolvedBase","pathname","searchParams","search","hash","href","origin","Error","query","slice","length"],"mappings":";;;;QASgBA,gBAAgB,GAAhBA,gBAAgB;AATE,GAAa,CAAb,MAAa;AACR,GAAe,CAAf,YAAe;SAQtCA,gBAAgB,CAACC,GAAW,EAAEC,IAAa,EAAE,CAAC;IAC5D,KAAK,CAACC,UAAU,GAAG,GAAG,CAACC,GAAG,CACxB,MAAM,CAACC,MAAM,KAAK,CAAW,aAAG,CAAU,gBAXZ,MAAa;IAa7C,KAAK,CAACC,YAAY,GAAGJ,IAAI,GAAG,GAAG,CAACE,GAAG,CAACF,IAAI,EAAEC,UAAU,IAAIA,UAAU;IAClE,KAAK,CAAC,CAAC,CAACI,QAAQ,GAAEC,YAAY,GAAEC,MAAM,GAAEC,IAAI,GAAEC,IAAI,GAAEC,MAAM,EAAC,CAAC,GAAG,GAAG,CAACR,GAAG,CACpEH,GAAG,EACHK,YAAY;IAEd,EAAE,EAAEM,MAAM,KAAKT,UAAU,CAACS,MAAM,EAAE,CAAC;QACjC,KAAK,CAAC,GAAG,CAACC,KAAK,EAAE,iDAAiD,EAAEZ,GAAG;IACzE,CAAC;IACD,MAAM,CAAC,CAAC;QACNM,QAAQ;QACRO,KAAK,MAtB8B,YAAe,yBAsBpBN,YAAY;QAC1CC,MAAM;QACNC,IAAI;QACJC,IAAI,EAAEA,IAAI,CAACI,KAAK,CAACZ,UAAU,CAACS,MAAM,CAACI,MAAM;IAC3C,CAAC;AACH,CAAC"}