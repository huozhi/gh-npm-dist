{"version":3,"sources":["../../server/incremental-cache.ts"],"sourcesContent":["import type { CacheFs } from '../shared/lib/utils'\n\nimport LRUCache from 'next/dist/compiled/lru-cache'\nimport path from 'path'\nimport { PrerenderManifest } from '../build'\nimport { normalizePagePath } from './normalize-page-path'\n\nfunction toRoute(pathname: string): string {\n  return pathname.replace(/\\/$/, '').replace(/\\/index$/, '') || '/'\n}\n\ninterface CachedRedirectValue {\n  kind: 'REDIRECT'\n  props: Object\n}\n\ninterface CachedPageValue {\n  kind: 'PAGE'\n  html: string\n  pageData: Object\n}\n\nexport type IncrementalCacheValue = CachedRedirectValue | CachedPageValue\n\ntype IncrementalCacheEntry = {\n  curRevalidate?: number | false\n  // milliseconds to revalidate after\n  revalidateAfter: number | false\n  isStale?: boolean\n  value: IncrementalCacheValue | null\n}\n\nexport class IncrementalCache {\n  incrementalOptions: {\n    flushToDisk?: boolean\n    pagesDir?: string\n    distDir?: string\n    dev?: boolean\n  }\n\n  prerenderManifest: PrerenderManifest\n  cache?: LRUCache<string, IncrementalCacheEntry>\n  locales?: string[]\n  fs: CacheFs\n\n  constructor({\n    fs,\n    max,\n    dev,\n    distDir,\n    pagesDir,\n    flushToDisk,\n    locales,\n    getPrerenderManifest,\n  }: {\n    fs: CacheFs\n    dev: boolean\n    max?: number\n    distDir: string\n    pagesDir: string\n    flushToDisk?: boolean\n    locales?: string[]\n    getPrerenderManifest: () => PrerenderManifest\n  }) {\n    this.fs = fs\n    this.incrementalOptions = {\n      dev,\n      distDir,\n      pagesDir,\n      flushToDisk:\n        !dev && (typeof flushToDisk !== 'undefined' ? flushToDisk : true),\n    }\n    this.locales = locales\n    this.prerenderManifest = getPrerenderManifest()\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      max = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n\n    if (max) {\n      this.cache = new LRUCache({\n        max,\n        length({ value }) {\n          if (!value || value.kind === 'REDIRECT') return 25\n          // rough estimate of size of cache value\n          return value.html.length + JSON.stringify(value.pageData).length\n        },\n      })\n    }\n  }\n\n  private getSeedPath(pathname: string, ext: string): string {\n    return path.join(this.incrementalOptions.pagesDir!, `${pathname}.${ext}`)\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number\n  ): number | false {\n    pathname = toRoute(pathname)\n\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (this.incrementalOptions.dev) return new Date().getTime() - 1000\n\n    const { initialRevalidateSeconds } = this.prerenderManifest.routes[\n      pathname\n    ] || {\n      initialRevalidateSeconds: 1,\n    }\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  getFallback(page: string): Promise<string> {\n    page = normalizePagePath(page)\n    return this.fs.readFile(this.getSeedPath(page, 'html'))\n  }\n\n  // get data from cache if available\n  async get(pathname: string): Promise<IncrementalCacheEntry | null> {\n    if (this.incrementalOptions.dev) return null\n    pathname = normalizePagePath(pathname)\n\n    let data = this.cache && this.cache.get(pathname)\n\n    // let's check the disk for seed data\n    if (!data) {\n      if (this.prerenderManifest.notFoundRoutes.includes(pathname)) {\n        const now = Date.now()\n        const revalidateAfter = this.calculateRevalidate(pathname, now)\n        data = {\n          value: null,\n          revalidateAfter: revalidateAfter !== false ? now : false,\n        }\n      }\n\n      try {\n        const htmlPath = this.getSeedPath(pathname, 'html')\n        const jsonPath = this.getSeedPath(pathname, 'json')\n        const html = await this.fs.readFile(htmlPath)\n        const pageData = JSON.parse(await this.fs.readFile(jsonPath))\n        const { mtime } = await this.fs.stat(htmlPath)\n\n        data = {\n          revalidateAfter: this.calculateRevalidate(pathname, mtime.getTime()),\n          value: {\n            kind: 'PAGE',\n            html,\n            pageData,\n          },\n        }\n        if (this.cache) {\n          this.cache.set(pathname, data)\n        }\n      } catch (_) {\n        // unable to get data from disk\n      }\n    }\n    if (!data) {\n      return null\n    }\n\n    if (\n      data &&\n      data.revalidateAfter !== false &&\n      data.revalidateAfter < new Date().getTime()\n    ) {\n      data.isStale = true\n    }\n\n    const manifestPath = toRoute(pathname)\n    const manifestEntry = this.prerenderManifest.routes[manifestPath]\n\n    if (data && manifestEntry) {\n      data.curRevalidate = manifestEntry.initialRevalidateSeconds\n    }\n    return data\n  }\n\n  // populate the incremental cache with new data\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    revalidateSeconds?: number | false\n  ) {\n    if (this.incrementalOptions.dev) return\n    if (typeof revalidateSeconds !== 'undefined') {\n      // TODO: Update this to not mutate the manifest from the\n      // build.\n      this.prerenderManifest.routes[pathname] = {\n        dataRoute: path.posix.join(\n          '/_next/data',\n          `${normalizePagePath(pathname)}.json`\n        ),\n        srcRoute: null, // FIXME: provide actual source route, however, when dynamically appending it doesn't really matter\n        initialRevalidateSeconds: revalidateSeconds,\n      }\n    }\n\n    pathname = normalizePagePath(pathname)\n    if (this.cache) {\n      this.cache.set(pathname, {\n        revalidateAfter: this.calculateRevalidate(\n          pathname,\n          new Date().getTime()\n        ),\n        value: data,\n      })\n    }\n\n    // TODO: This option needs to cease to exist unless it stops mutating the\n    // `next build` output's manifest.\n    if (this.incrementalOptions.flushToDisk && data?.kind === 'PAGE') {\n      try {\n        const seedHtmlPath = this.getSeedPath(pathname, 'html')\n        const seedJsonPath = this.getSeedPath(pathname, 'json')\n        await this.fs.mkdir(path.dirname(seedHtmlPath))\n        await this.fs.writeFile(seedHtmlPath, data.html)\n        await this.fs.writeFile(seedJsonPath, JSON.stringify(data.pageData))\n      } catch (error) {\n        // failed to flush to disk\n        console.warn('Failed to update prerender files for', pathname, error)\n      }\n    }\n  }\n}\n"],"names":["toRoute","pathname","replace","IncrementalCache","fs","max","dev","distDir","pagesDir","flushToDisk","locales","getPrerenderManifest","incrementalOptions","prerenderManifest","process","env","__NEXT_TEST_MAX_ISR_CACHE","parseInt","cache","length","value","kind","html","JSON","stringify","pageData","getSeedPath","ext","join","calculateRevalidate","fromTime","Date","getTime","initialRevalidateSeconds","routes","revalidateAfter","getFallback","page","readFile","get","data","notFoundRoutes","includes","now","htmlPath","jsonPath","parse","mtime","stat","set","_","isStale","manifestPath","manifestEntry","curRevalidate","revalidateSeconds","dataRoute","posix","srcRoute","seedHtmlPath","seedJsonPath","mkdir","dirname","writeFile","error","console","warn"],"mappings":"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"}