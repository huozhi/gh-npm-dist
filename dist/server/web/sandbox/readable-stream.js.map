{"version":3,"sources":["../../../../server/web/sandbox/readable-stream.ts"],"sourcesContent":["import { TransformStream } from 'next/dist/compiled/web-streams-polyfill'\n\nclass ReadableStream<T> {\n  constructor(opts: UnderlyingSource = {}) {\n    let closed = false\n    let pullPromise: any\n\n    let transformController: TransformStreamDefaultController\n    const { readable, writable } = new TransformStream(\n      {\n        start: (controller: TransformStreamDefaultController) => {\n          transformController = controller\n        },\n      },\n      undefined,\n      {\n        highWaterMark: 1,\n      }\n    )\n\n    const writer = writable.getWriter()\n    const encoder = new TextEncoder()\n    const controller: ReadableStreamController<T> = {\n      get desiredSize() {\n        return transformController.desiredSize\n      },\n      close: () => {\n        if (!closed) {\n          closed = true\n          writer.close()\n        }\n      },\n      enqueue: (chunk: T) => {\n        writer.write(typeof chunk === 'string' ? encoder.encode(chunk) : chunk)\n        pull()\n      },\n      error: (reason: any) => {\n        transformController.error(reason)\n      },\n    }\n\n    const pull = () => {\n      if (opts.pull) {\n        if (!pullPromise) {\n          pullPromise = Promise.resolve().then(() => {\n            pullPromise = 0\n            opts.pull!(controller)\n          })\n        }\n      }\n    }\n\n    if (opts.start) {\n      opts.start(controller)\n    }\n\n    if (opts.cancel) {\n      readable.cancel = (reason: any) => {\n        opts.cancel!(reason)\n        return readable.cancel(reason)\n      }\n    }\n\n    pull()\n\n    return readable\n  }\n}\n\nexport { TransformStream, ReadableStream }\n"],"names":["TransformStream","ReadableStream","opts","closed","pullPromise","transformController","readable","writable","start","controller","undefined","highWaterMark","writer","getWriter","encoder","TextEncoder","desiredSize","close","enqueue","chunk","write","encode","pull","error","reason","Promise","resolve","then","cancel"],"mappings":";;;;+BAqESA,CAAe;;;eArEQ,mBAAyC;;;;AAAzC,GAAyC,CAAzC,mBAAyC;MAEnEC,cAAc;gBACNC,IAAsB,GAAG,CAAC,CAAC,CAAE,CAAC;QACxC,GAAG,CAACC,MAAM,GAAG,KAAK;QAClB,GAAG,CAACC,WAAW;QAEf,GAAG,CAACC,mBAAmB;QACvB,KAAK,CAAC,CAAC,CAACC,QAAQ,GAAEC,QAAQ,EAAC,CAAC,GAAG,GAAG,CARN,mBAAyC,iBASnE,CAAC;YACCC,KAAK,GAAGC,UAA4C,GAAK,CAAC;gBACxDJ,mBAAmB,GAAGI,UAAU;YAClC,CAAC;QACH,CAAC,EACDC,SAAS,EACT,CAAC;YACCC,aAAa,EAAE,CAAC;QAClB,CAAC;QAGH,KAAK,CAACC,MAAM,GAAGL,QAAQ,CAACM,SAAS;QACjC,KAAK,CAACC,OAAO,GAAG,GAAG,CAACC,WAAW;QAC/B,KAAK,CAACN,WAAU,GAAgC,CAAC;gBAC3CO,WAAW,IAAG,CAAC;gBACjB,MAAM,CAACX,mBAAmB,CAACW,WAAW;YACxC,CAAC;YACDC,KAAK,MAAQ,CAAC;gBACZ,EAAE,GAAGd,MAAM,EAAE,CAAC;oBACZA,MAAM,GAAG,IAAI;oBACbS,MAAM,CAACK,KAAK;gBACd,CAAC;YACH,CAAC;YACDC,OAAO,GAAGC,KAAQ,GAAK,CAAC;gBACtBP,MAAM,CAACQ,KAAK,CAAC,MAAM,CAACD,KAAK,KAAK,CAAQ,UAAGL,OAAO,CAACO,MAAM,CAACF,KAAK,IAAIA,KAAK;gBACtEG,IAAI;YACN,CAAC;YACDC,KAAK,GAAGC,MAAW,GAAK,CAAC;gBACvBnB,mBAAmB,CAACkB,KAAK,CAACC,MAAM;YAClC,CAAC;QACH,CAAC;QAED,KAAK,CAACF,IAAI,OAAS,CAAC;YAClB,EAAE,EAAEpB,IAAI,CAACoB,IAAI,EAAE,CAAC;gBACd,EAAE,GAAGlB,WAAW,EAAE,CAAC;oBACjBA,WAAW,GAAGqB,OAAO,CAACC,OAAO,GAAGC,IAAI,KAAO,CAAC;wBAC1CvB,WAAW,GAAG,CAAC;wBACfF,IAAI,CAACoB,IAAI,CAAEb,WAAU;oBACvB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAED,EAAE,EAAEP,IAAI,CAACM,KAAK,EAAE,CAAC;YACfN,IAAI,CAACM,KAAK,CAACC,WAAU;QACvB,CAAC;QAED,EAAE,EAAEP,IAAI,CAAC0B,MAAM,EAAE,CAAC;YAChBtB,QAAQ,CAACsB,MAAM,IAAIJ,MAAW,GAAK,CAAC;gBAClCtB,IAAI,CAAC0B,MAAM,CAAEJ,MAAM;gBACnB,MAAM,CAAClB,QAAQ,CAACsB,MAAM,CAACJ,MAAM;YAC/B,CAAC;QACH,CAAC;QAEDF,IAAI;QAEJ,MAAM,CAAChB,QAAQ;IACjB,CAAC;;QAGuBL,cAAc,GAAdA,cAAc"}