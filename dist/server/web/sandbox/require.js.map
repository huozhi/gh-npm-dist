{"version":3,"sources":["../../../../server/web/sandbox/require.ts"],"sourcesContent":["import type { Context } from 'vm'\nimport { dirname } from 'path'\nimport { readFileSync } from 'fs'\nimport { runInContext } from 'vm'\n\n/**\n * Allows to require a series of dependencies provided by their path\n * into a provided module context. It fills and accepts a require\n * cache to ensure each module is loaded once.\n */\nexport function requireDependencies(params: {\n  context: Context\n  requireCache: Map<string, any>\n  dependencies: {\n    mapExports: { [key: string]: string }\n    path: string\n  }[]\n}) {\n  const { context, requireCache, dependencies } = params\n  const requireFn = createRequire(context, requireCache)\n  for (const { path, mapExports } of dependencies) {\n    const mod = requireFn(path, path)\n    for (const mapKey of Object.keys(mapExports)) {\n      context[mapExports[mapKey]] = mod[mapKey]\n    }\n  }\n}\n\nfunction createRequire(context: Context, cache: Map<string, any>) {\n  return function requireFn(referrer: string, specifier: string) {\n    const resolved = require.resolve(specifier, {\n      paths: [dirname(referrer)],\n    })\n\n    const cached = cache.get(resolved)\n    if (cached !== undefined) {\n      return cached.exports\n    }\n\n    const module = {\n      exports: {},\n      loaded: false,\n      id: resolved,\n    }\n\n    cache.set(resolved, module)\n    const fn = runInContext(\n      `(function(module,exports,require,__dirname,__filename) {${readFileSync(\n        resolved,\n        'utf-8'\n      )}\\n})`,\n      context\n    )\n\n    try {\n      fn(\n        module,\n        module.exports,\n        requireFn.bind(null, resolved),\n        dirname(resolved),\n        resolved\n      )\n    } finally {\n      cache.delete(resolved)\n    }\n    module.loaded = true\n    return module.exports\n  }\n}\n"],"names":["requireDependencies","params","context","requireCache","dependencies","requireFn","createRequire","path","mapExports","mod","mapKey","Object","keys","cache","referrer","specifier","resolved","require","resolve","paths","dirname","cached","get","undefined","exports","module","loaded","id","set","fn","bind","delete"],"mappings":";;;;QAUgBA,mBAAmB,GAAnBA,mBAAmB;AATX,GAAM,CAAN,KAAM;AACD,GAAI,CAAJ,GAAI;AACJ,GAAI,CAAJ,GAAI;SAOjBA,mBAAmB,CAACC,MAOnC,EAAE,CAAC;IACF,KAAK,CAAC,CAAC,CAACC,OAAO,GAAEC,YAAY,GAAEC,YAAY,EAAC,CAAC,GAAGH,MAAM;IACtD,KAAK,CAACI,SAAS,GAAGC,aAAa,CAACJ,OAAO,EAAEC,YAAY;IACrD,GAAG,EAAE,KAAK,CAAC,CAAC,CAACI,IAAI,GAAEC,UAAU,EAAC,CAAC,IAAIJ,YAAY,CAAE,CAAC;QAChD,KAAK,CAACK,GAAG,GAAGJ,SAAS,CAACE,IAAI,EAAEA,IAAI;QAChC,GAAG,EAAE,KAAK,CAACG,MAAM,IAAIC,MAAM,CAACC,IAAI,CAACJ,UAAU,EAAG,CAAC;YAC7CN,OAAO,CAACM,UAAU,CAACE,MAAM,KAAKD,GAAG,CAACC,MAAM;QAC1C,CAAC;IACH,CAAC;AACH,CAAC;SAEQJ,aAAa,CAACJ,OAAgB,EAAEW,KAAuB,EAAE,CAAC;IACjE,MAAM,CAAC,QAAQ,CAACR,SAAS,CAACS,QAAgB,EAAEC,SAAiB,EAAE,CAAC;QAC9D,KAAK,CAACC,QAAQ,GAAGC,OAAO,CAACC,OAAO,CAACH,SAAS,EAAE,CAAC;YAC3CI,KAAK,EAAE,CAACC;oBA9BU,KAAM,UA8BRN,QAAQ;YAAC,CAAC;QAC5B,CAAC;QAED,KAAK,CAACO,MAAM,GAAGR,KAAK,CAACS,GAAG,CAACN,QAAQ;QACjC,EAAE,EAAEK,MAAM,KAAKE,SAAS,EAAE,CAAC;YACzB,MAAM,CAACF,MAAM,CAACG,OAAO;QACvB,CAAC;QAED,KAAK,CAACC,MAAM,GAAG,CAAC;YACdD,OAAO,EAAE,CAAC,CAAC;YACXE,MAAM,EAAE,KAAK;YACbC,EAAE,EAAEX,QAAQ;QACd,CAAC;QAEDH,KAAK,CAACe,GAAG,CAACZ,QAAQ,EAAES,MAAM;QAC1B,KAAK,CAACI,EAAE,OA3CiB,GAAI,gBA4C1B,wDAAwD,MA7ClC,GAAI,eA8CzBb,QAAQ,EACR,CAAO,QACP,IAAI,GACNd,OAAO;QAGT,GAAG,CAAC,CAAC;YACH2B,EAAE,CACAJ,MAAM,EACNA,MAAM,CAACD,OAAO,EACdnB,SAAS,CAACyB,IAAI,CAAC,IAAI,EAAEd,QAAQ,OAzDb,KAAM,UA0DdA,QAAQ,GAChBA,QAAQ;QAEZ,CAAC,QAAS,CAAC;YACTH,KAAK,CAACkB,MAAM,CAACf,QAAQ;QACvB,CAAC;QACDS,MAAM,CAACC,MAAM,GAAG,IAAI;QACpB,MAAM,CAACD,MAAM,CAACD,OAAO;IACvB,CAAC;AACH,CAAC"}