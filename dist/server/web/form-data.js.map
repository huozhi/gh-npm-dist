{"version":3,"sources":["../../../server/web/form-data.ts"],"sourcesContent":["import { isBlob } from './is'\nimport { streamToIterator } from './utils'\n\nconst carriage = '\\r\\n'\nconst dashes = '--'\nconst carriageLength = 2\n\nfunction escape(str: string) {\n  return str.replace(/\"/g, '\\\\\"')\n}\n\nfunction getFooter(boundary: string) {\n  return `${dashes}${boundary}${dashes}${carriage.repeat(2)}`\n}\n\nfunction getHeader(boundary: string, name: string, field: FormDataEntryValue) {\n  let header = ''\n  header += `${dashes}${boundary}${carriage}`\n  header += `Content-Disposition: form-data; name=\"${escape(name)}\"`\n\n  if (isBlob(field)) {\n    header += `; filename=\"${escape(field.name)}\"${carriage}`\n    header += `Content-Type: ${field.type || 'application/octet-stream'}`\n  }\n\n  return `${header}${carriage.repeat(2)}`\n}\n\nexport function getBoundary() {\n  const array = new Uint8Array(32)\n  crypto.getRandomValues(array)\n\n  let str = ''\n  for (var i = 0; i < array.length; i++) {\n    str += array[i].toString(16).padStart(2, '0')\n  }\n\n  return str\n}\n\nexport async function* formDataIterator(\n  form: FormData,\n  boundary: string\n): AsyncIterableIterator<Uint8Array> {\n  const encoder = new TextEncoder()\n  for (const [name, value] of form) {\n    yield encoder.encode(getHeader(boundary, name, value))\n\n    if (isBlob(value)) {\n      const stream: ReadableStream<Uint8Array> = value.stream()\n      yield* streamToIterator(stream)\n    } else {\n      yield encoder.encode(value)\n    }\n\n    yield encoder.encode(carriage)\n  }\n\n  yield encoder.encode(getFooter(boundary))\n}\n\nexport function getFormDataLength(form: FormData, boundary: string) {\n  let length = 0\n\n  for (const [name, value] of form) {\n    length += Buffer.byteLength(getHeader(boundary, name, value))\n    length += isBlob(value) ? value.size : Buffer.byteLength(String(value))\n    length += carriageLength\n  }\n\n  length += Buffer.byteLength(getFooter(boundary))\n  return length\n}\n"],"names":["getBoundary","formDataIterator","getFormDataLength","carriage","dashes","carriageLength","escape","str","replace","getFooter","boundary","repeat","getHeader","name","field","header","type","array","Uint8Array","crypto","getRandomValues","i","length","toString","padStart","form","encoder","TextEncoder","value","encode","stream","Buffer","byteLength","size","String"],"mappings":"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"}