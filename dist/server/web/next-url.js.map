{"version":3,"sources":["../../../server/web/next-url.ts"],"sourcesContent":["import type { PathLocale } from '../../shared/lib/i18n/normalize-locale-path'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport { getLocaleMetadata } from '../../shared/lib/i18n/get-locale-metadata'\nimport { replaceBasePath } from '../router'\nimport cookie from 'next/dist/compiled/cookie'\n\ninterface Options {\n  base?: string | URL\n  basePath?: string\n  headers?: { [key: string]: string | string[] | undefined }\n  i18n?: I18NConfig | null\n  trailingSlash?: boolean\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  [Internal]: {\n    url: URL\n    options: Options\n    basePath: string\n    locale?: {\n      defaultLocale: string\n      domain?: DomainLocale\n      locale: string\n      path: PathLocale\n      redirect?: string\n      trailingSlash?: boolean\n    }\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyzeUrl()\n  }\n\n  private analyzeUrl() {\n    const { headers = {}, basePath, i18n } = this[Internal].options\n\n    if (basePath && this[Internal].url.pathname.startsWith(basePath)) {\n      this[Internal].url.pathname = replaceBasePath(\n        this[Internal].url.pathname,\n        basePath\n      )\n      this[Internal].basePath = basePath\n    } else {\n      this[Internal].basePath = ''\n    }\n\n    if (i18n) {\n      this[Internal].locale = getLocaleMetadata({\n        cookies: () => {\n          const value = headers['cookie']\n          return value\n            ? cookie.parse(Array.isArray(value) ? value.join(';') : value)\n            : {}\n        },\n        headers: headers,\n        nextConfig: {\n          basePath: basePath,\n          i18n: i18n,\n        },\n        url: {\n          hostname: this[Internal].url.hostname || null,\n          pathname: this[Internal].url.pathname,\n        },\n      })\n\n      if (this[Internal].locale?.path.detectedLocale) {\n        this[Internal].url.pathname = this[Internal].locale!.path.pathname\n      }\n    }\n  }\n\n  private formatPathname() {\n    const { i18n } = this[Internal].options\n    let pathname = this[Internal].url.pathname\n\n    if (\n      this[Internal].locale?.locale &&\n      i18n?.defaultLocale !== this[Internal].locale?.locale\n    ) {\n      pathname = `/${this[Internal].locale?.locale}${pathname}`\n    }\n\n    if (this[Internal].basePath) {\n      pathname = `${this[Internal].basePath}${pathname}`\n    }\n\n    return pathname\n  }\n\n  public get locale() {\n    return this[Internal].locale?.locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale!.locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].locale?.defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].locale?.domain\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    return `${this.protocol}//${this.host}${pathname}${this[Internal].url.search}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyzeUrl()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n"],"names":["Internal","Symbol","NextURL","input","baseOrOpts","opts","base","options","url","parseURL","basePath","analyzeUrl","headers","i18n","pathname","startsWith","locale","cookies","value","parse","Array","isArray","join","nextConfig","hostname","path","detectedLocale","formatPathname","defaultLocale","locales","includes","TypeError","domainLocale","domain","searchParams","host","port","protocol","href","search","origin","hash","password","username","toString","toJSON","clone","String","REGEX_LOCALHOST_HOSTNAME","URL","replace"],"mappings":";;;;AAEkC,GAA2C,CAA3C,kBAA2C;AAC7C,GAAW,CAAX,OAAW;AACxB,GAA2B,CAA3B,OAA2B;;;;;;AAU9C,KAAK,CAACA,QAAQ,GAAGC,MAAM,CAAC,CAAiB;MAE5BC,OAAO;gBAkBhBC,KAAmB,EACnBC,UAAmC,EACnCC,IAAc,CACd,CAAC;QACD,GAAG,CAACC,IAAI;QACR,GAAG,CAACC,OAAO;QAEX,EAAE,EACC,MAAM,CAACH,UAAU,KAAK,CAAQ,WAAI,CAAU,aAAIA,UAAU,IAC3D,MAAM,CAACA,UAAU,KAAK,CAAQ,SAC9B,CAAC;YACDE,IAAI,GAAGF,UAAU;YACjBG,OAAO,GAAGF,IAAI,IAAI,CAAC,CAAC;QACtB,CAAC,MAAM,CAAC;YACNE,OAAO,GAAGF,IAAI,IAAID,UAAU,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAACJ,QAAQ,IAAI,CAAC;YAChBQ,GAAG,EAAEC,QAAQ,CAACN,KAAK,EAAEG,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAIC,OAAO,CAACD,IAAI;YACzCC,OAAO,EAAEA,OAAO;YAChBG,QAAQ,EAAE,CAAE;QACd,CAAC;QAED,IAAI,CAACC,UAAU;IACjB,CAAC;IAEOA,UAAU,GAAG,CAAC;QACpB,KAAK,CAAC,CAAC,CAACC,OAAO,EAAG,CAAC,CAAC,GAAEF,QAAQ,GAAEG,IAAI,EAAC,CAAC,GAAG,IAAI,CAACb,QAAQ,EAAEO,OAAO;QAE/D,EAAE,EAAEG,QAAQ,IAAI,IAAI,CAACV,QAAQ,EAAEQ,GAAG,CAACM,QAAQ,CAACC,UAAU,CAACL,QAAQ,GAAG,CAAC;YACjE,IAAI,CAACV,QAAQ,EAAEQ,GAAG,CAACM,QAAQ,OA7DD,OAAW,kBA8DnC,IAAI,CAACd,QAAQ,EAAEQ,GAAG,CAACM,QAAQ,EAC3BJ,QAAQ;YAEV,IAAI,CAACV,QAAQ,EAAEU,QAAQ,GAAGA,QAAQ;QACpC,CAAC,MAAM,CAAC;YACN,IAAI,CAACV,QAAQ,EAAEU,QAAQ,GAAG,CAAE;QAC9B,CAAC;QAED,EAAE,EAAEG,IAAI,EAAE,CAAC;gBAmBL,GAAqB;YAlBzB,IAAI,CAACb,QAAQ,EAAEgB,MAAM,OAxEO,kBAA2C,oBAwE7B,CAAC;gBACzCC,OAAO,MAAQ,CAAC;oBACd,KAAK,CAACC,KAAK,GAAGN,OAAO,CAAC,CAAQ;oBAC9B,MAAM,CAACM,KAAK,GAzEH,OAA2B,SA0EzBC,KAAK,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,IAAIA,KAAK,CAACI,IAAI,CAAC,CAAG,MAAIJ,KAAK,IAC3D,CAAC,CAAC;gBACR,CAAC;gBACDN,OAAO,EAAEA,OAAO;gBAChBW,UAAU,EAAE,CAAC;oBACXb,QAAQ,EAAEA,QAAQ;oBAClBG,IAAI,EAAEA,IAAI;gBACZ,CAAC;gBACDL,GAAG,EAAE,CAAC;oBACJgB,QAAQ,EAAE,IAAI,CAACxB,QAAQ,EAAEQ,GAAG,CAACgB,QAAQ,IAAI,IAAI;oBAC7CV,QAAQ,EAAE,IAAI,CAACd,QAAQ,EAAEQ,GAAG,CAACM,QAAQ;gBACvC,CAAC;YACH,CAAC;YAED,EAAE,GAAE,GAAqB,GAArB,IAAI,CAACd,QAAQ,EAAEgB,MAAM,cAArB,GAAqB,KAArB,IAAI,CAAJ,CAA2B,GAA3B,IAAI,CAAJ,CAA2B,GAA3B,GAAqB,CAAES,IAAI,CAACC,cAAc,EAAE,CAAC;gBAC/C,IAAI,CAAC1B,QAAQ,EAAEQ,GAAG,CAACM,QAAQ,GAAG,IAAI,CAACd,QAAQ,EAAEgB,MAAM,CAAES,IAAI,CAACX,QAAQ;YACpE,CAAC;QACH,CAAC;IACH,CAAC;IAEOa,cAAc,GAAG,CAAC;YAKtB,GAAqB,EACG,IAAqB;QAL/C,KAAK,CAAC,CAAC,CAACd,IAAI,EAAC,CAAC,GAAG,IAAI,CAACb,QAAQ,EAAEO,OAAO;QACvC,GAAG,CAACO,QAAQ,GAAG,IAAI,CAACd,QAAQ,EAAEQ,GAAG,CAACM,QAAQ;QAE1C,EAAE,IACA,GAAqB,GAArB,IAAI,CAACd,QAAQ,EAAEgB,MAAM,cAArB,GAAqB,KAArB,IAAI,CAAJ,CAA6B,GAA7B,IAAI,CAAJ,CAA6B,GAA7B,GAAqB,CAAEA,MAAM,MAC7BH,IAAI,aAAJA,IAAI,KAAJA,IAAI,CAAJA,CAAmB,GAAnBA,IAAI,CAAJA,CAAmB,GAAnBA,IAAI,CAAEe,aAAa,QAAK,IAAqB,GAArB,IAAI,CAAC5B,QAAQ,EAAEgB,MAAM,cAArB,IAAqB,KAArB,IAAI,CAAJ,CAA6B,GAA7B,IAAI,CAAJ,CAA6B,GAA7B,IAAqB,CAAEA,MAAM,GACrD,CAAC;gBACc,IAAqB;YAApCF,QAAQ,IAAI,CAAC,GAAE,IAAqB,GAArB,IAAI,CAACd,QAAQ,EAAEgB,MAAM,cAArB,IAAqB,KAArB,IAAI,CAAJ,CAA6B,GAA7B,IAAI,CAAJ,CAA6B,GAA7B,IAAqB,CAAEA,MAAM,GAAGF,QAAQ;QACzD,CAAC;QAED,EAAE,EAAE,IAAI,CAACd,QAAQ,EAAEU,QAAQ,EAAE,CAAC;YAC5BI,QAAQ,MAAM,IAAI,CAACd,QAAQ,EAAEU,QAAQ,GAAGI,QAAQ;QAClD,CAAC;QAED,MAAM,CAACA,QAAQ;IACjB,CAAC;QAEUE,MAAM,GAAG,CAAC;YACZ,GAAqB;YAArB,IAA6B;QAApC,MAAM,EAAC,IAA6B,IAA7B,GAAqB,GAArB,IAAI,CAAChB,QAAQ,EAAEgB,MAAM,cAArB,GAAqB,KAArB,IAAI,CAAJ,CAA6B,GAA7B,IAAI,CAAJ,CAA6B,GAA7B,GAAqB,CAAEA,MAAM,cAA7B,IAA6B,cAA7B,IAA6B,GAAI,CAAE;IAC5C,CAAC;QAEUA,MAAM,CAACA,MAAc,EAAE,CAAC;YAG9B,GAA2B;QAF9B,EAAE,GACC,IAAI,CAAChB,QAAQ,EAAEgB,MAAM,OACrB,GAA2B,GAA3B,IAAI,CAAChB,QAAQ,EAAEO,OAAO,CAACM,IAAI,cAA3B,GAA2B,KAA3B,IAAI,CAAJ,CAAoC,GAApC,IAAI,CAAJ,CAAoC,GAApC,GAA2B,CAAEgB,OAAO,CAACC,QAAQ,CAACd,MAAM,IACrD,CAAC;YACD,KAAK,CAAC,GAAG,CAACe,SAAS,EAChB,8CAA8C,EAAEf,MAAM,CAAC,CAAC;QAE7D,CAAC;QAED,IAAI,CAAChB,QAAQ,EAAEgB,MAAM,CAAEA,MAAM,GAAGA,MAAM;IACxC,CAAC;QAEGY,aAAa,GAAG,CAAC;YACZ,GAAqB;QAA5B,MAAM,EAAC,GAAqB,GAArB,IAAI,CAAC5B,QAAQ,EAAEgB,MAAM,cAArB,GAAqB,KAArB,IAAI,CAAJ,CAAoC,GAApC,IAAI,CAAJ,CAAoC,GAApC,GAAqB,CAAEY,aAAa;IAC7C,CAAC;QAEGI,YAAY,GAAG,CAAC;YACX,GAAqB;QAA5B,MAAM,EAAC,GAAqB,GAArB,IAAI,CAAChC,QAAQ,EAAEgB,MAAM,cAArB,GAAqB,KAArB,IAAI,CAAJ,CAA6B,GAA7B,IAAI,CAAJ,CAA6B,GAA7B,GAAqB,CAAEiB,MAAM;IACtC,CAAC;QAEGC,YAAY,GAAG,CAAC;QAClB,MAAM,CAAC,IAAI,CAAClC,QAAQ,EAAEQ,GAAG,CAAC0B,YAAY;IACxC,CAAC;QAEGC,IAAI,GAAG,CAAC;QACV,MAAM,CAAC,IAAI,CAACnC,QAAQ,EAAEQ,GAAG,CAAC2B,IAAI;IAChC,CAAC;QAEGA,IAAI,CAACjB,KAAa,EAAE,CAAC;QACvB,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAAC2B,IAAI,GAAGjB,KAAK;IACjC,CAAC;QAEGM,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAACxB,QAAQ,EAAEQ,GAAG,CAACgB,QAAQ;IACpC,CAAC;QAEGA,QAAQ,CAACN,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAACgB,QAAQ,GAAGN,KAAK;IACrC,CAAC;QAEGkB,IAAI,GAAG,CAAC;QACV,MAAM,CAAC,IAAI,CAACpC,QAAQ,EAAEQ,GAAG,CAAC4B,IAAI;IAChC,CAAC;QAEGA,IAAI,CAAClB,KAAa,EAAE,CAAC;QACvB,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAAC4B,IAAI,GAAGlB,KAAK;IACjC,CAAC;QAEGmB,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAACrC,QAAQ,EAAEQ,GAAG,CAAC6B,QAAQ;IACpC,CAAC;QAEGA,QAAQ,CAACnB,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAAC6B,QAAQ,GAAGnB,KAAK;IACrC,CAAC;QAEGoB,IAAI,GAAG,CAAC;QACV,KAAK,CAACxB,QAAQ,GAAG,IAAI,CAACa,cAAc;QACpC,MAAM,IAAI,IAAI,CAACU,QAAQ,CAAC,EAAE,EAAE,IAAI,CAACF,IAAI,GAAGrB,QAAQ,GAAG,IAAI,CAACd,QAAQ,EAAEQ,GAAG,CAAC+B,MAAM;IAC9E,CAAC;QAEGD,IAAI,CAAC9B,GAAW,EAAE,CAAC;QACrB,IAAI,CAACR,QAAQ,EAAEQ,GAAG,GAAGC,QAAQ,CAACD,GAAG;QACjC,IAAI,CAACG,UAAU;IACjB,CAAC;QAEG6B,MAAM,GAAG,CAAC;QACZ,MAAM,CAAC,IAAI,CAACxC,QAAQ,EAAEQ,GAAG,CAACgC,MAAM;IAClC,CAAC;QAEG1B,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAACd,QAAQ,EAAEQ,GAAG,CAACM,QAAQ;IACpC,CAAC;QAEGA,QAAQ,CAACI,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAACM,QAAQ,GAAGI,KAAK;IACrC,CAAC;QAEGuB,IAAI,GAAG,CAAC;QACV,MAAM,CAAC,IAAI,CAACzC,QAAQ,EAAEQ,GAAG,CAACiC,IAAI;IAChC,CAAC;QAEGA,IAAI,CAACvB,KAAa,EAAE,CAAC;QACvB,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAACiC,IAAI,GAAGvB,KAAK;IACjC,CAAC;QAEGqB,MAAM,GAAG,CAAC;QACZ,MAAM,CAAC,IAAI,CAACvC,QAAQ,EAAEQ,GAAG,CAAC+B,MAAM;IAClC,CAAC;QAEGA,MAAM,CAACrB,KAAa,EAAE,CAAC;QACzB,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAAC+B,MAAM,GAAGrB,KAAK;IACnC,CAAC;QAEGwB,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAAC1C,QAAQ,EAAEQ,GAAG,CAACkC,QAAQ;IACpC,CAAC;QAEGA,QAAQ,CAACxB,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAACkC,QAAQ,GAAGxB,KAAK;IACrC,CAAC;QAEGyB,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAAC3C,QAAQ,EAAEQ,GAAG,CAACmC,QAAQ;IACpC,CAAC;QAEGA,QAAQ,CAACzB,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEQ,GAAG,CAACmC,QAAQ,GAAGzB,KAAK;IACrC,CAAC;QAEGR,QAAQ,GAAG,CAAC;QACd,MAAM,CAAC,IAAI,CAACV,QAAQ,EAAEU,QAAQ;IAChC,CAAC;QAEGA,QAAQ,CAACQ,KAAa,EAAE,CAAC;QAC3B,IAAI,CAAClB,QAAQ,EAAEU,QAAQ,GAAGQ,KAAK,CAACH,UAAU,CAAC,CAAG,MAAIG,KAAK,IAAI,CAAC,EAAEA,KAAK;IACrE,CAAC;IAED0B,QAAQ,GAAG,CAAC;QACV,MAAM,CAAC,IAAI,CAACN,IAAI;IAClB,CAAC;IAEDO,MAAM,GAAG,CAAC;QACR,MAAM,CAAC,IAAI,CAACP,IAAI;IAClB,CAAC;IAEDQ,KAAK,GAAG,CAAC;QACP,MAAM,CAAC,GAAG,CAAC5C,OAAO,CAAC6C,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC/C,QAAQ,EAAEO,OAAO;IACzD,CAAC;;QAzOUL,OAAO,GAAPA,OAAO;AA4OpB,KAAK,CAAC8C,wBAAwB;SAGrBvC,QAAQ,CAACD,GAAiB,EAAEF,IAAmB,EAAE,CAAC;IACzD,MAAM,CAAC,GAAG,CAAC2C,GAAG,CACZF,MAAM,CAACvC,GAAG,EAAE0C,OAAO,CAACF,wBAAwB,EAAE,CAAW,aACzD1C,IAAI,IAAIyC,MAAM,CAACzC,IAAI,EAAE4C,OAAO,CAACF,wBAAwB,EAAE,CAAW;AAEtE,CAAC"}