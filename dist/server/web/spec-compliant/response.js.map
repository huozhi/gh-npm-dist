{"version":3,"sources":["../../../../server/web/spec-compliant/response.ts"],"sourcesContent":["import { Body, BodyInit, cloneBody, extractContentType } from './body'\nimport { NextURL } from '../next-url'\nimport { validateURL } from '../utils'\n\nconst INTERNALS = Symbol('internal response')\nconst REDIRECTS = new Set([301, 302, 303, 307, 308])\n\nclass BaseResponse extends Body implements Response {\n  [INTERNALS]: {\n    headers: Headers\n    status: number\n    statusText: string\n    type: 'default' | 'error'\n    url?: NextURL\n  }\n\n  constructor(body?: BodyInit | null, init?: ResponseInit) {\n    super(body)\n\n    this[INTERNALS] = {\n      headers: new Headers(init?.headers),\n      status: init?.status || 200,\n      statusText: init?.statusText || '',\n      type: 'default',\n      url: init?.url ? new NextURL(init.url) : undefined,\n    }\n\n    if (this[INTERNALS].status < 200 || this[INTERNALS].status > 599) {\n      throw new RangeError(\n        `Responses may only be constructed with status codes in the range 200 to 599, inclusive.`\n      )\n    }\n\n    if (body !== null && !this[INTERNALS].headers.has('Content-Type')) {\n      const contentType = extractContentType(this)\n      if (contentType) {\n        this[INTERNALS].headers.append('Content-Type', contentType)\n      }\n    }\n  }\n\n  static redirect(url: string, status = 307) {\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError(\n        'Failed to execute \"redirect\" on \"response\": Invalid status code'\n      )\n    }\n\n    return new Response(validateURL(url), {\n      headers: { Location: url },\n      status,\n    })\n  }\n\n  static error() {\n    const response = new BaseResponse(null, { status: 0, statusText: '' })\n    response[INTERNALS].type = 'error'\n    return response\n  }\n\n  get url() {\n    return this[INTERNALS].url?.toString() || ''\n  }\n\n  get ok() {\n    return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300\n  }\n\n  get status() {\n    return this[INTERNALS].status\n  }\n\n  get statusText() {\n    return this[INTERNALS].statusText\n  }\n\n  get headers() {\n    return this[INTERNALS].headers\n  }\n\n  get redirected() {\n    return (\n      this[INTERNALS].status > 299 &&\n      this[INTERNALS].status < 400 &&\n      this[INTERNALS].headers.has('Location')\n    )\n  }\n\n  get type() {\n    return this[INTERNALS].type\n  }\n\n  clone() {\n    return new BaseResponse(cloneBody(this), {\n      headers: this.headers,\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url,\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Response'\n  }\n}\n\nexport interface ResponseInit {\n  headers?: HeadersInit\n  status?: number\n  statusText?: string\n  url?: string\n}\n\nexport { BaseResponse as Response }\n"],"names":["INTERNALS","Symbol","REDIRECTS","Set","BaseResponse","body","init","headers","Headers","status","statusText","type","url","undefined","RangeError","has","contentType","append","redirect","Response","Location","error","response","toString","ok","redirected","clone","toStringTag"],"mappings":"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"}