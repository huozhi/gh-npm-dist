{"version":3,"sources":["../../server/next-server.ts"],"sourcesContent":["import './node-polyfill-fetch'\nimport type { Params, Route } from './router'\nimport type { CacheFs } from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { ParsedNextUrl } from '../shared/lib/router/utils/parse-next-url'\nimport type { PrerenderManifest } from '../build'\nimport type { Rewrite } from '../lib/load-custom-routes'\n\nimport { execOnce } from '../shared/lib/utils'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n} from './request-meta'\n\nimport fs from 'fs'\nimport { join, relative, resolve, sep } from 'path'\nimport { IncomingMessage, ServerResponse } from 'http'\n\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  SERVER_DIRECTORY,\n  MIDDLEWARE_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  SERVERLESS_DIRECTORY,\n} from '../shared/lib/constants'\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { format as formatUrl, UrlWithParsedQuery } from 'url'\nimport compression from 'next/dist/compiled/compression'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { route } from './router'\nimport { run } from './web/sandbox'\n\nimport {\n  BaseNextRequest,\n  BaseNextResponse,\n  NodeNextRequest,\n  NodeNextResponse,\n} from './base-http'\nimport { PayloadOptions, sendRenderResult } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport { ParsedUrlQuery } from 'querystring'\nimport { apiResolver } from './api-utils'\nimport { RenderOpts, renderToHTML } from './render'\nimport { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport BaseServer, {\n  Options,\n  FindComponentsResult,\n  prepareServerlessUrl,\n  stringifyQuery,\n} from './base-server'\nimport { getMiddlewareInfo, getPagePath, requireFontManifest } from './require'\nimport { normalizePagePath } from './normalize-page-path'\nimport { loadComponents } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { FontManifest } from './font-utils'\nimport { toNodeHeaders } from './web/utils'\nimport { relativizeURL } from '../shared/lib/router/utils/relativize-url'\nimport { parseNextUrl } from '../shared/lib/router/utils/parse-next-url'\nimport { prepareDestination } from '../shared/lib/router/utils/prepare-destination'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getMiddlewareRegex, getRouteMatcher } from '../shared/lib/router/utils'\nimport { MIDDLEWARE_ROUTE } from '../lib/constants'\nimport { loadEnvConfig } from '@next/env'\nimport { getCustomRoute } from './server-route-utils'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\n\nexport * from './base-server'\n\ntype ExpressMiddleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\nexport interface NodeRequestHandler {\n  (\n    req: IncomingMessage | BaseNextRequest,\n    res: ServerResponse | BaseNextResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void>\n}\n\nexport default class NextNodeServer extends BaseServer {\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting both serverless and SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_IMAGES`.\n     * TODO(atcastle@): Remove this when experimental.optimizeImages are being cleaned up.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeImages) {\n      process.env.__NEXT_OPTIMIZE_IMAGES = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n  }\n\n  private compression =\n    this.nextConfig.compress && this.nextConfig.target === 'server'\n      ? (compression() as ExpressMiddleware)\n      : undefined\n\n  protected loadEnvConfig({ dev }: { dev: boolean }) {\n    loadEnvConfig(this.dir, dev, Log)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    const serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(serverBuildDir, PAGES_MANIFEST)\n    return require(pagesManifestPath)\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected generateImageRoutes(): Route[] {\n    return [\n      {\n        match: route('/_next/image'),\n        type: 'route',\n        name: '_next/image catchall',\n        fn: (req, res, _params, parsedUrl) => {\n          if (this.minimalMode) {\n            res.statusCode = 400\n            res.body('Bad Request').send()\n            return {\n              finished: true,\n            }\n          }\n\n          return this.imageOptimizer(\n            req as NodeNextRequest,\n            res as NodeNextResponse,\n            parsedUrl\n          )\n        },\n      },\n    ]\n  }\n\n  protected generateStaticRoutes(): Route[] {\n    return this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n  }\n\n  protected setImmutableAssetCacheControl(res: BaseNextResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected generateFsStaticRoutes(): Route[] {\n    return [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'image' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[0] === 'pages' ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n    ]\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    if (!fs.existsSync(this.publicDir)) return []\n\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) =>\n        encodeURI(p.replace(/\\\\/g, '/'))\n      )\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const { basePath } = this.nextConfig\n\n          // if basePath is defined require it be present\n          if (basePath) {\n            const basePathParts = basePath.split('/')\n            // remove first empty value\n            basePathParts.shift()\n\n            if (\n              !basePathParts.every((part: string, idx: number) => {\n                return part === pathParts[idx]\n              })\n            ) {\n              return { finished: false }\n            }\n\n            pathParts.splice(0, basePathParts.length)\n          }\n\n          let path = `/${pathParts.join('/')}`\n\n          if (!publicFiles.has(path)) {\n            // In `next-dev-server.ts`, we ensure encoded paths match\n            // decoded paths on the filesystem. So we need do the\n            // opposite here: make sure decoded paths match encoded.\n            path = encodeURI(path)\n          }\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              join(this.publicDir, ...pathParts),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  protected getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n\n    nextFilesStatic =\n      !this.minimalMode && fs.existsSync(join(this.distDir, 'static'))\n        ? recursiveReadDirSync(join(this.distDir, 'static')).map((f) =>\n            join('.', relative(this.dir, this.distDir), 'static', f)\n          )\n        : []\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      options?: PayloadOptions | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      ...options,\n    })\n  }\n\n  protected sendStatic(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    path: string\n  ): Promise<void> {\n    return serveStatic(req.originalRequest, res.originalResponse, path)\n  }\n\n  protected handleCompression(\n    req: NodeNextRequest,\n    res: NodeNextResponse\n  ): void {\n    if (this.compression) {\n      this.compression(req.originalRequest, res.originalResponse, () => {})\n    }\n  }\n\n  protected async proxyRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    parsedUrl: ParsedUrl\n  ) {\n    const { query } = parsedUrl\n    delete (parsedUrl as any).query\n    parsedUrl.search = stringifyQuery(req, query)\n\n    const target = formatUrl(parsedUrl)\n    const proxy = new Proxy({\n      target,\n      changeOrigin: true,\n      ignorePath: true,\n      xfwd: true,\n      proxyTimeout: 30_000, // limit proxying to 30 seconds\n    })\n\n    await new Promise((proxyResolve, proxyReject) => {\n      let finished = false\n\n      proxy.on('proxyReq', (proxyReq) => {\n        proxyReq.on('close', () => {\n          if (!finished) {\n            finished = true\n            proxyResolve(true)\n          }\n        })\n      })\n      proxy.on('error', (err) => {\n        if (!finished) {\n          finished = true\n          proxyReject(err)\n        }\n      })\n      proxy.web(req.originalRequest, res.originalResponse)\n    })\n\n    return {\n      finished: true,\n    }\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    params: Params | false,\n    page: string,\n    builtPagePath: string\n  ): Promise<boolean> {\n    const pageModule = await require(builtPagePath)\n    query = { ...query, ...params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req.originalRequest,\n      res.originalResponse,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      this.minimalMode,\n      this.renderOpts.dev,\n      page\n    )\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: RenderOpts\n  ): Promise<RenderResult | null> {\n    return renderToHTML(\n      req.originalRequest,\n      res.originalResponse,\n      pathname,\n      query,\n      renderOpts\n    )\n  }\n\n  protected streamResponseChunk(res: NodeNextResponse, chunk: any) {\n    res.originalResponse.write(chunk)\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<{ finished: boolean }> {\n    const { imageOptimizer } =\n      require('./image-optimizer') as typeof import('./image-optimizer')\n\n    return imageOptimizer(\n      req.originalRequest,\n      res.originalResponse,\n      parsedUrl,\n      this.nextConfig,\n      this.distDir,\n      () => this.render404(req, res, parsedUrl),\n      (newReq, newRes, newParsedUrl) =>\n        this.getRequestHandler()(\n          new NodeNextRequest(newReq),\n          new NodeNextResponse(newRes),\n          newParsedUrl\n        ),\n      this.renderOpts.dev\n    )\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev,\n      locales\n    )\n  }\n\n  protected async findPageComponents(\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    let paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n\n    if (query.__nextLocale) {\n      paths = [\n        ...paths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        ),\n        ...paths,\n      ]\n    }\n\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath?.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  _nextDataReq: query._nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (isError(err) && err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  protected getFontManifest(): FontManifest {\n    return requireFontManifest(this.distDir, this._isLikeServerless)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return {\n      readFile: (f) => fs.promises.readFile(f, 'utf8'),\n      readFileSync: (f) => fs.readFileSync(f, 'utf8'),\n      writeFile: (f, d) => fs.promises.writeFile(f, d, 'utf8'),\n      mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n      stat: (f) => fs.promises.stat(f),\n    }\n  }\n\n  private normalizeReq(\n    req: BaseNextRequest | IncomingMessage\n  ): BaseNextRequest {\n    return req instanceof IncomingMessage ? new NodeNextRequest(req) : req\n  }\n\n  private normalizeRes(\n    res: BaseNextResponse | ServerResponse\n  ): BaseNextResponse {\n    return res instanceof ServerResponse ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = super.getRequestHandler()\n    return async (req, res, parsedUrl) => {\n      return handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n    }\n  }\n\n  public async render(\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected async hasMiddleware(\n    pathname: string,\n    _isSSR?: boolean\n  ): Promise<boolean> {\n    try {\n      return (\n        getMiddlewareInfo({\n          dev: this.renderOpts.dev,\n          distDir: this.distDir,\n          page: pathname,\n          serverless: this._isLikeServerless,\n        }).paths.length > 0\n      )\n    } catch (_) {}\n\n    return false\n  }\n\n  public async serveStatic(\n    req: BaseNextRequest | IncomingMessage,\n    res: BaseNextResponse | ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await this.sendStatic(\n        req as NodeNextRequest,\n        res as NodeNextResponse,\n        path\n      )\n    } catch (error) {\n      if (!isError(error)) throw error\n      const err = error as Error & { code?: string; statusCode?: number }\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  protected getStaticRoutes(): Route[] {\n    return this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected getMiddlewareInfo(page: string) {\n    return getMiddlewareInfo({\n      dev: this.renderOpts.dev,\n      page,\n      distDir: this.distDir,\n      serverless: this._isLikeServerless,\n    })\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | undefined {\n    if (!this.minimalMode) {\n      const middlewareManifestPath = join(\n        join(this.distDir, SERVER_DIRECTORY),\n        MIDDLEWARE_MANIFEST\n      )\n      return require(middlewareManifestPath)\n    }\n    return undefined\n  }\n\n  protected generateRewrites({\n    restrictedRedirectPaths,\n  }: {\n    restrictedRedirectPaths: string[]\n  }) {\n    let beforeFiles: Route[] = []\n    let afterFiles: Route[] = []\n    let fallback: Route[] = []\n\n    if (!this.minimalMode) {\n      const buildRewrite = (rewrite: Rewrite, check = true) => {\n        const rewriteRoute = getCustomRoute({\n          type: 'rewrite',\n          rule: rewrite,\n          restrictedRedirectPaths,\n        })\n        return {\n          ...rewriteRoute,\n          check,\n          type: rewriteRoute.type,\n          name: `Rewrite route ${rewriteRoute.source}`,\n          match: rewriteRoute.match,\n          fn: async (req, res, params, parsedUrl) => {\n            const { newUrl, parsedDestination } = prepareDestination({\n              appendParamsToQuery: true,\n              destination: rewriteRoute.destination,\n              params: params,\n              query: parsedUrl.query,\n            })\n\n            // external rewrite, proxy it\n            if (parsedDestination.protocol) {\n              return this.proxyRequest(\n                req as NodeNextRequest,\n                res as NodeNextResponse,\n                parsedDestination\n              )\n            }\n\n            addRequestMeta(req, '_nextRewroteUrl', newUrl)\n            addRequestMeta(req, '_nextDidRewrite', newUrl !== req.url)\n\n            return {\n              finished: false,\n              pathname: newUrl,\n              query: parsedDestination.query,\n            }\n          },\n        } as Route\n      }\n\n      if (Array.isArray(this.customRoutes.rewrites)) {\n        afterFiles = this.customRoutes.rewrites.map((r) => buildRewrite(r))\n      } else {\n        beforeFiles = this.customRoutes.rewrites.beforeFiles.map((r) =>\n          buildRewrite(r, false)\n        )\n        afterFiles = this.customRoutes.rewrites.afterFiles.map((r) =>\n          buildRewrite(r)\n        )\n        fallback = this.customRoutes.rewrites.fallback.map((r) =>\n          buildRewrite(r)\n        )\n      }\n    }\n\n    return {\n      beforeFiles,\n      afterFiles,\n      fallback,\n    }\n  }\n\n  protected generateCatchAllMiddlewareRoute(): Route | undefined {\n    if (this.minimalMode) return undefined\n\n    return {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'middleware catchall',\n      fn: async (req, res, _params, parsed) => {\n        if (!this.middleware?.length) {\n          return { finished: false }\n        }\n\n        const initUrl = getRequestMeta(req, '__NEXT_INIT_URL')!\n        const parsedUrl = parseNextUrl({\n          url: initUrl,\n          headers: req.headers,\n          nextConfig: {\n            basePath: this.nextConfig.basePath,\n            i18n: this.nextConfig.i18n,\n            trailingSlash: this.nextConfig.trailingSlash,\n          },\n        })\n\n        if (!this.middleware?.some((m) => m.match(parsedUrl.pathname))) {\n          return { finished: false }\n        }\n\n        let result: FetchEventResult | null = null\n\n        try {\n          result = await this.runMiddleware({\n            request: req,\n            response: res,\n            parsedUrl: parsedUrl,\n            parsed: parsed,\n          })\n        } catch (err) {\n          if (isError(err) && err.code === 'ENOENT') {\n            await this.render404(req, res, parsed)\n            return { finished: true }\n          }\n\n          const error = getProperError(err)\n          console.error(error)\n          res.statusCode = 500\n          this.renderError(error, req, res, parsed.pathname || '')\n          return { finished: true }\n        }\n\n        if (result === null) {\n          return { finished: true }\n        }\n\n        if (result.response.headers.has('x-middleware-rewrite')) {\n          const value = result.response.headers.get('x-middleware-rewrite')!\n          const rel = relativizeURL(value, initUrl)\n          result.response.headers.set('x-middleware-rewrite', rel)\n        }\n\n        if (result.response.headers.has('Location')) {\n          const value = result.response.headers.get('Location')!\n          const rel = relativizeURL(value, initUrl)\n          result.response.headers.set('Location', rel)\n        }\n\n        if (\n          !result.response.headers.has('x-middleware-rewrite') &&\n          !result.response.headers.has('x-middleware-next') &&\n          !result.response.headers.has('Location')\n        ) {\n          result.response.headers.set('x-middleware-refresh', '1')\n        }\n\n        result.response.headers.delete('x-middleware-next')\n\n        for (const [key, value] of Object.entries(\n          toNodeHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value)\n          }\n        }\n\n        const preflight =\n          req.method === 'HEAD' && req.headers['x-middleware-preflight']\n\n        if (preflight) {\n          res.statusCode = 200\n          res.send()\n          return {\n            finished: true,\n          }\n        }\n\n        res.statusCode = result.response.status\n        res.statusMessage = result.response.statusText\n\n        const location = result.response.headers.get('Location')\n        if (location) {\n          res.statusCode = result.response.status\n          if (res.statusCode === 308) {\n            res.setHeader('Refresh', `0;url=${location}`)\n          }\n\n          res.body(location).send()\n          return {\n            finished: true,\n          }\n        }\n\n        if (result.response.headers.has('x-middleware-rewrite')) {\n          const rewritePath = result.response.headers.get(\n            'x-middleware-rewrite'\n          )!\n          const { newUrl, parsedDestination } = prepareDestination({\n            appendParamsToQuery: false,\n            destination: rewritePath,\n            params: _params,\n            query: {},\n          })\n\n          // TODO: remove after next minor version current `v12.0.9`\n          this.warnIfQueryParametersWereDeleted(\n            parsedUrl.query,\n            parsedDestination.query\n          )\n\n          if (\n            parsedDestination.protocol &&\n            (parsedDestination.port\n              ? `${parsedDestination.hostname}:${parsedDestination.port}`\n              : parsedDestination.hostname) !== req.headers.host\n          ) {\n            return this.proxyRequest(\n              req as NodeNextRequest,\n              res as NodeNextResponse,\n              parsedDestination\n            )\n          }\n\n          if (this.nextConfig.i18n) {\n            const localePathResult = normalizeLocalePath(\n              newUrl,\n              this.nextConfig.i18n.locales\n            )\n            if (localePathResult.detectedLocale) {\n              parsedDestination.query.__nextLocale =\n                localePathResult.detectedLocale\n            }\n          }\n\n          addRequestMeta(req, '_nextRewroteUrl', newUrl)\n          addRequestMeta(req, '_nextDidRewrite', newUrl !== req.url)\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        }\n\n        if (result.response.headers.has('x-middleware-refresh')) {\n          res.statusCode = result.response.status\n          for await (const chunk of result.response.body || ([] as any)) {\n            this.streamResponseChunk(res as NodeNextResponse, chunk)\n          }\n          res.send()\n          return {\n            finished: true,\n          }\n        }\n\n        return {\n          finished: false,\n        }\n      },\n    }\n  }\n\n  protected getMiddleware() {\n    const middleware = this.middlewareManifest?.middleware || {}\n    return (\n      this.middlewareManifest?.sortedMiddleware.map((page) => ({\n        match: getRouteMatcher(\n          getMiddlewareRegex(page, MIDDLEWARE_ROUTE.test(middleware[page].name))\n        ),\n        page,\n      })) || []\n    )\n  }\n\n  private middlewareBetaWarning = execOnce(() => {\n    Log.warn(\n      `using beta Middleware (not covered by semver) - https://nextjs.org/docs/messages/beta-middleware`\n    )\n  })\n\n  protected async runMiddleware(params: {\n    request: BaseNextRequest\n    response: BaseNextResponse\n    parsedUrl: ParsedNextUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    this.middlewareBetaWarning()\n\n    // For middleware to \"fetch\" we must always provide an absolute URL\n    const url = getRequestMeta(params.request, '__NEXT_INIT_URL')!\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: { name?: string; params?: { [key: string]: string } } = {}\n    if (await this.hasPage(params.parsedUrl.pathname)) {\n      page.name = params.parsedUrl.pathname\n    } else if (this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        const matchParams = dynamicRoute.match(params.parsedUrl.pathname)\n        if (matchParams) {\n          page.name = dynamicRoute.page\n          page.params = matchParams\n          break\n        }\n      }\n    }\n\n    const allHeaders = new Headers()\n    let result: FetchEventResult | null = null\n\n    for (const middleware of this.middleware || []) {\n      if (middleware.match(params.parsedUrl.pathname)) {\n        if (!(await this.hasMiddleware(middleware.page, middleware.ssr))) {\n          console.warn(`The Edge Function for ${middleware.page} was not found`)\n          continue\n        }\n\n        await this.ensureMiddleware(middleware.page, middleware.ssr)\n\n        const middlewareInfo = this.getMiddlewareInfo(middleware.page)\n\n        result = await run({\n          name: middlewareInfo.name,\n          paths: middlewareInfo.paths,\n          env: middlewareInfo.env,\n          request: {\n            headers: params.request.headers,\n            method: params.request.method || 'GET',\n            nextConfig: {\n              basePath: this.nextConfig.basePath,\n              i18n: this.nextConfig.i18n,\n              trailingSlash: this.nextConfig.trailingSlash,\n            },\n            url: url,\n            page: page,\n          },\n          useCache: !this.nextConfig.experimental.concurrentFeatures,\n          onWarning: (warning: Error) => {\n            if (params.onWarning) {\n              warning.message += ` \"./${middlewareInfo.name}\"`\n              params.onWarning(warning)\n            }\n          },\n        })\n\n        for (let [key, value] of result.response.headers) {\n          if (key !== 'x-middleware-next') {\n            allHeaders.append(key, value)\n          }\n        }\n\n        if (!this.renderOpts.dev) {\n          result.waitUntil.catch((error) => {\n            console.error(`Uncaught: middleware waitUntil errored`, error)\n          })\n        }\n\n        if (!result.response.headers.has('x-middleware-next')) {\n          break\n        }\n      }\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n    } else {\n      for (let [key, value] of allHeaders) {\n        result.response.headers.set(key, value)\n      }\n    }\n\n    return result\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getRoutesManifest() {\n    return require(join(this.distDir, ROUTES_MANIFEST))\n  }\n\n  // TODO: remove after next minor version current `v12.0.9`\n  private warnIfQueryParametersWereDeleted(\n    incoming: ParsedUrlQuery,\n    rewritten: ParsedUrlQuery\n  ): void {\n    const incomingQuery = urlQueryToSearchParams(incoming)\n    const rewrittenQuery = urlQueryToSearchParams(rewritten)\n\n    const missingKeys = [...incomingQuery.keys()].filter((key) => {\n      return !rewrittenQuery.has(key)\n    })\n\n    if (missingKeys.length > 0) {\n      Log.warn(\n        `Query params are no longer automatically merged for rewrites in middleware, see more info here: https://nextjs.org/docs/messages/errors/deleting-query-params-in-middlewares`\n      )\n      this.warnIfQueryParametersWereDeleted = () => {}\n    }\n  }\n}\n"],"names":["Log","NextNodeServer","options","compression","nextConfig","compress","target","undefined","_validFilesystemPathSet","middlewareBetaWarning","warn","renderOpts","optimizeFonts","process","env","__NEXT_OPTIMIZE_FONTS","JSON","stringify","optimizeImages","__NEXT_OPTIMIZE_IMAGES","optimizeCss","__NEXT_OPTIMIZE_CSS","loadEnvConfig","dev","dir","getPublicDir","getHasStaticDir","existsSync","getPagesManifest","serverBuildDir","distDir","_isLikeServerless","pagesManifestPath","require","getBuildId","buildIdFile","readFileSync","trim","err","Error","generateImageRoutes","match","type","name","fn","req","res","_params","parsedUrl","minimalMode","statusCode","body","send","finished","imageOptimizer","generateStaticRoutes","hasStaticDir","params","p","path","serveStatic","setImmutableAssetCacheControl","setHeader","generateFsStaticRoutes","render404","buildId","generatePublicRoutes","publicDir","publicFiles","Set","map","encodeURI","replace","pathParts","basePath","basePathParts","split","shift","every","part","idx","splice","length","join","has","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","sendRenderResult","originalRequest","originalResponse","sendStatic","handleCompression","proxyRequest","query","search","proxy","changeOrigin","ignorePath","xfwd","proxyTimeout","Promise","proxyResolve","proxyReject","on","proxyReq","web","runApi","page","builtPagePath","pageModule","__nextLocale","__nextDefaultLocale","default","previewProps","renderHTML","pathname","streamResponseChunk","chunk","write","newReq","newRes","newParsedUrl","getRequestHandler","getPagePath","locales","findPageComponents","paths","amp","filter","Boolean","pagePath","components","Component","startsWith","getStaticProps","_nextDataReq","code","getFontManifest","getCacheFilesystem","readFile","promises","writeFile","d","mkdir","recursive","stat","normalizeReq","normalizeRes","handler","render","internal","renderToHTML","renderError","setHeaders","renderErrorToHTML","hasMiddleware","_isSSR","serverless","_","isServeableUrl","method","error","getStaticRoutes","untrustedFileUrl","decodedUntrustedFilePath","decodeURIComponent","untrustedFilePath","indexOf","filesystemUrls","resolved","getMiddlewareInfo","getMiddlewareManifest","middlewareManifestPath","generateRewrites","restrictedRedirectPaths","beforeFiles","afterFiles","fallback","buildRewrite","rewrite","check","rewriteRoute","rule","source","newUrl","parsedDestination","appendParamsToQuery","destination","protocol","url","Array","isArray","customRoutes","rewrites","r","generateCatchAllMiddlewareRoute","parsed","middleware","initUrl","headers","i18n","trailingSlash","some","m","result","runMiddleware","request","response","console","value","get","rel","set","delete","key","Object","entries","preflight","status","statusMessage","statusText","location","rewritePath","warnIfQueryParametersWereDeleted","port","hostname","host","localePathResult","detectedLocale","getMiddleware","middlewareManifest","sortedMiddleware","test","hasPage","dynamicRoutes","dynamicRoute","matchParams","allHeaders","Headers","ssr","ensureMiddleware","middlewareInfo","useCache","experimental","concurrentFeatures","onWarning","warning","message","append","waitUntil","catch","getPrerenderManifest","_cachedPreviewManifest","manifest","getRoutesManifest","incoming","rewritten","incomingQuery","rewrittenQuery","missingKeys","keys"],"mappings":"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"}