{"version":3,"sources":["../../../../server/lib/squoosh/codecs.ts"],"sourcesContent":["import { promises as fsp } from 'fs'\nimport * as path from 'path'\nimport { instantiateEmscriptenWasm, pathify } from './emscripten-utils.js'\n\ninterface DecodeModule extends EmscriptenWasm.Module {\n  decode: (data: Uint8Array) => ImageData\n}\n\ntype DecodeModuleFactory = EmscriptenWasm.ModuleFactory<DecodeModule>\n\ninterface RotateModuleInstance {\n  exports: {\n    memory: WebAssembly.Memory\n    rotate(width: number, height: number, rotate: number): void\n  }\n}\n\ninterface ResizeWithAspectParams {\n  input_width: number\n  input_height: number\n  target_width?: number\n  target_height?: number\n}\n\nexport interface ResizeOptions {\n  width?: number\n  height?: number\n  method: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n  premultiply: boolean\n  linearRGB: boolean\n}\n\nexport interface RotateOptions {\n  numRotations: number\n}\n\n// MozJPEG\nimport type { MozJPEGModule as MozJPEGEncodeModule } from './mozjpeg/mozjpeg_enc'\n// @ts-ignore\nimport mozEnc from './mozjpeg/mozjpeg_node_enc.js'\nconst mozEncWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_enc.wasm')\n// @ts-ignore\nimport mozDec from './mozjpeg/mozjpeg_node_dec.js'\nconst mozDecWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_dec.wasm')\n\n// WebP\nimport type { WebPModule as WebPEncodeModule } from './webp/webp_enc'\n// @ts-ignore\nimport webpEnc from './webp/webp_node_enc.js'\nconst webpEncWasm = path.resolve(__dirname, './webp/webp_node_enc.wasm')\n// @ts-ignore\nimport webpDec from './webp/webp_node_dec.js'\nconst webpDecWasm = path.resolve(__dirname, './webp/webp_node_dec.wasm')\n\n// AVIF\nimport type { AVIFModule as AVIFEncodeModule } from './avif/avif_enc'\n// @ts-ignore\nimport avifEnc from './avif/avif_node_enc.js'\nconst avifEncWasm = path.resolve(__dirname, './avif/avif_node_enc.wasm')\n// @ts-ignore\nimport avifDec from './avif/avif_node_dec.js'\nconst avifDecWasm = path.resolve(__dirname, './avif/avif_node_dec.wasm')\n\n// PNG\n// @ts-ignore\nimport * as pngEncDec from './png/squoosh_png.js'\nconst pngEncDecWasm = path.resolve(__dirname, './png/squoosh_png_bg.wasm')\nconst pngEncDecInit = () =>\n  pngEncDec.default(fsp.readFile(pathify(pngEncDecWasm)))\n\n// OxiPNG\n// @ts-ignore\nimport * as oxipng from './png/squoosh_oxipng.js'\nconst oxipngWasm = path.resolve(__dirname, './png/squoosh_oxipng_bg.wasm')\nconst oxipngInit = () => oxipng.default(fsp.readFile(pathify(oxipngWasm)))\n\n// Resize\n// @ts-ignore\nimport * as resize from './resize/squoosh_resize.js'\nconst resizeWasm = path.resolve(__dirname, './resize/squoosh_resize_bg.wasm')\nconst resizeInit = () => resize.default(fsp.readFile(pathify(resizeWasm)))\n\n// rotate\nconst rotateWasm = path.resolve(__dirname, './rotate/rotate.wasm')\n\n// Our decoders currently rely on a `ImageData` global.\nimport ImageData from './image_data'\n;(global as any).ImageData = ImageData\n\nfunction resizeNameToIndex(\n  name: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n) {\n  switch (name) {\n    case 'triangle':\n      return 0\n    case 'catrom':\n      return 1\n    case 'mitchell':\n      return 2\n    case 'lanczos3':\n      return 3\n    default:\n      throw Error(`Unknown resize algorithm \"${name}\"`)\n  }\n}\n\nfunction resizeWithAspect({\n  input_width,\n  input_height,\n  target_width,\n  target_height,\n}: ResizeWithAspectParams): { width: number; height: number } {\n  if (!target_width && !target_height) {\n    throw Error('Need to specify at least width or height when resizing')\n  }\n\n  if (target_width && target_height) {\n    return { width: target_width, height: target_height }\n  }\n\n  if (!target_width) {\n    return {\n      width: Math.round((input_width / input_height) * target_height!),\n      height: target_height!,\n    }\n  }\n\n  return {\n    width: target_width,\n    height: Math.round((input_height / input_width) * target_width),\n  }\n}\n\nexport const preprocessors = {\n  resize: {\n    name: 'Resize',\n    description: 'Resize the image before compressing',\n    instantiate: async () => {\n      await resizeInit()\n      return (\n        buffer: Uint8Array,\n        input_width: number,\n        input_height: number,\n        { width, height, method, premultiply, linearRGB }: ResizeOptions\n      ) => {\n        ;({ width, height } = resizeWithAspect({\n          input_width,\n          input_height,\n          target_width: width,\n          target_height: height,\n        }))\n        const imageData = new ImageData(\n          resize.resize(\n            buffer,\n            input_width,\n            input_height,\n            width,\n            height,\n            resizeNameToIndex(method),\n            premultiply,\n            linearRGB\n          ),\n          width,\n          height\n        )\n        resize.cleanup()\n        return imageData\n      }\n    },\n    defaultOptions: {\n      method: 'lanczos3',\n      fitMethod: 'stretch',\n      premultiply: true,\n      linearRGB: true,\n    },\n  },\n  rotate: {\n    name: 'Rotate',\n    description: 'Rotate image',\n    instantiate: async () => {\n      return async (\n        buffer: Uint8Array,\n        width: number,\n        height: number,\n        { numRotations }: RotateOptions\n      ) => {\n        const degrees = (numRotations * 90) % 360\n        const sameDimensions = degrees === 0 || degrees === 180\n        const size = width * height * 4\n        const instance = (\n          await WebAssembly.instantiate(await fsp.readFile(pathify(rotateWasm)))\n        ).instance as RotateModuleInstance\n        const { memory } = instance.exports\n        const additionalPagesNeeded = Math.ceil(\n          (size * 2 - memory.buffer.byteLength + 8) / (64 * 1024)\n        )\n        if (additionalPagesNeeded > 0) {\n          memory.grow(additionalPagesNeeded)\n        }\n        const view = new Uint8ClampedArray(memory.buffer)\n        view.set(buffer, 8)\n        instance.exports.rotate(width, height, degrees)\n        return new ImageData(\n          view.slice(size + 8, size * 2 + 8),\n          sameDimensions ? width : height,\n          sameDimensions ? height : width\n        )\n      }\n    },\n    defaultOptions: {\n      numRotations: 0,\n    },\n  },\n} as const\n\nexport const codecs = {\n  mozjpeg: {\n    name: 'MozJPEG',\n    extension: 'jpg',\n    detectors: [/^\\xFF\\xD8\\xFF/],\n    dec: () =>\n      instantiateEmscriptenWasm(mozDec as DecodeModuleFactory, mozDecWasm),\n    enc: () =>\n      instantiateEmscriptenWasm(\n        mozEnc as EmscriptenWasm.ModuleFactory<MozJPEGEncodeModule>,\n        mozEncWasm\n      ),\n    defaultEncoderOptions: {\n      quality: 75,\n      baseline: false,\n      arithmetic: false,\n      progressive: true,\n      optimize_coding: true,\n      smoothing: 0,\n      color_space: 3 /*YCbCr*/,\n      quant_table: 3,\n      trellis_multipass: false,\n      trellis_opt_zero: false,\n      trellis_opt_table: false,\n      trellis_loops: 1,\n      auto_subsample: true,\n      chroma_subsample: 2,\n      separate_chroma_quality: false,\n      chroma_quality: 75,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  webp: {\n    name: 'WebP',\n    extension: 'webp',\n    detectors: [/^RIFF....WEBPVP8[LX ]/s],\n    dec: () =>\n      instantiateEmscriptenWasm(webpDec as DecodeModuleFactory, webpDecWasm),\n    enc: () =>\n      instantiateEmscriptenWasm(\n        webpEnc as EmscriptenWasm.ModuleFactory<WebPEncodeModule>,\n        webpEncWasm\n      ),\n    defaultEncoderOptions: {\n      quality: 75,\n      target_size: 0,\n      target_PSNR: 0,\n      method: 4,\n      sns_strength: 50,\n      filter_strength: 60,\n      filter_sharpness: 0,\n      filter_type: 1,\n      partitions: 0,\n      segments: 4,\n      pass: 1,\n      show_compressed: 0,\n      preprocessing: 0,\n      autofilter: 0,\n      partition_limit: 0,\n      alpha_compression: 1,\n      alpha_filtering: 1,\n      alpha_quality: 100,\n      lossless: 0,\n      exact: 0,\n      image_hint: 0,\n      emulate_jpeg_size: 0,\n      thread_level: 0,\n      low_memory: 0,\n      near_lossless: 100,\n      use_delta_palette: 0,\n      use_sharp_yuv: 0,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  avif: {\n    name: 'AVIF',\n    extension: 'avif',\n    // eslint-disable-next-line no-control-regex\n    detectors: [/^\\x00\\x00\\x00 ftypavif\\x00\\x00\\x00\\x00/],\n    dec: () =>\n      instantiateEmscriptenWasm(avifDec as DecodeModuleFactory, avifDecWasm),\n    enc: async () => {\n      return instantiateEmscriptenWasm(\n        avifEnc as EmscriptenWasm.ModuleFactory<AVIFEncodeModule>,\n        avifEncWasm\n      )\n    },\n    defaultEncoderOptions: {\n      cqLevel: 33,\n      cqAlphaLevel: -1,\n      denoiseLevel: 0,\n      tileColsLog2: 0,\n      tileRowsLog2: 0,\n      speed: 6,\n      subsample: 1,\n      chromaDeltaQ: false,\n      sharpness: 0,\n      tune: 0 /* AVIFTune.auto */,\n    },\n    autoOptimize: {\n      option: 'cqLevel',\n      min: 62,\n      max: 0,\n    },\n  },\n  oxipng: {\n    name: 'OxiPNG',\n    extension: 'png',\n    // eslint-disable-next-line no-control-regex\n    detectors: [/^\\x89PNG\\x0D\\x0A\\x1A\\x0A/],\n    dec: async () => {\n      await pngEncDecInit()\n      return {\n        decode: (buffer: Buffer | Uint8Array) => {\n          const imageData = pngEncDec.decode(buffer)\n          pngEncDec.cleanup()\n          return imageData\n        },\n      }\n    },\n    enc: async () => {\n      await pngEncDecInit()\n      await oxipngInit()\n      return {\n        encode: (\n          buffer: Uint8ClampedArray | ArrayBuffer,\n          width: number,\n          height: number,\n          opts: { level: number }\n        ) => {\n          const simplePng = pngEncDec.encode(\n            new Uint8Array(buffer),\n            width,\n            height\n          )\n          const imageData = oxipng.optimise(simplePng, opts.level, false)\n          oxipng.cleanup()\n          return imageData\n        },\n      }\n    },\n    defaultEncoderOptions: {\n      level: 2,\n    },\n    autoOptimize: {\n      option: 'level',\n      min: 6,\n      max: 1,\n    },\n  },\n} as const\n"],"names":["path","pngEncDec","oxipng","resize","mozEncWasm","resolve","__dirname","mozDecWasm","webpEncWasm","webpDecWasm","avifEncWasm","avifDecWasm","pngEncDecWasm","pngEncDecInit","default","readFile","oxipngWasm","oxipngInit","resizeWasm","resizeInit","rotateWasm","global","ImageData","resizeNameToIndex","name","Error","resizeWithAspect","input_width","input_height","target_width","target_height","width","height","Math","round","preprocessors","description","instantiate","buffer","method","premultiply","linearRGB","imageData","cleanup","defaultOptions","fitMethod","rotate","numRotations","degrees","sameDimensions","size","instance","WebAssembly","memory","exports","additionalPagesNeeded","ceil","byteLength","grow","view","Uint8ClampedArray","set","slice","codecs","mozjpeg","extension","detectors","dec","enc","defaultEncoderOptions","quality","baseline","arithmetic","progressive","optimize_coding","smoothing","color_space","quant_table","trellis_multipass","trellis_opt_zero","trellis_opt_table","trellis_loops","auto_subsample","chroma_subsample","separate_chroma_quality","chroma_quality","autoOptimize","option","min","max","webp","target_size","target_PSNR","sns_strength","filter_strength","filter_sharpness","filter_type","partitions","segments","pass","show_compressed","preprocessing","autofilter","partition_limit","alpha_compression","alpha_filtering","alpha_quality","lossless","exact","image_hint","emulate_jpeg_size","thread_level","low_memory","near_lossless","use_delta_palette","use_sharp_yuv","avif","cqLevel","cqAlphaLevel","denoiseLevel","tileColsLog2","tileRowsLog2","speed","subsample","chromaDeltaQ","sharpness","tune","decode","encode","opts","simplePng","Uint8Array","optimise","level"],"mappings":"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"}