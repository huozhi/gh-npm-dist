{"version":3,"sources":["../../../../../server/lib/squoosh/resize/squoosh_resize.js"],"sourcesContent":["let wasm\n\nlet cachegetUint8Memory0 = null\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)\n  }\n  return cachegetUint8Memory0\n}\n\nlet WASM_VECTOR_LEN = 0\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1)\n  getUint8Memory0().set(arg, ptr / 1)\n  WASM_VECTOR_LEN = arg.length\n  return ptr\n}\n\nlet cachegetInt32Memory0 = null\nfunction getInt32Memory0() {\n  if (\n    cachegetInt32Memory0 === null ||\n    cachegetInt32Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer)\n  }\n  return cachegetInt32Memory0\n}\n\nlet cachegetUint8ClampedMemory0 = null\nfunction getUint8ClampedMemory0() {\n  if (\n    cachegetUint8ClampedMemory0 === null ||\n    cachegetUint8ClampedMemory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8ClampedMemory0 = new Uint8ClampedArray(wasm.memory.buffer)\n  }\n  return cachegetUint8ClampedMemory0\n}\n\nfunction getClampedArrayU8FromWasm0(ptr, len) {\n  return getUint8ClampedMemory0().subarray(ptr / 1, ptr / 1 + len)\n}\n/**\n * @param {Uint8Array} input_image\n * @param {number} input_width\n * @param {number} input_height\n * @param {number} output_width\n * @param {number} output_height\n * @param {number} typ_idx\n * @param {boolean} premultiply\n * @param {boolean} color_space_conversion\n * @returns {Uint8ClampedArray}\n */\nexport function resize(\n  input_image,\n  input_width,\n  input_height,\n  output_width,\n  output_height,\n  typ_idx,\n  premultiply,\n  color_space_conversion\n) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16)\n    var ptr0 = passArray8ToWasm0(input_image, wasm.__wbindgen_malloc)\n    var len0 = WASM_VECTOR_LEN\n    wasm.resize(\n      retptr,\n      ptr0,\n      len0,\n      input_width,\n      input_height,\n      output_width,\n      output_height,\n      typ_idx,\n      premultiply,\n      color_space_conversion\n    )\n    var r0 = getInt32Memory0()[retptr / 4 + 0]\n    var r1 = getInt32Memory0()[retptr / 4 + 1]\n    var v1 = getClampedArrayU8FromWasm0(r0, r1).slice()\n    wasm.__wbindgen_free(r0, r1 * 1)\n    return v1\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16)\n  }\n}\n\nasync function load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      return await WebAssembly.instantiateStreaming(module, imports)\n    }\n\n    const bytes = await module.arrayBuffer()\n    return await WebAssembly.instantiate(bytes, imports)\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports)\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module }\n    } else {\n      return instance\n    }\n  }\n}\n\nasync function init(input) {\n  const imports = {}\n\n  if (\n    typeof input === 'string' ||\n    (typeof Request === 'function' && input instanceof Request) ||\n    (typeof URL === 'function' && input instanceof URL)\n  ) {\n    input = fetch(input)\n  }\n\n  const { instance, module } = await load(await input, imports)\n\n  wasm = instance.exports\n  init.__wbindgen_wasm_module = module\n\n  return wasm\n}\n\nexport default init\n\n// Manually remove the wasm and memory references to trigger GC\nexport function cleanup() {\n  wasm = null\n  cachegetUint8Memory0 = null\n  cachegetInt32Memory0 = null\n}\n"],"names":["resize","cleanup","wasm","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","ptr","length","set","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachegetUint8ClampedMemory0","getUint8ClampedMemory0","Uint8ClampedArray","getClampedArrayU8FromWasm0","len","subarray","input_image","input_width","input_height","output_width","output_height","typ_idx","premultiply","color_space_conversion","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","len0","r0","r1","v1","slice","__wbindgen_free","load","module","imports","Response","WebAssembly","instantiateStreaming","bytes","arrayBuffer","instantiate","instance","Instance","init","input","Request","URL","fetch","exports","__wbindgen_wasm_module"],"mappings":"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"}