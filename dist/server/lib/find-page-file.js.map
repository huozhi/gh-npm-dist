{"version":3,"sources":["../../../server/lib/find-page-file.ts"],"sourcesContent":["import { join, sep as pathSeparator, normalize } from 'path'\nimport chalk from '../../lib/chalk'\nimport { warn } from '../../build/output/log'\nimport { promises } from 'fs'\nimport { denormalizePagePath } from '../normalize-page-path'\nimport { fileExists } from '../../lib/file-exists'\n\nasync function isTrueCasePagePath(pagePath: string, pagesDir: string) {\n  const pageSegments = normalize(pagePath).split(pathSeparator).filter(Boolean)\n\n  const segmentExistsPromises = pageSegments.map(async (segment, i) => {\n    const segmentParentDir = join(pagesDir, ...pageSegments.slice(0, i))\n    const parentDirEntries = await promises.readdir(segmentParentDir)\n    return parentDirEntries.includes(segment)\n  })\n\n  return (await Promise.all(segmentExistsPromises)).every(Boolean)\n}\n\nexport async function findPageFile(\n  rootDir: string,\n  normalizedPagePath: string,\n  pageExtensions: string[]\n): Promise<string | null> {\n  const foundPagePaths: string[] = []\n\n  const page = denormalizePagePath(normalizedPagePath)\n\n  for (const extension of pageExtensions) {\n    if (!normalizedPagePath.endsWith('/index')) {\n      const relativePagePath = `${page}.${extension}`\n      const pagePath = join(rootDir, relativePagePath)\n\n      if (await fileExists(pagePath)) {\n        foundPagePaths.push(relativePagePath)\n      }\n    }\n\n    const relativePagePathWithIndex = join(page, `index.${extension}`)\n    const pagePathWithIndex = join(rootDir, relativePagePathWithIndex)\n    if (await fileExists(pagePathWithIndex)) {\n      foundPagePaths.push(relativePagePathWithIndex)\n    }\n  }\n\n  if (foundPagePaths.length < 1) {\n    return null\n  }\n\n  if (!(await isTrueCasePagePath(foundPagePaths[0], rootDir))) {\n    return null\n  }\n\n  if (foundPagePaths.length > 1) {\n    warn(\n      `Duplicate page detected. ${chalk.cyan(\n        join('pages', foundPagePaths[0])\n      )} and ${chalk.cyan(\n        join('pages', foundPagePaths[1])\n      )} both resolve to ${chalk.cyan(normalizedPagePath)}.`\n    )\n  }\n\n  return foundPagePaths[0]\n}\n"],"names":["findPageFile","isTrueCasePagePath","pagePath","pagesDir","pageSegments","split","filter","Boolean","segmentExistsPromises","map","segment","i","segmentParentDir","slice","parentDirEntries","readdir","includes","Promise","all","every","rootDir","normalizedPagePath","pageExtensions","foundPagePaths","page","extension","endsWith","relativePagePath","push","relativePagePathWithIndex","pagePathWithIndex","length","cyan"],"mappings":";;;;QAmBsBA,YAAY,GAAZA,YAAY;AAnBoB,GAAM,CAAN,KAAM;AAC1C,GAAiB,CAAjB,MAAiB;AACd,GAAwB,CAAxB,IAAwB;AACpB,GAAI,CAAJ,GAAI;AACO,GAAwB,CAAxB,kBAAwB;AACjC,GAAuB,CAAvB,WAAuB;;;;;;eAEnCC,kBAAkB,CAACC,QAAgB,EAAEC,QAAgB,EAAE,CAAC;IACrE,KAAK,CAACC,YAAY,OARkC,KAAM,YAQ3BF,QAAQ,EAAEG,KAAK,CARM,KAAM,MAQIC,MAAM,CAACC,OAAO;IAE5E,KAAK,CAACC,qBAAqB,GAAGJ,YAAY,CAACK,GAAG,QAAQC,OAAO,EAAEC,CAAC,GAAK,CAAC;QACpE,KAAK,CAACC,gBAAgB,OAX4B,KAAM,OAW1BT,QAAQ,KAAKC,YAAY,CAACS,KAAK,CAAC,CAAC,EAAEF,CAAC;QAClE,KAAK,CAACG,gBAAgB,GAAG,KAAK,CATT,GAAI,UASeC,OAAO,CAACH,gBAAgB;QAChE,MAAM,CAACE,gBAAgB,CAACE,QAAQ,CAACN,OAAO;IAC1C,CAAC;IAED,MAAM,EAAE,KAAK,CAACO,OAAO,CAACC,GAAG,CAACV,qBAAqB,GAAGW,KAAK,CAACZ,OAAO;AACjE,CAAC;eAEqBP,YAAY,CAChCoB,OAAe,EACfC,kBAA0B,EAC1BC,cAAwB,EACA,CAAC;IACzB,KAAK,CAACC,cAAc,GAAa,CAAC,CAAC;IAEnC,KAAK,CAACC,IAAI,OAtBwB,kBAAwB,sBAsBzBH,kBAAkB;IAEnD,GAAG,EAAE,KAAK,CAACI,SAAS,IAAIH,cAAc,CAAE,CAAC;QACvC,EAAE,GAAGD,kBAAkB,CAACK,QAAQ,CAAC,CAAQ,UAAG,CAAC;YAC3C,KAAK,CAACC,gBAAgB,MAAMH,IAAI,CAAC,CAAC,EAAEC,SAAS;YAC7C,KAAK,CAACvB,QAAQ,OA/BkC,KAAM,OA+BhCkB,OAAO,EAAEO,gBAAgB;YAE/C,EAAE,EAAE,KAAK,KA5BY,WAAuB,aA4BvBzB,QAAQ,GAAG,CAAC;gBAC/BqB,cAAc,CAACK,IAAI,CAACD,gBAAgB;YACtC,CAAC;QACH,CAAC;QAED,KAAK,CAACE,yBAAyB,OAtCmB,KAAM,OAsCjBL,IAAI,GAAG,MAAM,EAAEC,SAAS;QAC/D,KAAK,CAACK,iBAAiB,OAvC2B,KAAM,OAuCzBV,OAAO,EAAES,yBAAyB;QACjE,EAAE,EAAE,KAAK,KAnCc,WAAuB,aAmCzBC,iBAAiB,GAAG,CAAC;YACxCP,cAAc,CAACK,IAAI,CAACC,yBAAyB;QAC/C,CAAC;IACH,CAAC;IAED,EAAE,EAAEN,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE,CAAC;QAC9B,MAAM,CAAC,IAAI;IACb,CAAC;IAED,EAAE,GAAI,KAAK,CAAC9B,kBAAkB,CAACsB,cAAc,CAAC,CAAC,GAAGH,OAAO,GAAI,CAAC;QAC5D,MAAM,CAAC,IAAI;IACb,CAAC;IAED,EAAE,EAAEG,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE,CAAC;YAnDb,IAAwB,QAqDtC,yBAAyB,EAtDd,MAAiB,SAsDKC,IAAI,KAvDU,KAAM,OAwD/C,CAAO,QAAET,cAAc,CAAC,CAAC,IAC9B,KAAK,EAxDK,MAAiB,SAwDdS,IAAI,KAzD6B,KAAM,OA0D/C,CAAO,QAAET,cAAc,CAAC,CAAC,IAC9B,iBAAiB,EA1DP,MAAiB,SA0DFS,IAAI,CAACX,kBAAkB,EAAE,CAAC;IAEzD,CAAC;IAED,MAAM,CAACE,cAAc,CAAC,CAAC;AACzB,CAAC"}