{"version":3,"sources":["../../server/next.ts"],"sourcesContent":["import type { Options as DevServerOptions } from './dev/next-dev-server'\nimport type { NodeRequestHandler } from './next-server'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport './node-polyfill-fetch'\nimport { default as Server } from './next-server'\nimport * as log from '../build/output/log'\nimport loadConfig from './config'\nimport { resolve } from 'path'\nimport { NON_STANDARD_NODE_ENV } from '../lib/constants'\nimport { PHASE_DEVELOPMENT_SERVER } from '../shared/lib/constants'\nimport { PHASE_PRODUCTION_SERVER } from '../shared/lib/constants'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { NextUrlWithParsedQuery } from './request-meta'\n\nlet ServerImpl: typeof Server\n\nconst getServerImpl = async () => {\n  if (ServerImpl === undefined)\n    ServerImpl = (await Promise.resolve(require('./next-server'))).default\n  return ServerImpl\n}\n\nexport type NextServerOptions = Partial<DevServerOptions>\n\nexport interface RequestHandler {\n  (\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void>\n}\n\nexport class NextServer {\n  private serverPromise?: Promise<Server>\n  private server?: Server\n  private reqHandlerPromise?: Promise<NodeRequestHandler>\n  private preparedAssetPrefix?: string\n  public options: NextServerOptions\n\n  constructor(options: NextServerOptions) {\n    this.options = options\n  }\n\n  get hostname() {\n    return this.options.hostname\n  }\n\n  get port() {\n    return this.options.port\n  }\n\n  getRequestHandler(): RequestHandler {\n    return async (\n      req: IncomingMessage,\n      res: ServerResponse,\n      parsedUrl?: UrlWithParsedQuery\n    ) => {\n      const requestHandler = await this.getServerRequestHandler()\n      return requestHandler(req, res, parsedUrl)\n    }\n  }\n\n  setAssetPrefix(assetPrefix: string) {\n    if (this.server) {\n      this.server.setAssetPrefix(assetPrefix)\n    } else {\n      this.preparedAssetPrefix = assetPrefix\n    }\n  }\n\n  logError(...args: Parameters<Server['logError']>) {\n    if (this.server) {\n      this.server.logError(...args)\n    }\n  }\n\n  async render(...args: Parameters<Server['render']>) {\n    const server = await this.getServer()\n    return server.render(...args)\n  }\n\n  async renderToHTML(...args: Parameters<Server['renderToHTML']>) {\n    const server = await this.getServer()\n    return server.renderToHTML(...args)\n  }\n\n  async renderError(...args: Parameters<Server['renderError']>) {\n    const server = await this.getServer()\n    return server.renderError(...args)\n  }\n\n  async renderErrorToHTML(...args: Parameters<Server['renderErrorToHTML']>) {\n    const server = await this.getServer()\n    return server.renderErrorToHTML(...args)\n  }\n\n  async render404(...args: Parameters<Server['render404']>) {\n    const server = await this.getServer()\n    return server.render404(...args)\n  }\n\n  async serveStatic(...args: Parameters<Server['serveStatic']>) {\n    const server = await this.getServer()\n    return server.serveStatic(...args)\n  }\n\n  async prepare() {\n    const server = await this.getServer()\n    return server.prepare()\n  }\n\n  async close() {\n    const server = await this.getServer()\n    return (server as any).close()\n  }\n\n  private async createServer(options: DevServerOptions): Promise<Server> {\n    if (options.dev) {\n      const DevServer = require('./dev/next-dev-server').default\n      return new DevServer(options)\n    }\n    const ServerImplementation = await getServerImpl()\n    return new ServerImplementation(options)\n  }\n\n  private async loadConfig() {\n    const phase = this.options.dev\n      ? PHASE_DEVELOPMENT_SERVER\n      : PHASE_PRODUCTION_SERVER\n    const dir = resolve(this.options.dir || '.')\n    const conf = await loadConfig(phase, dir, this.options.conf)\n    return conf\n  }\n\n  private async getServer() {\n    if (!this.serverPromise) {\n      setTimeout(getServerImpl, 10)\n      this.serverPromise = this.loadConfig().then(async (conf) => {\n        this.server = await this.createServer({\n          ...this.options,\n          conf,\n        })\n        if (this.preparedAssetPrefix) {\n          this.server.setAssetPrefix(this.preparedAssetPrefix)\n        }\n        return this.server\n      })\n    }\n    return this.serverPromise\n  }\n\n  private async getServerRequestHandler() {\n    // Memoize request handler creation\n    if (!this.reqHandlerPromise) {\n      this.reqHandlerPromise = this.getServer().then((server) =>\n        server.getRequestHandler().bind(server)\n      )\n    }\n    return this.reqHandlerPromise\n  }\n}\n\n// This file is used for when users run `require('next')`\nfunction createServer(options: NextServerOptions): NextServer {\n  if (options == null) {\n    throw new Error(\n      'The server has not been instantiated properly. https://nextjs.org/docs/messages/invalid-server-options'\n    )\n  }\n\n  if (\n    !('isNextDevCommand' in options) &&\n    process.env.NODE_ENV &&\n    !['production', 'development', 'test'].includes(process.env.NODE_ENV)\n  ) {\n    log.warn(NON_STANDARD_NODE_ENV)\n  }\n\n  if (options.dev && typeof options.dev !== 'boolean') {\n    console.warn(\n      \"Warning: 'dev' is not a boolean which could introduce unexpected behavior. https://nextjs.org/docs/messages/invalid-server-options\"\n    )\n  }\n\n  return new NextServer(options)\n}\n\n// Support commonjs `require('next')`\nmodule.exports = createServer\nexports = module.exports\n\n// Support `import next from 'next'`\nexport default createServer\n"],"names":["log","ServerImpl","getServerImpl","undefined","Promise","resolve","require","default","NextServer","options","hostname","port","getRequestHandler","req","res","parsedUrl","requestHandler","getServerRequestHandler","setAssetPrefix","assetPrefix","server","preparedAssetPrefix","logError","args","render","getServer","renderToHTML","renderError","renderErrorToHTML","render404","serveStatic","prepare","close","createServer","dev","DevServer","ServerImplementation","loadConfig","phase","dir","conf","serverPromise","setTimeout","then","reqHandlerPromise","bind","Error","process","env","NODE_ENV","includes","warn","console","module","exports"],"mappings":"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"}