{"version":3,"sources":["../../server/font-utils.ts"],"sourcesContent":["import * as Log from '../build/output/log'\nimport { GOOGLE_FONT_PROVIDER } from '../shared/lib/constants'\nconst https = require('https')\n\nconst CHROME_UA =\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36'\nconst IE_UA = 'Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko'\n\nexport type FontManifest = Array<{\n  url: string\n  content: string\n}>\n\nfunction isGoogleFont(url: string): boolean {\n  return url.startsWith(GOOGLE_FONT_PROVIDER)\n}\n\nfunction getFontForUA(url: string, UA: string): Promise<String> {\n  return new Promise((resolve, reject) => {\n    let rawData: any = ''\n    https\n      .get(\n        url,\n        {\n          headers: {\n            'user-agent': UA,\n          },\n        },\n        (res: any) => {\n          res.on('data', (chunk: any) => {\n            rawData += chunk\n          })\n          res.on('end', () => {\n            resolve(rawData.toString('utf8'))\n          })\n        }\n      )\n      .on('error', (e: Error) => {\n        reject(e)\n      })\n  })\n}\n\nexport async function getFontDefinitionFromNetwork(\n  url: string\n): Promise<string> {\n  let result = ''\n  /**\n   * The order of IE -> Chrome is important, other wise chrome starts loading woff1.\n   * CSS cascading 🤷‍♂️.\n   */\n  try {\n    if (isGoogleFont(url)) {\n      result += await getFontForUA(url, IE_UA)\n    }\n    result += await getFontForUA(url, CHROME_UA)\n  } catch (e) {\n    Log.warn(\n      `Failed to download the stylesheet for ${url}. Skipped optimizing this font.`\n    )\n    return ''\n  }\n\n  return result\n}\n\nexport function getFontDefinitionFromManifest(\n  url: string,\n  manifest: FontManifest\n): string {\n  return (\n    manifest.find((font) => {\n      if (font && font.url === url) {\n        return true\n      }\n      return false\n    })?.content || ''\n  )\n}\n"],"names":["getFontDefinitionFromNetwork","getFontDefinitionFromManifest","Log","https","require","CHROME_UA","IE_UA","isGoogleFont","url","startsWith","getFontForUA","UA","Promise","resolve","reject","rawData","get","headers","res","on","chunk","toString","e","result","warn","manifest","find","font","content"],"mappings":";;;;QA2CsBA,4BAA4B,GAA5BA,4BAA4B;QAuBlCC,6BAA6B,GAA7BA,6BAA6B;AAlEjCC,GAAG,CAAHA,GAAG;AACsB,GAAyB,CAAzB,UAAyB;;;;;;;;;;;;;;;;;;;;;;AAC9D,KAAK,CAACC,KAAK,GAAGC,OAAO,CAAC,CAAO;AAE7B,KAAK,CAACC,SAAS,GACb,CAA0H;AAC5H,KAAK,CAACC,KAAK,GAAG,CAAgE;SAOrEC,YAAY,CAACC,GAAW,EAAW,CAAC;IAC3C,MAAM,CAACA,GAAG,CAACC,UAAU,CAbc,UAAyB;AAc9D,CAAC;SAEQC,YAAY,CAACF,GAAW,EAAEG,EAAU,EAAmB,CAAC;IAC/D,MAAM,CAAC,GAAG,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,GAAK,CAAC;QACvC,GAAG,CAACC,OAAO,GAAQ,CAAE;QACrBZ,KAAK,CACFa,GAAG,CACFR,GAAG,EACH,CAAC;YACCS,OAAO,EAAE,CAAC;gBACR,CAAY,aAAEN,EAAE;YAClB,CAAC;QACH,CAAC,GACAO,GAAQ,GAAK,CAAC;YACbA,GAAG,CAACC,EAAE,CAAC,CAAM,QAAGC,KAAU,GAAK,CAAC;gBAC9BL,OAAO,IAAIK,KAAK;YAClB,CAAC;YACDF,GAAG,CAACC,EAAE,CAAC,CAAK,UAAQ,CAAC;gBACnBN,OAAO,CAACE,OAAO,CAACM,QAAQ,CAAC,CAAM;YACjC,CAAC;QACH,CAAC,EAEFF,EAAE,CAAC,CAAO,SAAGG,CAAQ,GAAK,CAAC;YAC1BR,MAAM,CAACQ,CAAC;QACV,CAAC;IACL,CAAC;AACH,CAAC;eAEqBtB,4BAA4B,CAChDQ,GAAW,EACM,CAAC;IAClB,GAAG,CAACe,MAAM,GAAG,CAAE;IACf,EAGG,AAHH;;;GAGG,AAHH,EAGG,CACH,GAAG,CAAC,CAAC;QACH,EAAE,EAAEhB,YAAY,CAACC,GAAG,GAAG,CAAC;YACtBe,MAAM,IAAI,KAAK,CAACb,YAAY,CAACF,GAAG,EAAEF,KAAK;QACzC,CAAC;QACDiB,MAAM,IAAI,KAAK,CAACb,YAAY,CAACF,GAAG,EAAEH,SAAS;IAC7C,CAAC,CAAC,KAAK,EAAEiB,CAAC,EAAE,CAAC;QAxDHpB,GAAG,CAyDPsB,IAAI,EACL,sCAAsC,EAAEhB,GAAG,CAAC,+BAA+B;QAE9E,MAAM,CAAC,CAAE;IACX,CAAC;IAED,MAAM,CAACe,MAAM;AACf,CAAC;SAEetB,6BAA6B,CAC3CO,GAAW,EACXiB,QAAsB,EACd,CAAC;QAEPA,GAKE;IANJ,MAAM,GACJA,GAKE,GALFA,QAAQ,CAACC,IAAI,EAAEC,IAAI,GAAK,CAAC;QACvB,EAAE,EAAEA,IAAI,IAAIA,IAAI,CAACnB,GAAG,KAAKA,GAAG,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI;QACb,CAAC;QACD,MAAM,CAAC,KAAK;IACd,CAAC,eALDiB,GAKE,KALFA,IAAI,CAAJA,CAKW,GALXA,IAAI,CAAJA,CAKW,GALXA,GAKE,CAAEG,OAAO,KAAI,CAAE;AAErB,CAAC"}