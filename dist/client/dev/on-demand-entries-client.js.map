{"version":3,"sources":["../../../client/dev/on-demand-entries-client.js"],"sourcesContent":["import Router from 'next/router'\nimport { addMessageListener, sendMessage } from './error-overlay/websocket'\n\nexport default async (page) => {\n  if (page) {\n    // in AMP the router isn't initialized on the client and\n    // client-transitions don't occur so ping initial page\n    setInterval(() => {\n      sendMessage(JSON.stringify({ event: 'ping', page }))\n    }, 2500)\n  } else {\n    Router.ready(() => {\n      setInterval(() => {\n        sendMessage(JSON.stringify({ event: 'ping', page: Router.pathname }))\n      }, 2500)\n    })\n  }\n\n  addMessageListener((event) => {\n    if (event.data.indexOf('{') === -1) return\n    try {\n      const payload = JSON.parse(event.data)\n      // don't attempt fetching the page if we're already showing\n      // the dev overlay as this can cause the error to be triggered\n      // repeatedly\n      if (\n        payload.event === 'pong' &&\n        payload.invalid &&\n        !self.__NEXT_DATA__.err\n      ) {\n        // Payload can be invalid even if the page does exist.\n        // So, we check if it can be created.\n        fetch(location.href, {\n          credentials: 'same-origin',\n        }).then((pageRes) => {\n          if (pageRes.status === 200) {\n            // Page exists now, reload\n            location.reload()\n          } else {\n            // Page doesn't exist\n            if (\n              self.__NEXT_DATA__.page === Router.pathname &&\n              Router.pathname !== '/_error'\n            ) {\n              // We are still on the page,\n              // reload to show 404 error page\n              location.reload()\n            }\n          }\n        })\n      }\n    } catch (err) {\n      console.error('on-demand-entries failed to parse response', err)\n    }\n  })\n}\n"],"names":["page","setInterval","JSON","stringify","event","ready","pathname","data","indexOf","payload","parse","invalid","self","__NEXT_DATA__","err","fetch","location","href","credentials","then","pageRes","status","reload","console","error"],"mappings":";;;;;AAAmB,GAAa,CAAb,OAAa;AACgB,GAA2B,CAA3B,UAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCAE5D,QAAQ,EAADA,IAAI,EAAK,CAAC;QAC9B,EAAE,EAAEA,IAAI,EAAE,CAAC;YACT,EAAwD,AAAxD,sDAAwD;YACxD,EAAsD,AAAtD,oDAAsD;YACtDC,WAAW,KAAO,CAAC;oBANyB,UAA2B,cAOzDC,IAAI,CAACC,SAAS,CAAC,CAAC;oBAACC,KAAK,EAAE,CAAM;oBAAEJ,IAAI;gBAAC,CAAC;YACpD,CAAC,EAAE,IAAI;QACT,CAAC,MAAM,CAAC;YAVS,OAAa,SAWrBK,KAAK,KAAO,CAAC;gBAClBJ,WAAW,KAAO,CAAC;wBAXuB,UAA2B,cAYvDC,IAAI,CAACC,SAAS,CAAC,CAAC;wBAACC,KAAK,EAAE,CAAM;wBAAEJ,IAAI,EAbrC,OAAa,SAaiCM,QAAQ;oBAAC,CAAC;gBACrE,CAAC,EAAE,IAAI;YACT,CAAC;QACH,CAAC;YAf6C,UAA2B,sBAiBrDF,KAAK,GAAK,CAAC;YAC7B,EAAE,EAAEA,KAAK,CAACG,IAAI,CAACC,OAAO,CAAC,CAAG,SAAO,CAAC,EAAE,MAAM;YAC1C,GAAG,CAAC,CAAC;gBACH,KAAK,CAACC,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAACN,KAAK,CAACG,IAAI;gBACrC,EAA2D,AAA3D,yDAA2D;gBAC3D,EAA8D,AAA9D,4DAA8D;gBAC9D,EAAa,AAAb,WAAa;gBACb,EAAE,EACAE,OAAO,CAACL,KAAK,KAAK,CAAM,SACxBK,OAAO,CAACE,OAAO,KACdC,IAAI,CAACC,aAAa,CAACC,GAAG,EACvB,CAAC;oBACD,EAAsD,AAAtD,oDAAsD;oBACtD,EAAqC,AAArC,mCAAqC;oBACrCC,KAAK,CAACC,QAAQ,CAACC,IAAI,EAAE,CAAC;wBACpBC,WAAW,EAAE,CAAa;oBAC5B,CAAC,EAAEC,IAAI,EAAEC,OAAO,GAAK,CAAC;wBACpB,EAAE,EAAEA,OAAO,CAACC,MAAM,KAAK,GAAG,EAAE,CAAC;4BAC3B,EAA0B,AAA1B,wBAA0B;4BAC1BL,QAAQ,CAACM,MAAM;wBACjB,CAAC,MAAM,CAAC;4BACN,EAAqB,AAArB,mBAAqB;4BACrB,EAAE,EACAV,IAAI,CAACC,aAAa,CAACb,IAAI,KAzClB,OAAa,SAyCiBM,QAAQ,IAzCtC,OAAa,SA0CXA,QAAQ,KAAK,CAAS,UAC7B,CAAC;gCACD,EAA4B,AAA5B,0BAA4B;gCAC5B,EAAgC,AAAhC,8BAAgC;gCAChCU,QAAQ,CAACM,MAAM;4BACjB,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,KAAK,EAAER,GAAG,EAAE,CAAC;gBACbS,OAAO,CAACC,KAAK,CAAC,CAA4C,6CAAEV,GAAG;YACjE,CAAC;QACH,CAAC;IACH,CAAC;oBApDqBd,IAAI"}