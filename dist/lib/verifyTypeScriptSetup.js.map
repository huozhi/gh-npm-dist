{"version":3,"sources":["../../lib/verifyTypeScriptSetup.ts"],"sourcesContent":["import chalk from 'next/dist/compiled/chalk'\nimport path from 'path'\nimport {\n  hasNecessaryDependencies,\n  NecessaryDependencies,\n} from './has-necessary-dependencies'\nimport semver from 'next/dist/compiled/semver'\nimport { CompileError } from './compile-error'\nimport { FatalError } from './fatal-error'\nimport * as log from '../build/output/log'\n\nimport { getTypeScriptIntent } from './typescript/getTypeScriptIntent'\nimport { TypeCheckResult } from './typescript/runTypeCheck'\nimport { writeAppTypeDeclarations } from './typescript/writeAppTypeDeclarations'\nimport { writeConfigurationDefaults } from './typescript/writeConfigurationDefaults'\nimport { missingDepsError } from './typescript/missingDependencyError'\nimport { NextConfigComplete } from '../server/config-shared'\n\nconst requiredPackages = [\n  { file: 'typescript', pkg: 'typescript' },\n  { file: '@types/react/index.d.ts', pkg: '@types/react' },\n  { file: '@types/node/index.d.ts', pkg: '@types/node' },\n]\n\nexport async function verifyTypeScriptSetup(\n  dir: string,\n  pagesDir: string,\n  typeCheckPreflight: boolean,\n  config: NextConfigComplete,\n  cacheDir?: string\n): Promise<{ result?: TypeCheckResult; version: string | null }> {\n  const tsConfigPath = path.join(dir, config.typescript.tsconfigPath)\n\n  try {\n    // Check if the project uses TypeScript:\n    const intent = await getTypeScriptIntent(dir, pagesDir, config)\n    if (!intent) {\n      return { version: null }\n    }\n\n    // Ensure TypeScript and necessary `@types/*` are installed:\n    const deps: NecessaryDependencies = await hasNecessaryDependencies(\n      dir,\n      requiredPackages\n    )\n\n    if (deps.missing?.length > 0) {\n      await missingDepsError(dir, deps.missing)\n    }\n\n    // Load TypeScript after we're sure it exists:\n    const ts = (await Promise.resolve(\n      require(deps.resolved.get('typescript')!)\n    )) as typeof import('typescript')\n\n    if (semver.lt(ts.version, '4.3.2')) {\n      log.warn(\n        `Minimum recommended TypeScript version is v4.3.2, older versions can potentially be incompatible with Next.js. Detected: ${ts.version}`\n      )\n    }\n\n    // Reconfigure (or create) the user's `tsconfig.json` for them:\n    await writeConfigurationDefaults(ts, tsConfigPath, intent.firstTimeSetup)\n    // Write out the necessary `next-env.d.ts` file to correctly register\n    // Next.js' types:\n    await writeAppTypeDeclarations(dir, !config.images.disableStaticImages)\n\n    let result\n    if (typeCheckPreflight) {\n      const { runTypeCheck } = require('./typescript/runTypeCheck')\n\n      // Verify the project passes type-checking before we go to webpack phase:\n      result = await runTypeCheck(ts, dir, tsConfigPath, cacheDir)\n    }\n    return { result, version: ts.version }\n  } catch (err) {\n    // These are special errors that should not show a stack trace:\n    if (err instanceof CompileError) {\n      console.error(chalk.red('Failed to compile.\\n'))\n      console.error(err.message)\n      process.exit(1)\n    } else if (err instanceof FatalError) {\n      console.error(err.message)\n      process.exit(1)\n    }\n    throw err\n  }\n}\n"],"names":["verifyTypeScriptSetup","log","requiredPackages","file","pkg","dir","pagesDir","typeCheckPreflight","config","cacheDir","tsConfigPath","join","typescript","tsconfigPath","deps","intent","version","missing","length","ts","Promise","resolve","require","resolved","get","lt","warn","firstTimeSetup","images","disableStaticImages","result","runTypeCheck","err","console","error","red","message","process","exit"],"mappings":"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"}