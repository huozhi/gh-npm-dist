{"version":3,"sources":["../../lib/worker.ts"],"sourcesContent":["import { Worker as JestWorker } from 'next/dist/compiled/jest-worker'\n\ntype FarmOptions = ConstructorParameters<typeof JestWorker>[1]\n\nconst RESTARTED = Symbol('restarted')\n\nexport class Worker {\n  private _worker: JestWorker | undefined\n\n  constructor(\n    workerPath: string,\n    options: FarmOptions & {\n      timeout?: number\n      onRestart?: (method: string, args: any[], attempts: number) => void\n      exposedMethods: ReadonlyArray<string>\n    }\n  ) {\n    let { timeout, onRestart, ...farmOptions } = options\n\n    let restartPromise: Promise<typeof RESTARTED>\n    let resolveRestartPromise: (arg: typeof RESTARTED) => void\n    let activeTasks = 0\n\n    this._worker = undefined\n\n    const createWorker = () => {\n      this._worker = new JestWorker(workerPath, farmOptions) as JestWorker\n      restartPromise = new Promise(\n        (resolve) => (resolveRestartPromise = resolve)\n      )\n\n      this._worker.getStdout().pipe(process.stdout)\n      this._worker.getStderr().pipe(process.stderr)\n    }\n    createWorker()\n\n    const onHanging = () => {\n      const worker = this._worker\n      if (!worker) return\n      const resolve = resolveRestartPromise\n      createWorker()\n      worker.end().then(() => {\n        resolve(RESTARTED)\n      })\n    }\n\n    let hangingTimer: number | false = false\n\n    const onActivity = () => {\n      if (hangingTimer) clearTimeout(hangingTimer)\n      hangingTimer = activeTasks > 0 && setTimeout(onHanging, timeout)\n    }\n\n    for (const method of farmOptions.exposedMethods) {\n      if (method.startsWith('_')) continue\n      ;(this as any)[method] = timeout\n        ? // eslint-disable-next-line no-loop-func\n          async (...args: any[]) => {\n            activeTasks++\n            try {\n              let attempts = 0\n              for (;;) {\n                onActivity()\n                const result = await Promise.race([\n                  (this._worker as any)[method](...args),\n                  restartPromise,\n                ])\n                if (result !== RESTARTED) return result\n                if (onRestart) onRestart(method, args, ++attempts)\n              }\n            } finally {\n              activeTasks--\n              onActivity()\n            }\n          }\n        : (this._worker as any)[method].bind(this._worker)\n    }\n  }\n\n  end(): ReturnType<JestWorker['end']> {\n    const worker = this._worker\n    if (!worker) {\n      throw new Error('Farm is ended, no more calls can be done to it')\n    }\n    this._worker = undefined\n    return worker.end()\n  }\n}\n"],"names":["RESTARTED","Symbol","Worker","workerPath","options","timeout","onRestart","farmOptions","restartPromise","resolveRestartPromise","activeTasks","_worker","undefined","createWorker","Promise","resolve","getStdout","pipe","process","stdout","getStderr","stderr","onHanging","worker","end","then","hangingTimer","onActivity","clearTimeout","setTimeout","method","exposedMethods","startsWith","args","attempts","result","race","bind","Error"],"mappings":"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"}