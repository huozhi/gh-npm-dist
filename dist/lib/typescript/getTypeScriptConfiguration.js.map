{"version":3,"sources":["../../../lib/typescript/getTypeScriptConfiguration.ts"],"sourcesContent":["import chalk from 'next/dist/compiled/chalk'\nimport os from 'os'\nimport path from 'path'\n\nimport { FatalError } from '../fatal-error'\nimport isError from '../is-error'\n\nexport async function getTypeScriptConfiguration(\n  ts: typeof import('typescript'),\n  tsConfigPath: string,\n  metaOnly?: boolean\n): Promise<import('typescript').ParsedCommandLine> {\n  try {\n    const formatDiagnosticsHost: import('typescript').FormatDiagnosticsHost = {\n      getCanonicalFileName: (fileName: string) => fileName,\n      getCurrentDirectory: ts.sys.getCurrentDirectory,\n      getNewLine: () => os.EOL,\n    }\n\n    const { config, error } = ts.readConfigFile(tsConfigPath, ts.sys.readFile)\n    if (error) {\n      throw new FatalError(ts.formatDiagnostic(error, formatDiagnosticsHost))\n    }\n\n    let configToParse: any = config\n\n    const result = ts.parseJsonConfigFileContent(\n      configToParse,\n      // When only interested in meta info,\n      // avoid enumerating all files (for performance reasons)\n      metaOnly\n        ? {\n            ...ts.sys,\n            readDirectory(_path, extensions, _excludes, _includes, _depth) {\n              return [extensions ? `file${extensions[0]}` : `file.ts`]\n            },\n          }\n        : ts.sys,\n      path.dirname(tsConfigPath)\n    )\n\n    if (result.errors) {\n      result.errors = result.errors.filter(\n        ({ code }) =>\n          // No inputs were found in config file\n          code !== 18003\n      )\n    }\n\n    if (result.errors?.length) {\n      throw new FatalError(\n        ts.formatDiagnostic(result.errors[0], formatDiagnosticsHost)\n      )\n    }\n\n    return result\n  } catch (err) {\n    if (isError(err) && err.name === 'SyntaxError') {\n      const reason = '\\n' + (err.message ?? '')\n      throw new FatalError(\n        chalk.red.bold(\n          'Could not parse',\n          chalk.cyan('tsconfig.json') +\n            '.' +\n            ' Please make sure it contains syntactically correct JSON.'\n        ) + reason\n      )\n    }\n    throw err\n  }\n}\n"],"names":["getTypeScriptConfiguration","ts","tsConfigPath","metaOnly","result","formatDiagnosticsHost","getCanonicalFileName","fileName","getCurrentDirectory","sys","getNewLine","EOL","config","error","readConfigFile","readFile","formatDiagnostic","configToParse","parseJsonConfigFileContent","readDirectory","_path","extensions","_excludes","_includes","_depth","dirname","errors","filter","code","length","err","name","reason","message","red","bold","cyan"],"mappings":";;;;QAOsBA,0BAA0B,GAA1BA,0BAA0B;AAP9B,GAA0B,CAA1B,MAA0B;AAC7B,GAAI,CAAJ,GAAI;AACF,GAAM,CAAN,KAAM;AAEI,GAAgB,CAAhB,WAAgB;AACvB,GAAa,CAAb,QAAa;;;;;;eAEXA,0BAA0B,CAC9CC,EAA+B,EAC/BC,YAAoB,EACpBC,QAAkB,EAC+B,CAAC;IAClD,GAAG,CAAC,CAAC;YAqCCC,GAAa;QApCjB,KAAK,CAACC,qBAAqB,GAA+C,CAAC;YACzEC,oBAAoB,GAAGC,QAAgB,GAAKA,QAAQ;;YACpDC,mBAAmB,EAAEP,EAAE,CAACQ,GAAG,CAACD,mBAAmB;YAC/CE,UAAU,MAfD,GAAI,SAeQC,GAAG;QAC1B,CAAC;QAED,KAAK,CAAC,CAAC,CAACC,MAAM,GAAEC,KAAK,EAAC,CAAC,GAAGZ,EAAE,CAACa,cAAc,CAACZ,YAAY,EAAED,EAAE,CAACQ,GAAG,CAACM,QAAQ;QACzE,EAAE,EAAEF,KAAK,EAAE,CAAC;YACV,KAAK,CAAC,GAAG,CAjBY,WAAgB,YAiBhBZ,EAAE,CAACe,gBAAgB,CAACH,KAAK,EAAER,qBAAqB;QACvE,CAAC;QAED,GAAG,CAACY,aAAa,GAAQL,MAAM;QAE/B,KAAK,CAACR,MAAM,GAAGH,EAAE,CAACiB,0BAA0B,CAC1CD,aAAa,EACb,EAAqC,AAArC,mCAAqC;QACrC,EAAwD,AAAxD,sDAAwD;QACxDd,QAAQ,GACJ,CAAC;eACIF,EAAE,CAACQ,GAAG;YACTU,aAAa,EAACC,KAAK,EAAEC,UAAU,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE,CAAC;gBAC9D,MAAM,CAAC,CAACH;oBAAAA,UAAU,IAAI,IAAI,EAAEA,UAAU,CAAC,CAAC,OAAO,OAAO;gBAAC,CAAC;YAC1D,CAAC;QACH,CAAC,GACDpB,EAAE,CAACQ,GAAG,EAnCC,KAAM,SAoCZgB,OAAO,CAACvB,YAAY;QAG3B,EAAE,EAAEE,MAAM,CAACsB,MAAM,EAAE,CAAC;YAClBtB,MAAM,CAACsB,MAAM,GAAGtB,MAAM,CAACsB,MAAM,CAACC,MAAM,EACjC,CAAC,CAACC,IAAI,EAAC,CAAC,GACP,EAAsC,AAAtC,oCAAsC;gBACtCA,IAAI,KAAK,KAAK;;QAEpB,CAAC;QAED,EAAE,GAAExB,GAAa,GAAbA,MAAM,CAACsB,MAAM,cAAbtB,GAAa,KAAbA,IAAI,CAAJA,CAAqB,GAArBA,IAAI,CAAJA,CAAqB,GAArBA,GAAa,CAAEyB,MAAM,EAAE,CAAC;YAC1B,KAAK,CAAC,GAAG,CA9CY,WAAgB,YA+CnC5B,EAAE,CAACe,gBAAgB,CAACZ,MAAM,CAACsB,MAAM,CAAC,CAAC,GAAGrB,qBAAqB;QAE/D,CAAC;QAED,MAAM,CAACD,MAAM;IACf,CAAC,CAAC,KAAK,EAAE0B,GAAG,EAAE,CAAC;QACb,EAAE,MApDc,QAAa,UAoDjBA,GAAG,KAAKA,GAAG,CAACC,IAAI,KAAK,CAAa,cAAE,CAAC;gBACxBD,QAAW;YAAlC,KAAK,CAACE,MAAM,GAAG,CAAI,QAAIF,QAAW,GAAXA,GAAG,CAACG,OAAO,cAAXH,QAAW,cAAXA,QAAW,GAAI,CAAE;YACxC,KAAK,CAAC,GAAG,CAvDY,WAAgB,YAJzB,MAA0B,SA4D9BI,GAAG,CAACC,IAAI,CACZ,CAAiB,kBA7DT,MAA0B,SA8D5BC,IAAI,CAAC,CAAe,kBACxB,CAAG,KACH,CAA2D,8DAC3DJ,MAAM;QAEd,CAAC;QACD,KAAK,CAACF,GAAG;IACX,CAAC;AACH,CAAC"}