{"version":3,"sources":["../../../lib/eslint/runLintCheck.ts"],"sourcesContent":["import { promises as fs } from 'fs'\nimport chalk from 'next/dist/compiled/chalk'\nimport path from 'path'\n\nimport findUp from 'next/dist/compiled/find-up'\nimport semver from 'next/dist/compiled/semver'\nimport * as CommentJson from 'next/dist/compiled/comment-json'\n\nimport { LintResult, formatResults } from './customFormatter'\nimport { writeDefaultConfig } from './writeDefaultConfig'\nimport { hasEslintConfiguration } from './hasEslintConfiguration'\n\nimport { ESLINT_PROMPT_VALUES } from '../constants'\nimport { existsSync, findPagesDir } from '../find-pages-dir'\nimport { installDependencies } from '../install-dependencies'\nimport { hasNecessaryDependencies } from '../has-necessary-dependencies'\nimport { isYarn } from '../is-yarn'\n\nimport * as Log from '../../build/output/log'\nimport { EventLintCheckCompleted } from '../../telemetry/events/build'\nimport isError, { getProperError } from '../is-error'\n\ntype Config = {\n  plugins: string[]\n  rules: { [key: string]: Array<number | string> }\n}\n\nconst requiredPackages = [\n  { file: 'eslint', pkg: 'eslint' },\n  { file: 'eslint-config-next', pkg: 'eslint-config-next' },\n]\n\nasync function cliPrompt() {\n  console.log(\n    chalk.bold(\n      `${chalk.cyan(\n        '?'\n      )} How would you like to configure ESLint? https://nextjs.org/docs/basic-features/eslint`\n    )\n  )\n\n  try {\n    const cliSelect = (\n      await Promise.resolve(require('next/dist/compiled/cli-select'))\n    ).default\n    const { value } = await cliSelect({\n      values: ESLINT_PROMPT_VALUES,\n      valueRenderer: (\n        {\n          title,\n          recommended,\n        }: { title: string; recommended?: boolean; config: any },\n        selected: boolean\n      ) => {\n        const name = selected ? chalk.bold.underline.cyan(title) : title\n        return name + (recommended ? chalk.bold.yellow(' (recommended)') : '')\n      },\n      selected: chalk.cyan('‚ùØ '),\n      unselected: '  ',\n    })\n\n    return { config: value?.config }\n  } catch {\n    return { config: null }\n  }\n}\n\nasync function lint(\n  baseDir: string,\n  lintDirs: string[],\n  eslintrcFile: string | null,\n  pkgJsonPath: string | null,\n  lintDuringBuild: boolean = false,\n  eslintOptions: any = null,\n  reportErrorsOnly: boolean = false,\n  maxWarnings: number = -1,\n  formatter: string | null = null\n): Promise<\n  | string\n  | null\n  | {\n      output: string | null\n      isError: boolean\n      eventInfo: EventLintCheckCompleted\n    }\n> {\n  try {\n    // Load ESLint after we're sure it exists:\n    const deps = await hasNecessaryDependencies(baseDir, requiredPackages)\n\n    if (deps.missing.some((dep) => dep.pkg === 'eslint')) {\n      Log.error(\n        `ESLint must be installed${\n          lintDuringBuild ? ' in order to run during builds:' : ':'\n        } ${chalk.bold.cyan(\n          (await isYarn(baseDir))\n            ? 'yarn add --dev eslint'\n            : 'npm install --save-dev eslint'\n        )}`\n      )\n      return null\n    }\n\n    const mod = await Promise.resolve(require(deps.resolved.get('eslint')!))\n\n    const { ESLint } = mod\n    let eslintVersion = ESLint?.version ?? mod?.CLIEngine?.version\n\n    if (!eslintVersion || semver.lt(eslintVersion, '7.0.0')) {\n      return `${chalk.red(\n        'error'\n      )} - Your project has an older version of ESLint installed${\n        eslintVersion ? ' (' + eslintVersion + ')' : ''\n      }. Please upgrade to ESLint version 7 or above`\n    }\n\n    let options: any = {\n      useEslintrc: true,\n      baseConfig: {},\n      errorOnUnmatchedPattern: false,\n      extensions: ['.js', '.jsx', '.ts', '.tsx'],\n      cache: true,\n      ...eslintOptions,\n    }\n\n    let eslint = new ESLint(options)\n\n    let nextEslintPluginIsEnabled = false\n    const pagesDirRules = ['@next/next/no-html-link-for-pages']\n\n    for (const configFile of [eslintrcFile, pkgJsonPath]) {\n      if (!configFile) continue\n\n      const completeConfig: Config = await eslint.calculateConfigForFile(\n        configFile\n      )\n\n      if (completeConfig.plugins?.includes('@next/next')) {\n        nextEslintPluginIsEnabled = true\n        break\n      }\n    }\n\n    const pagesDir = findPagesDir(baseDir)\n\n    if (nextEslintPluginIsEnabled) {\n      let updatedPagesDir = false\n\n      for (const rule of pagesDirRules) {\n        if (\n          !options.baseConfig!.rules?.[rule] &&\n          !options.baseConfig!.rules?.[\n            rule.replace('@next/next', '@next/babel-plugin-next')\n          ]\n        ) {\n          if (!options.baseConfig!.rules) {\n            options.baseConfig!.rules = {}\n          }\n          options.baseConfig!.rules[rule] = [1, pagesDir]\n          updatedPagesDir = true\n        }\n      }\n\n      if (updatedPagesDir) {\n        eslint = new ESLint(options)\n      }\n    } else {\n      Log.warn(\n        'The Next.js plugin was not detected in your ESLint configuration. See https://nextjs.org/docs/basic-features/eslint#migrating-existing-config'\n      )\n    }\n\n    const lintStart = process.hrtime()\n\n    let results = await eslint.lintFiles(lintDirs)\n    let selectedFormatter = null\n\n    if (options.fix) await ESLint.outputFixes(results)\n    if (reportErrorsOnly) results = await ESLint.getErrorResults(results) // Only return errors if --quiet flag is used\n\n    if (formatter) selectedFormatter = await eslint.loadFormatter(formatter)\n    const formattedResult = formatResults(\n      baseDir,\n      results,\n      selectedFormatter?.format\n    )\n    const lintEnd = process.hrtime(lintStart)\n    const totalWarnings = results.reduce(\n      (sum: number, file: LintResult) => sum + file.warningCount,\n      0\n    )\n\n    return {\n      output: formattedResult.output,\n      isError:\n        ESLint.getErrorResults(results)?.length > 0 ||\n        (maxWarnings >= 0 && totalWarnings > maxWarnings),\n      eventInfo: {\n        durationInSeconds: lintEnd[0],\n        eslintVersion: eslintVersion,\n        lintedFilesCount: results.length,\n        lintFix: !!options.fix,\n        nextEslintPluginVersion:\n          nextEslintPluginIsEnabled && deps.resolved.has('eslint-config-next')\n            ? require(path.join(\n                path.dirname(deps.resolved.get('eslint-config-next')!),\n                'package.json'\n              )).version\n            : null,\n        nextEslintPluginErrorsCount: formattedResult.totalNextPluginErrorCount,\n        nextEslintPluginWarningsCount:\n          formattedResult.totalNextPluginWarningCount,\n      },\n    }\n  } catch (err) {\n    if (lintDuringBuild) {\n      Log.error(\n        `ESLint: ${\n          isError(err) && err.message ? err.message.replace(/\\n/g, ' ') : err\n        }`\n      )\n      return null\n    } else {\n      throw getProperError(err)\n    }\n  }\n}\n\nexport async function runLintCheck(\n  baseDir: string,\n  lintDirs: string[],\n  lintDuringBuild: boolean = false,\n  eslintOptions: any = null,\n  reportErrorsOnly: boolean = false,\n  maxWarnings: number = -1,\n  formatter: string | null = null,\n  strict: boolean = false\n): ReturnType<typeof lint> {\n  try {\n    // Find user's .eslintrc file\n    const eslintrcFile =\n      (await findUp(\n        [\n          '.eslintrc.js',\n          '.eslintrc.yaml',\n          '.eslintrc.yml',\n          '.eslintrc.json',\n          '.eslintrc',\n        ],\n        {\n          cwd: baseDir,\n        }\n      )) ?? null\n\n    const pkgJsonPath = (await findUp('package.json', { cwd: baseDir })) ?? null\n    let packageJsonConfig = null\n    if (pkgJsonPath) {\n      const pkgJsonContent = await fs.readFile(pkgJsonPath, {\n        encoding: 'utf8',\n      })\n      packageJsonConfig = CommentJson.parse(pkgJsonContent)\n    }\n\n    const config = await hasEslintConfiguration(eslintrcFile, packageJsonConfig)\n    let deps\n\n    if (config.exists) {\n      // Run if ESLint config exists\n      return await lint(\n        baseDir,\n        lintDirs,\n        eslintrcFile,\n        pkgJsonPath,\n        lintDuringBuild,\n        eslintOptions,\n        reportErrorsOnly,\n        maxWarnings,\n        formatter\n      )\n    } else {\n      // Display warning if no ESLint configuration is present during \"next build\"\n      if (lintDuringBuild) {\n        Log.warn(\n          `No ESLint configuration detected. Run ${chalk.bold.cyan(\n            'next lint'\n          )} to begin setup`\n        )\n        return null\n      } else {\n        // Ask user what config they would like to start with for first time \"next lint\" setup\n        const { config: selectedConfig } = strict\n          ? ESLINT_PROMPT_VALUES.find(\n              (opt: { title: string }) => opt.title === 'Strict'\n            )!\n          : await cliPrompt()\n\n        if (selectedConfig == null) {\n          // Show a warning if no option is selected in prompt\n          Log.warn(\n            'If you set up ESLint yourself, we recommend adding the Next.js ESLint plugin. See https://nextjs.org/docs/basic-features/eslint#migrating-existing-config'\n          )\n          return null\n        } else {\n          // Check if necessary deps installed, and install any that are missing\n          deps = await hasNecessaryDependencies(baseDir, requiredPackages)\n          if (deps.missing.length > 0)\n            await installDependencies(baseDir, deps.missing, true)\n\n          // Write default ESLint config.\n          // Check for /pages and src/pages is to make sure this happens in Next.js folder\n          if (\n            existsSync(path.join(baseDir, 'pages')) ||\n            existsSync(path.join(baseDir, 'src/pages'))\n          ) {\n            await writeDefaultConfig(\n              baseDir,\n              config,\n              selectedConfig,\n              eslintrcFile,\n              pkgJsonPath,\n              packageJsonConfig\n            )\n          }\n        }\n\n        Log.ready(\n          `ESLint has successfully been configured. Run ${chalk.bold.cyan(\n            'next lint'\n          )} again to view warnings and errors.`\n        )\n\n        return null\n      }\n    }\n  } catch (err) {\n    throw err\n  }\n}\n"],"names":["runLintCheck","CommentJson","Log","requiredPackages","file","pkg","cliPrompt","console","log","bold","cyan","cliSelect","Promise","resolve","require","default","value","values","valueRenderer","title","recommended","selected","name","underline","yellow","unselected","config","lint","baseDir","lintDirs","eslintrcFile","pkgJsonPath","lintDuringBuild","eslintOptions","reportErrorsOnly","maxWarnings","formatter","mod","ESLint","deps","missing","some","dep","error","resolved","get","eslintVersion","version","CLIEngine","lt","red","options","useEslintrc","baseConfig","errorOnUnmatchedPattern","extensions","cache","eslint","nextEslintPluginIsEnabled","pagesDirRules","configFile","completeConfig","calculateConfigForFile","plugins","includes","pagesDir","updatedPagesDir","rule","rules","replace","warn","lintStart","process","hrtime","results","lintFiles","selectedFormatter","fix","outputFixes","getErrorResults","loadFormatter","formattedResult","format","lintEnd","totalWarnings","reduce","sum","warningCount","output","isError","length","eventInfo","durationInSeconds","lintedFilesCount","lintFix","nextEslintPluginVersion","has","join","dirname","nextEslintPluginErrorsCount","totalNextPluginErrorCount","nextEslintPluginWarningsCount","totalNextPluginWarningCount","err","message","strict","cwd","packageJsonConfig","pkgJsonContent","readFile","encoding","parse","exists","selectedConfig","find","opt","ready"],"mappings":"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"}