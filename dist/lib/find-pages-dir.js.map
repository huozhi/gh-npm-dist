{"version":3,"sources":["../../lib/find-pages-dir.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\n\nexport const existsSync = (f: string): boolean => {\n  try {\n    fs.accessSync(f, fs.constants.F_OK)\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nexport function findPagesDir(dir: string): string {\n  // prioritize ./pages over ./src/pages\n  let curDir = path.join(dir, 'pages')\n  if (existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src/pages')\n  if (existsSync(curDir)) return curDir\n\n  // Check one level up the tree to see if the pages directory might be there\n  if (existsSync(path.join(dir, '..', 'pages'))) {\n    throw new Error(\n      '> No `pages` directory found. Did you mean to run `next` in the parent (`../`) directory?'\n    )\n  }\n\n  throw new Error(\n    \"> Couldn't find a `pages` directory. Please create one under the project root\"\n  )\n}\n"],"names":["findPagesDir","existsSync","f","accessSync","constants","F_OK","_","dir","curDir","join","Error"],"mappings":";;;;QAYgBA,YAAY,GAAZA,YAAY;;AAZb,GAAI,CAAJ,GAAI;AACF,GAAM,CAAN,KAAM;;;;;;AAEhB,KAAK,CAACC,UAAU,IAAIC,CAAS,GAAc,CAAC;IACjD,GAAG,CAAC,CAAC;QAJQ,GAAI,SAKZC,UAAU,CAACD,CAAC,EALJ,GAAI,SAKKE,SAAS,CAACC,IAAI;QAClC,MAAM,CAAC,IAAI;IACb,CAAC,CAAC,KAAK,EAAEC,CAAC,EAAE,CAAC;QACX,MAAM,CAAC,KAAK;IACd,CAAC;AACH,CAAC;QAPYL,UAAU,GAAVA,UAAU;SASPD,YAAY,CAACO,GAAW,EAAU,CAAC;IACjD,EAAsC,AAAtC,oCAAsC;IACtC,GAAG,CAACC,MAAM,GAbK,KAAM,SAaHC,IAAI,CAACF,GAAG,EAAE,CAAO;IACnC,EAAE,EAAEN,UAAU,CAACO,MAAM,GAAG,MAAM,CAACA,MAAM;IAErCA,MAAM,GAhBS,KAAM,SAgBPC,IAAI,CAACF,GAAG,EAAE,CAAW;IACnC,EAAE,EAAEN,UAAU,CAACO,MAAM,GAAG,MAAM,CAACA,MAAM;IAErC,EAA2E,AAA3E,yEAA2E;IAC3E,EAAE,EAAEP,UAAU,CApBC,KAAM,SAoBDQ,IAAI,CAACF,GAAG,EAAE,CAAI,KAAE,CAAO,UAAI,CAAC;QAC9C,KAAK,CAAC,GAAG,CAACG,KAAK,CACb,CAA2F;IAE/F,CAAC;IAED,KAAK,CAAC,GAAG,CAACA,KAAK,CACb,CAA+E;AAEnF,CAAC"}